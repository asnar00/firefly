{
    "cards": [
        {
            "uid": "ts_firefly_graphview_function_user",
            "language": "ts",
            "module": "graphview",
            "kind": "function",
            "name": "user",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function user(id: string) {\n    const parts = id.split(\"_\");\n    return parts[parts.length-1];\n}\n\n",
                    "language": "ts",
                    "iLine": 16,
                    "jLine": 21
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_graphview_class_GraphView",
            "language": "ts",
            "module": "graphview",
            "kind": "class",
            "name": "GraphView",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// manages all top-level DOM nodes inside a container\nexport class GraphView {\n    container: HTMLElement;\n    nodeMap: Map<HTMLElement, Node> = new Map();\n    columns: Node[][] = [];\n    padding: number = 24;\n    arrowsSVG: SVGSVGElement;\n    arrowMap: Map<HTMLElement, Arrow[]> = new Map();\n    htmlFunction : Function;\n    highlightFunction : Function;\n    attentionNode: Node|null;\n    scrolling: boolean = false;\n    xScroll: number = 0;\n    yScroll: number = 0;\n    xScrollTarget: number = 0;\n    yScrollTarget: number = 0;\n    autoScroll: boolean = false;\n    closedNodes: any[] = [];            // nodes we've closed but might reopen, stored as json\n    canvasRect: Rect;                   // bounding-rect of all nodes, or window rect, whichever is bigger\n\n    // setup: pass the div that's going to hold all nodes\n    constructor(container: HTMLElement, htmlFunction: Function, highlightFunction: Function) {\n        this.container = container;\n        this.container.style.zIndex = `-10`;\n        this.htmlFunction = htmlFunction;\n        this.highlightFunction = highlightFunction;\n        this.arrowsSVG = this.initArrows();\n        this.attentionNode = null;\n        this.canvasRect = new Rect(0, 0, document.body.clientWidth, document.body.clientHeight);\n    }\n\n    // given an id, returns the first div with that ID (expected to be unique)\n    find(id: string, parent?:HTMLElement) : HTMLElement | null {\n        if (!parent) parent = this.container;\n        const elementsArray = Array.from(parent.querySelectorAll(`#${id}`));\n        if (elementsArray.length == 0) return null;\n        return elementsArray[0] as HTMLElement;\n    }\n\n    // given a div, returns the userObj of the first node that matches\n    userObj(div: HTMLElement) : any {\n        const node = this.get(div);\n        if (!node) return null;\n        return node.userObj;\n    }\n\n    // given a div, returns the linkDiv that opened it (todo: more than one? IDK)\n    findLink(div: HTMLElement) : HTMLElement | null {\n        const node = this.get(div);\n        return node ? node.linkDiv : null;\n    }\n\n    // closes a div that's open, and all children as well\n    close(div: HTMLElement) {\n        const node = this.get(div)!;\n        if (node) {\n            let nodes = this.allChildren(node);\n            for(let i = 1; i < nodes.length; i++) { \n                this.closedNodes.push(nodes[i].json());\n            }\n            //console.log(\"closed nodes:\");\n            //for(const c of this.closedNodes) { console.log(\"  \", user(c.id)) };\n            for(let node of nodes) { this.disappear(node); }\n        }\n        this.arrangeAll();\n    }\n\n    // pay attention to (div)\n    attention(div: HTMLElement) {\n        this.attentionNode = this.get(div);\n        //console.log(\"attention:\", user(this.attentionNode!.div.id));\n    }\n\n    // animates to nothing over (time) seconds, then closes\n    disappear(node: Node, time: number=0.25): void {\n        let div = node.div;\n        if (node.linkDiv) {\n            this.removeArrow(node.linkDiv, div);\n        } \n        div.style.width = div.scrollWidth + \"px\";\n        div.style.height = div.scrollHeight + \"px\";\n        div.style.transition = `width ${time}s, height ${time}s`;\n        div.offsetWidth;\n        div.offsetHeight;\n        div.style.width = '0'; div.style.height = '0';\n        setTimeout(() => {this.closeSingleNode(node);}, (time-0.1)*1000);\n    }\n\n    allChildren(node: Node) : Node[] {\n        let result : Node[] = [ node ];\n        for(let n of this.nodeMap.values()) {\n            if (n.parentDiv == node.div) result.push(...this.allChildren(n));\n        }\n        return result;\n    }\n\n    closeSingleNode(node: Node) {\n        this.nodeMap.delete(node.div);\n        node.div.remove();\n        node.remove();\n    }\n\n    reopen(id: string, linkID: string, parentID: string, userObj: any, emphasize: boolean=false) {\n        let toOpen : any[] = [];\n\n        let i = this.closedNodes.findIndex(n => n.id == id);        // is new node in closedNodes?\n        if (i == -1) {\n            toOpen = [ { id: id, link: linkID ?? \"null\",            // if no, make a new json version\n                parent: parentID ?? \"null\",\n                emphasize: emphasize,\n                userObj: userObj }];\n        } else {\n            toOpen = this.closedNodes.splice(i, 1);                 // otherwise get it from closedNodes\n        }\n\n        // grab all nodes from closedNodes whose parents are in (tOpen)\n        let iCheck = 0;\n        while(iCheck < toOpen.length) {\n            const p = toOpen[iCheck++];\n            let remaining: any[] = [];\n            for(let c of this.closedNodes) {\n                if (c.parent == p.id) {\n                    toOpen.push(c);\n                } else {\n                    remaining.push(c);\n                }\n            }\n            this.closedNodes = remaining;\n        }\n        //console.log(\"reopen\", user(id));\n        for(const c of toOpen) {\n            //console.log(\"   \", user(c.id));\n        }\n\n        // and open them\n        this.openJsonNodeList(toOpen);\n        this.attentionNode = this.get(this.find(id)!);\n        //console.log(\"attention:\", user(this.attentionNode!.div.id));\n    }\n\n    // opens a new node, generates the HTML\n    open(id: string, linkID: string, parentID: string, userObj: any, emphasize: boolean=false) {\n        if (this.find(id)) return;                      // don't make one if exists already\n        let div = this.htmlFunction(id, userObj);\n        div.style.transition = 'max-width 0.5s, max-height 0.5s, background-color 0.5s';\n        let linkDiv = null;\n        if (linkID != \"\" && parentID != \"\") {\n            let parentDiv = this.find(parentID);\n            if (parentDiv) linkDiv = this.find(linkID, parentDiv); else linkDiv = null;\n        }\n        if (linkDiv) {\n            this.highlightFunction(linkDiv, true);\n        }\n        let node: Node = this.add(div, linkDiv, userObj);\n        if (emphasize) {\n            node!.emphasize = true;\n        }\n    }\n\n    reset() { // close all except main-node\n        for(let i = 1; i < this.columns.length; i++) {\n            for(let node of this.columns[i]) {\n                this.closeSingleNode(node);\n            }\n        }\n        this.columns.splice(1, this.columns.length-1);\n        this.closedNodes = [];\n    }\n\n    openJson(obj: any) {\n        this.openJsonNodeList(obj.nodes);\n        this.closedNodes = obj.closed;\n        //console.log(\"closed nodelist:\", this.closedNodes);\n        this.xScroll = obj.xScroll;\n        this.yScroll = obj.yScroll;\n        scrollTo(this.xScroll, this.yScroll);\n    }\n\n    openJsonNodeList(nodesJson: any[]) {\n        for(let n of nodesJson) {\n            this.open(n.id, n.link, n.parent, n.userObj, n.emphasize);\n        }\n    }\n\n    // adds a div to the manager, and to the container div\n    add(div: HTMLElement, link: HTMLElement | null, userObj: any = null) : Node {\n        this.container.appendChild(div);\n        let parentDiv = (link)? this.findDivContainingLink(link) : null;\n        let xTarget = 0;\n        let yTarget = 0;\n        if (link && parentDiv) {\n            const prect = rect(parentDiv);\n            const brect = rect(link);\n            const crect = rect(div);\n            xTarget = brect.left;\n            yTarget = ((brect.top + brect.bottom)/2) - (crect.height()/2);\n        } else {\n            const crect = rect(div);\n            xTarget = crect.left + 150;\n            yTarget = (window.innerHeight / 2) - (crect.height()/2) - 32;\n        }\n        let node = new Node(this, div, link, parentDiv, userObj);\n        node.setTargetPos(xTarget, yTarget);\n        node.setPos(xTarget, yTarget);\n        this.nodeMap.set(div, node);\n        if (link && parentDiv) {\n            this.addArrow(link, parentDiv, div);\n        }\n        this.arrangeAll();          // todo: call this every frame\n        return node;\n    }\n\n    // emphasizes element (moves shadow forward in space)\n    emphasize(div: HTMLElement, onOff: boolean) {\n        let node = this.get(div);\n        if (!node) return;\n        node.emphasize = onOff; \n        node.updateShadow();\n    }\n\n    // arranges all views : computes xTarget, yTarget for each view\n    arrangeAll() {\n        this.sortColumns();\n        let xPos = this.xMax(this.columns[0]);\n        for(let i = 1; i < this.columns.length; i++) {\n            let groups : Node[][] = this.splitColumnIntoGroups(i);\n            for (let group of groups) {\n                this.spaceNodesInGroup(group, xPos);\n            }\n            this.spaceGroupsVertically(groups);\n            xPos = this.xMax(this.columns[i]);\n        }\n        const widthInPixels = getBodyWidth();\n        const newWidth = Math.max(window.innerWidth, xPos);\n        document.body.style.width = `${newWidth}px`;\n    }\n\n    // sort nodes within each column by link order\n    sortColumns() {\n        for(let col of this.columns) {\n            col.sort((a, b) => ((a.linkIndex > b.linkIndex) ? 1 : ((a.linkIndex < b.linkIndex) ? -1 : 0)));\n        }\n    }\n\n    // right edge of column\n    xMax(nodes: Node[]) : number {\n        let x = 0;\n        for (const node of nodes) {\n            x = Math.max(x, node.targetRect().right + (this.padding * 2));\n        }\n        return x;\n    }\n\n    // top edge of colum at xPos, or null if none intersect\n    yRange(xPos: number) : [number | null, number | null] {\n        for(let i=0; i < this.columns.length; i++) {\n            let xMin = Infinity;\n            let xMax = -1;\n            let yBottom = -1;\n            let yTop = Infinity;\n            for(let node of this.columns[i]) {\n                const r = rect(node.div);\n                xMin = Math.min(r.left, xMin);\n                xMax = Math.max(r.right + this.padding*2, xMax);\n                yTop = Math.min(r.top, yTop);\n                yBottom = Math.max(r.bottom, yBottom);\n            }\n            if (xMin <= xPos && xMax >= xPos) {\n                return [yTop, yBottom];\n            }\n        }\n        return [null, null];\n    }\n\n    // update\n    update() {\n        if (this.anyNodeSizeChanged()) {\n            this.arrangeAll();\n        }\n        this.updateCanvas();\n        this.updateScroll();\n        for(let node of this.nodeMap.values()) {\n            node.update();\n        }\n        this.updateArrows();\n    }\n\n    updateCanvas() {\n        let bounds = new Rect(0,0, window.innerWidth, window.innerHeight);\n        let padding = 10;\n        \n        // Calculate canvas rect based on node positions/sizes\n        // note: bounds may be negative, that's fine\n        for (const node of this.nodeMap.values()) {\n            const r = node.targetRect();\n            bounds.left = Math.min(bounds.left, r.left - padding);\n            bounds.top = Math.min(bounds.top, r.top - padding);\n            bounds.right = Math.max(bounds.right, r.right + padding);\n            bounds.bottom = Math.max(bounds.bottom, r.bottom + padding);\n        }\n        bounds.left = Math.floor(bounds.left);\n        bounds.top = Math.floor(bounds.top);\n        bounds.right = Math.ceil(bounds.right);\n        bounds.bottom = Math.ceil(bounds.bottom);\n        if (bounds.left == this.canvasRect.left &&\n            bounds.top == this.canvasRect.top &&\n            bounds.right == this.canvasRect.right &&\n            bounds.bottom == this.canvasRect.bottom) return;\n\n        const deltaX = bounds.left - this.canvasRect.left;\n        const deltaY = bounds.top - this.canvasRect.top;\n        \n        this.canvasRect = bounds;\n        const xSize = this.canvasRect.width();\n        const ySize = this.canvasRect.height();\n        if (xSize != this.container.offsetWidth ||\n            ySize != this.container.offsetHeight) {\n            this.container.style.width = `${xSize}px`;\n            this.container.style.height = `${ySize}px`;\n            document.body.style.width = `${xSize}px`;\n            document.body.style.height = `${ySize}px`;\n            this.arrowsSVG.setAttribute('viewBox', `0 0 ${xSize} ${ySize}`);\n            this.arrowsSVG.style.width = `${xSize}px`;\n            this.arrowsSVG.style.height = `${ySize}px`;\n        }\n\n        // If any code-container div has drifted upwards or left, adjust all divs\n        if (deltaX != 0 || deltaY != 0) {\n            for (let child of Array.from(this.container.children)) {\n                if (child instanceof HTMLElement) {\n                    let div = child as HTMLElement;\n                    div.style.left = `${div.offsetLeft - deltaX}px`;\n                    div.style.top = `${div.offsetTop - deltaY}px`;\n                }\n            }\n            window.scrollTo(window.scrollX - deltaX, window.scrollY - deltaY);\n        }\n    }\n\n    updateScroll() {\n        if (this.attentionNode && \n            (this.attentionNode.sizeChanged() ||\n             this.attentionNode.moving())) {\n                if (this.attentionNode.div.parentElement) {\n                    [this.xScrollTarget, this.yScrollTarget] = scrollToView(this.attentionNode.div);\n                } else {\n                    this.attentionNode = null;\n                }\n        }\n        if (window.scrollX == this.xScroll &&\n            window.scrollY == this.yScroll) {\n            if (this.scrolling && this.attentionNode) {\n                this.attentionNode = null;\n            }\n            this.scrolling = false;\n        } else {\n            this.scrolling = true;\n        }\n        this.xScroll = window.scrollX;\n        this.yScroll = window.scrollY;\n    }\n\n    // ------------------ private ----------------------------\n\n    // returns the Node associated with a top-level div\n    get(div: HTMLElement) : Node | null {\n        let node = this.nodeMap.get(div);\n        return node ? node : null;\n    }\n\n    // find the top-level div that contains a link elemeent\n    findDivContainingLink(link: HTMLElement | null): HTMLElement | null {\n        if (!link) return null;\n        let parent = link.parentElement;\n        while (parent && parent.parentElement !== this.container) {\n            parent = parent.parentElement;\n        }\n        return (parent) ? parent : null;\n    }\n\n    anyNodeSizeChanged() : boolean {\n        for(let node of this.nodeMap.values()) {\n            if (node.sizeChanged())\n                return true;\n        }\n        return false;\n    }\n\n    splitColumnIntoGroups(i: number) : Node[][] {\n        let groups : Node[][] = [];\n        for(const p of this.columns[i-1]) {\n            let group : Node[] = [];\n            for(const node of this.columns[i]) {\n                if (node.parentDiv!.id === p.div.id) {\n                    group.push(node);\n                }\n            }\n            if (group.length > 0) {\n                groups.push(group);\n            }\n        }\n        return groups;\n    }\n\n    // within a group (nodes with same parent), space out around centerline\n    spaceNodesInGroup(group: Node[], xPos: number) {\n        // first find the total height of the group, plus padding\n        let sumHeight = (group.length-1) * this.padding;\n        for(const node of group) {\n            sumHeight += node.targetRect().height();\n        }\n\n        // then find the centerline of the group's parent\n        const parentDiv = group[0].parentDiv!;\n        const parentNode = this.get(parentDiv)!;\n        const parentRect = parentNode.targetRect();\n        const centerLine = (parentRect.top + parentRect.bottom)/2;\n\n        // now space group out vertically around the centerline\n        let yPos = Math.max(this.padding, centerLine - (sumHeight/2));\n        let pivot = (group.length-1)/2;\n        for (let i = 0; i < group.length; i++) {\n            let node = group[i];\n            let xOffset = (i < pivot) ? i : (pivot - (i - pivot));\n            node.setTargetPos(xPos + (xOffset * this.padding), yPos);\n            yPos += node.targetRect().height() + this.padding;\n        }\n    }\n    \n    // space groups out vertically so they don't overlap\n    spaceGroupsVertically(groups: Node[][]) {\n        if (groups.length < 2) return;\n        const even = (groups.length % 2) == 0;\n        const iPivot = Math.floor((groups.length-1)/2);\n        if (even) {\n            this.checkGroups(groups[iPivot], groups[iPivot+1], 0.5);\n        }\n        for(let i=iPivot; i>0; i--) {\n            this.checkGroups(groups[i-1], groups[1], 0);\n        }\n        for(let i=iPivot; i < groups.length-1; i++) {\n            this.checkGroups(groups[i], groups[i+1], 1);\n        }\n    }\n\n    checkGroups(groupA: Node[], groupB: Node[], mix: number) {\n        const bottomA = groupA[groupA.length-1].targetRect().bottom;\n        const topB = groupB[0].targetRect().top;\n        const overlap =  (bottomA + (this.padding*2)) - topB;\n        if (overlap < 0) return;\n        const moveA = -(overlap * (1 - mix));\n        const moveB = overlap * mix;\n        this.moveGroupVertically(groupA, moveA);\n        this.moveGroupVertically(groupB, moveB);\n    }\n\n    moveGroupVertically(group: Node[], yMove: number) {\n        for(let node of group) {\n            node.yTarget += yMove;\n        }\n    }\n\n    //----------------------------- internal --------------------------------\n\n    // add a Node to the correct column, keep them sorted vertically\n    addToColumnArray(node : Node) {\n        while (this.columns.length <= node.column) {\n            this.columns.push([]);\n        }\n        this.columns[node.column].push(node);\n    }\n\n    //----------------------------- arrows ---------------------------------\n\n    // set up the SVG arrow renderer\n    initArrows() : SVGSVGElement {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.style.position = 'absolute';\n        svg.style.width = '100%';\n        svg.style.height = '100%';\n        svg.style.pointerEvents = 'none';\n        svg.style.zIndex = '1000';\n        this.container.appendChild(svg);\n        return svg;\n    }\n\n    addArrow(linkDiv: HTMLElement, parentDiv: HTMLElement, div: HTMLElement) {\n        let arrow = new Arrow(linkDiv, parentDiv, div);\n        if (!this.arrowMap.has(linkDiv)) { this.arrowMap.set(linkDiv, []); }\n        this.arrowMap.get(linkDiv)!.push(arrow);\n        arrow.addToSVG(this.arrowsSVG);\n    }\n\n    removeArrow(linkDiv: HTMLElement, div: HTMLElement) {\n        let arrows : Arrow[] | undefined = this.arrowMap.get(linkDiv);\n        if (arrows) {\n            const index = arrows.findIndex(a => a.div === div);\n            if (index >= 0) {\n                let arrow: Arrow = arrows[index];\n                arrows.splice(index, 1);\n                arrow.removeFromSVG();\n            }\n        }\n    }\n\n    updateArrows() {\n        for (let arrows of this.arrowMap.values()) {\n            for (let arrow of arrows) {\n                arrow.update();\n            }\n        }\n    }\n\n    json() : any {\n        let node : Node = this.columns[0][0];\n        let nodes: Node[] = this.allChildren(node);\n        return { xScroll: this.xScroll, yScroll: this.yScroll,\n                 nodes:  nodes.map(node => node.json()),\n                 closed: this.closedNodes };\n    }\n}\n\n",
                    "language": "ts",
                    "iLine": 22,
                    "jLine": 544
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 137,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 169,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 271,
                    "jChar": 276
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 375,
                    "jChar": 379
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 674,
                    "jChar": 678
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 1203,
                    "jChar": 1207
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_userObj"
                    ],
                    "iChar": 1848,
                    "jChar": 1855
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 2063,
                    "jChar": 2070
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json",
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 2379,
                    "jChar": 2383
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2899,
                    "jChar": 2903
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 2955,
                    "jChar": 2958
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 2977,
                    "jChar": 2984
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 3022,
                    "jChar": 3029
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 3066,
                    "jChar": 3071
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 3116,
                    "jChar": 3122
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 3285,
                    "jChar": 3290
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 3308,
                    "jChar": 3314
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3425,
                    "jChar": 3429
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3433,
                    "jChar": 3437
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3463,
                    "jChar": 3467
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv",
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 3546,
                    "jChar": 3555
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 3564,
                    "jChar": 3567
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3672,
                    "jChar": 3676
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 3713,
                    "jChar": 3716
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 3732,
                    "jChar": 3735
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 3759,
                    "jChar": 3765
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_parent"
                    ],
                    "iChar": 4667,
                    "jChar": 4673
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 5894,
                    "jChar": 5898
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_reset"
                    ],
                    "iChar": 6016,
                    "jChar": 6021
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollTo"
                    ],
                    "iChar": 6566,
                    "jChar": 6574
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_parent"
                    ],
                    "iChar": 6724,
                    "jChar": 6730
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_userObj"
                    ],
                    "iChar": 6734,
                    "jChar": 6741
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_emphasize"
                    ],
                    "iChar": 6745,
                    "jChar": 6754
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 6908,
                    "jChar": 6912
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 7138,
                    "jChar": 7142
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 7181,
                    "jChar": 7185
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 7219,
                    "jChar": 7223
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 7258,
                    "jChar": 7262
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 7294,
                    "jChar": 7297
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 7306,
                    "jChar": 7312
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 7326,
                    "jChar": 7332
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 7382,
                    "jChar": 7386
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 7421,
                    "jChar": 7425
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 7489,
                    "jChar": 7495
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 7540,
                    "jChar": 7544
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setTargetPos"
                    ],
                    "iChar": 7596,
                    "jChar": 7608
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 7641,
                    "jChar": 7647
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_emphasize"
                    ],
                    "iChar": 8073,
                    "jChar": 8082
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 8106,
                    "jChar": 8118
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 8371,
                    "jChar": 8375
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getBodyWidth"
                    ],
                    "iChar": 8655,
                    "jChar": 8667
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 8759,
                    "jChar": 8764
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 8936,
                    "jChar": 8945
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 8950,
                    "jChar": 8959
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 8971,
                    "jChar": 8980
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 8985,
                    "jChar": 8994
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 9070,
                    "jChar": 9074
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 9177,
                    "jChar": 9187
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 9190,
                    "jChar": 9195
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 9623,
                    "jChar": 9627
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 9633,
                    "jChar": 9636
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 9673,
                    "jChar": 9677
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 9720,
                    "jChar": 9725
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 9785,
                    "jChar": 9788
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 9834,
                    "jChar": 9840
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 10249,
                    "jChar": 10255
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 10351,
                    "jChar": 10355
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 10631,
                    "jChar": 10641
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 10664,
                    "jChar": 10668
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 10687,
                    "jChar": 10691
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 10695,
                    "jChar": 10699
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 10731,
                    "jChar": 10734
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 10753,
                    "jChar": 10756
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 10760,
                    "jChar": 10763
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 10795,
                    "jChar": 10800
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 10819,
                    "jChar": 10824
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 10828,
                    "jChar": 10833
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 10865,
                    "jChar": 10871
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 10890,
                    "jChar": 10896
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 10900,
                    "jChar": 10906
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 10944,
                    "jChar": 10948
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 10969,
                    "jChar": 10973
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 10991,
                    "jChar": 10994
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 11015,
                    "jChar": 11018
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 11036,
                    "jChar": 11041
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 11061,
                    "jChar": 11066
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 11084,
                    "jChar": 11090
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 11110,
                    "jChar": 11116
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 11138,
                    "jChar": 11142
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 11162,
                    "jChar": 11166
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 11189,
                    "jChar": 11192
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 11212,
                    "jChar": 11215
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 11238,
                    "jChar": 11243
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 11263,
                    "jChar": 11268
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 11291,
                    "jChar": 11297
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 11317,
                    "jChar": 11323
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 11364,
                    "jChar": 11368
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 11387,
                    "jChar": 11391
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 11423,
                    "jChar": 11426
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 11445,
                    "jChar": 11448
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 11531,
                    "jChar": 11536
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 11578,
                    "jChar": 11584
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 11724,
                    "jChar": 11729
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 11779,
                    "jChar": 11785
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 11834,
                    "jChar": 11839
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 11888,
                    "jChar": 11894
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 12021,
                    "jChar": 12026
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 12076,
                    "jChar": 12082
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 12437,
                    "jChar": 12441
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 12506,
                    "jChar": 12509
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollTo"
                    ],
                    "iChar": 12594,
                    "jChar": 12602
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 12759,
                    "jChar": 12770
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_moving"
                    ],
                    "iChar": 12808,
                    "jChar": 12814
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 12860,
                    "jChar": 12863
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 12944,
                    "jChar": 12956
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 12976,
                    "jChar": 12979
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 13618,
                    "jChar": 13622
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 14199,
                    "jChar": 14210
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 14321,
                    "jChar": 14325
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 14353,
                    "jChar": 14357
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 14436,
                    "jChar": 14440
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv"
                    ],
                    "iChar": 14523,
                    "jChar": 14532
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 14543,
                    "jChar": 14546
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 14854,
                    "jChar": 14858
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 15066,
                    "jChar": 15076
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 15079,
                    "jChar": 15085
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv",
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 15193,
                    "jChar": 15202
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 15292,
                    "jChar": 15302
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 15345,
                    "jChar": 15348
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 15362,
                    "jChar": 15368
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setTargetPos"
                    ],
                    "iChar": 15715,
                    "jChar": 15727
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 15793,
                    "jChar": 15803
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 15806,
                    "jChar": 15812
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 15943,
                    "jChar": 15947
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 16453,
                    "jChar": 16457
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 16469,
                    "jChar": 16473
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 16540,
                    "jChar": 16550
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 16553,
                    "jChar": 16559
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 16592,
                    "jChar": 16602
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 16605,
                    "jChar": 16608
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 16924,
                    "jChar": 16928
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 16999,
                    "jChar": 17006
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 17210,
                    "jChar": 17214
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 17261,
                    "jChar": 17267
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 17342,
                    "jChar": 17348
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 17661,
                    "jChar": 17666
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 17695,
                    "jChar": 17701
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 17960,
                    "jChar": 17965
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_addToSVG"
                    ],
                    "iChar": 18132,
                    "jChar": 18140
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 18244,
                    "jChar": 18249
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 18366,
                    "jChar": 18369
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 18437,
                    "jChar": 18442
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_removeFromSVG"
                    ],
                    "iChar": 18523,
                    "jChar": 18536
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_update"
                    ],
                    "iChar": 18707,
                    "jChar": 18713
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 18786,
                    "jChar": 18790
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 18832,
                    "jChar": 18836
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 18976,
                    "jChar": 18980
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 73,
                    "jChar": 82
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 1284,
                    "jChar": 1293
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 7,
                    "jChar": 16
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 18,
                    "jChar": 27
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 18,
                    "jChar": 27
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_graph"
                    ],
                    "iChar": 116,
                    "jChar": 125
                }
            ],
            "children": [
                "ts_firefly_graphview_property_GraphView_container",
                "ts_firefly_graphview_property_GraphView_nodeMap",
                "ts_firefly_graphview_property_GraphView_columns",
                "ts_firefly_graphview_property_GraphView_padding",
                "ts_firefly_graphview_property_GraphView_arrowsSVG",
                "ts_firefly_graphview_property_GraphView_arrowMap",
                "ts_firefly_graphview_property_GraphView_htmlFunction",
                "ts_firefly_graphview_property_GraphView_highlightFunction",
                "ts_firefly_graphview_property_GraphView_attentionNode",
                "ts_firefly_graphview_property_GraphView_scrolling",
                "ts_firefly_graphview_property_GraphView_xScroll",
                "ts_firefly_graphview_property_GraphView_yScroll",
                "ts_firefly_graphview_property_GraphView_xScrollTarget",
                "ts_firefly_graphview_property_GraphView_yScrollTarget",
                "ts_firefly_graphview_property_GraphView_autoScroll",
                "ts_firefly_graphview_property_GraphView_closedNodes",
                "ts_firefly_graphview_property_GraphView_canvasRect",
                "ts_firefly_graphview_method_GraphView_constructor",
                "ts_firefly_graphview_method_GraphView_find",
                "ts_firefly_graphview_method_GraphView_userObj",
                "ts_firefly_graphview_method_GraphView_findLink",
                "ts_firefly_graphview_method_GraphView_close",
                "ts_firefly_graphview_method_GraphView_attention",
                "ts_firefly_graphview_method_GraphView_disappear",
                "ts_firefly_graphview_method_GraphView_allChildren",
                "ts_firefly_graphview_method_GraphView_closeSingleNode",
                "ts_firefly_graphview_method_GraphView_reopen",
                "ts_firefly_graphview_method_GraphView_open",
                "ts_firefly_graphview_method_GraphView_reset",
                "ts_firefly_graphview_method_GraphView_openJson",
                "ts_firefly_graphview_method_GraphView_openJsonNodeList",
                "ts_firefly_graphview_method_GraphView_add",
                "ts_firefly_graphview_method_GraphView_emphasize",
                "ts_firefly_graphview_method_GraphView_arrangeAll",
                "ts_firefly_graphview_method_GraphView_sortColumns",
                "ts_firefly_graphview_method_GraphView_xMax",
                "ts_firefly_graphview_method_GraphView_yRange",
                "ts_firefly_graphview_method_GraphView_update",
                "ts_firefly_graphview_method_GraphView_updateCanvas",
                "ts_firefly_graphview_method_GraphView_updateScroll",
                "ts_firefly_graphview_unknown_GraphView_unknown",
                "ts_firefly_graphview_method_GraphView_get",
                "ts_firefly_graphview_method_GraphView_findDivContainingLink",
                "ts_firefly_graphview_method_GraphView_anyNodeSizeChanged",
                "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups",
                "ts_firefly_graphview_method_GraphView_spaceNodesInGroup",
                "ts_firefly_graphview_method_GraphView_spaceGroupsVertically",
                "ts_firefly_graphview_method_GraphView_checkGroups",
                "ts_firefly_graphview_method_GraphView_moveGroupVertically",
                "ts_firefly_graphview_unknown_GraphView_unknown",
                "ts_firefly_graphview_method_GraphView_addToColumnArray",
                "ts_firefly_graphview_unknown_GraphView_unknown",
                "ts_firefly_graphview_method_GraphView_initArrows",
                "ts_firefly_graphview_method_GraphView_addArrow",
                "ts_firefly_graphview_method_GraphView_removeArrow",
                "ts_firefly_graphview_method_GraphView_updateArrows",
                "ts_firefly_graphview_method_GraphView_json"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_graphview_class_Node",
            "language": "ts",
            "module": "graphview",
            "kind": "class",
            "name": "Node",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// stores information about a div we're managing\nclass Node {\n    graph: GraphView;                       // the view we're a part of\n    userObj: any;                           // per-node user info\n    div: HTMLElement;                       // the div we're tracking\n    linkDiv: HTMLElement | null;            // the link that triggered this\n    parentDiv: HTMLElement | null;          // the parent div of the link div that opened this node\n    parentNode: Node | null = null;         // the parent node corresponding to parentDiv\n    column: number = 0;                     // column we're in (first one zero)\n    x: number = 0;                          // position right now\n    y: number = 0;                          // ..\n    xTarget: number = 0;                    // where we're trying to get to, to avoid others\n    yTarget: number = 0;                    // ..\n    width: number =0;                       // width on last frame, so we can react to animation\n    height: number =0;                      // ..\n    shadow: HTMLElement;                    // the shadow, all-important :-)\n    emphasize: boolean = false;             // if set, comes forward in the stack\n    linkIndex: string = \"\";                 // sort index for vertical ordering\n\n    constructor(view: GraphView, div: HTMLElement, linkDiv: HTMLElement | null, parentDiv: HTMLElement | null, userObj: any =null) {\n        this.graph = view;\n        this.userObj = userObj;\n        if (parentDiv === undefined) {\n            console.log(\"WARNING: parentDiv undefined!\");\n        }\n        this.div = div; this.linkDiv = linkDiv; this.parentDiv = parentDiv;\n        if (parentDiv) { \n            this.column = this.graph.get(parentDiv)!.column + 1;\n            this.parentNode = this.graph.get(parentDiv);\n            this.linkIndex = this.computeLinkIndex();\n        }\n        this.graph.addToColumnArray(this);\n\n        this.shadow = element(`<div class=\"shadow\"></div>`);\n        this.graph.container.appendChild(this.shadow);\n        this.width = div.clientWidth; this.height = div.clientHeight;\n    }\n\n    remove() {\n        this.graph.columns[this.column] = this.graph.columns[this.column].filter(item => item !== this);\n        this.shadow.remove();\n    }\n\n    setTargetPos(x: number, y: number) {\n        this.xTarget = x;\n        this.yTarget = y;\n    }\n\n    setPos(x: number, y: number) {\n        this.x = x; this.y = y;\n        this.div.style.left = `${x - this.graph.canvasRect.left}px`;\n        this.div.style.top = `${y - this.graph.canvasRect.top}px`;\n    }\n\n    targetRect() : Rect {\n        const r = rect(this.div);\n        return new Rect(this.xTarget, this.yTarget, this.xTarget + r.width(), this.yTarget + r.height());\n    }\n\n    sizeChanged() : boolean {\n        return (this.width != this.div.clientWidth ||\n                this.height != this.div.clientHeight);\n    }\n\n    moving() : boolean {\n        return (this.x != this.xTarget || this.y != this.yTarget);\n    }\n    \n    update() {\n        const dx = this.xTarget - this.x;\n        const dy = this.yTarget - this.y;\n        const x = (Math.abs(dx)<=1) ? this.xTarget : (this.x + dx*0.1);\n        const y = (Math.abs(dy)<=1) ? this.yTarget : (this.y + dy*0.1);\n        this.setPos(x, y);\n        this.updateShadow();\n        this.width = this.div.clientWidth; this.height = this.div.clientHeight;\n    }\n\n    computeLinkIndex() : string {\n        let result = \"\";\n        let digit = 1;\n        let node : Node | null = this;\n        while(node) {\n            if (node.linkDiv) {\n                let i = getChildNodeIndex(node.linkDiv).toString().padStart(3, '0');\n                result = (result==\"\") ? i : i + '.' + result;\n            }\n            node = node.parentNode;\n        }\n        return result;\n    }\n\n    updateShadow() {\n        const sr = rect(this.div);\n        const wh = window.innerHeight;\n        let sy = (this.emphasize) ? (sr.bottom + 150) : (sr.bottom + 50);\n        sy = Math.max(wh/2+20, sy);\n        this.shadow.style.left = `${sr.left}px`;\n        this.shadow.style.top = `${sy}px`;\n        this.shadow.style.width = `${sr.width()}px`;\n        this.shadow.style.height = `1px`;\n        this.shadow.style.zIndex = `-1`;\n    }\n\n    json() : any {\n        return { id: this.div.id,\n                 link: this.linkDiv?.id ?? \"null\",\n                 parent: this.parentDiv?.id ?? \"null\",\n                 emphasize: this.emphasize,\n                 userObj: this.userObj };\n    }\n}\n",
                    "language": "ts",
                    "iLine": 545,
                    "jLine": 657
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_graph"
                    ],
                    "iChar": 66,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 73,
                    "jChar": 82
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 1284,
                    "jChar": 1293
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 1700,
                    "jChar": 1703
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 1769,
                    "jChar": 1772
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 1868,
                    "jChar": 1884
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 1915,
                    "jChar": 1922
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 1973,
                    "jChar": 1982
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 2120,
                    "jChar": 2127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 2154,
                    "jChar": 2161
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 2433,
                    "jChar": 2437
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 2502,
                    "jChar": 2505
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 2572,
                    "jChar": 2576
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 2597,
                    "jChar": 2601
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 2632,
                    "jChar": 2636
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width",
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 2682,
                    "jChar": 2687
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 2708,
                    "jChar": 2714
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 3525,
                    "jChar": 3532
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getChildNodeIndex"
                    ],
                    "iChar": 3560,
                    "jChar": 3577
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 3583,
                    "jChar": 3590
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentNode"
                    ],
                    "iChar": 3721,
                    "jChar": 3731
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 3813,
                    "jChar": 3817
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 3908,
                    "jChar": 3914
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 3928,
                    "jChar": 3934
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 4004,
                    "jChar": 4008
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 4053,
                    "jChar": 4056
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 4096,
                    "jChar": 4101
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 4149,
                    "jChar": 4155
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 137,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 169,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 375,
                    "jChar": 379
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 2899,
                    "jChar": 2903
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3425,
                    "jChar": 3429
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3433,
                    "jChar": 3437
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3463,
                    "jChar": 3467
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3672,
                    "jChar": 3676
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 5894,
                    "jChar": 5898
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 6908,
                    "jChar": 6912
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7540,
                    "jChar": 7544
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8371,
                    "jChar": 8375
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9070,
                    "jChar": 9074
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 13618,
                    "jChar": 13622
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14321,
                    "jChar": 14325
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14353,
                    "jChar": 14357
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14436,
                    "jChar": 14440
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14854,
                    "jChar": 14858
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15943,
                    "jChar": 15947
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16453,
                    "jChar": 16457
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16469,
                    "jChar": 16473
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16924,
                    "jChar": 16928
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 17210,
                    "jChar": 17214
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18786,
                    "jChar": 18790
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18832,
                    "jChar": 18836
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 26,
                    "jChar": 30
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 9,
                    "jChar": 13
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 15,
                    "jChar": 19
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 72,
                    "jChar": 76
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 18,
                    "jChar": 22
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 26,
                    "jChar": 30
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 52,
                    "jChar": 56
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 22,
                    "jChar": 26
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 639,
                    "jChar": 643
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 126,
                    "jChar": 130
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 694,
                    "jChar": 698
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 218,
                    "jChar": 222
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_xMax"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 76,
                    "jChar": 80
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 35,
                    "jChar": 39
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 63,
                    "jChar": 67
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 138,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 97,
                    "jChar": 101
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceGroupsVertically"
                    ],
                    "iChar": 83,
                    "jChar": 87
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 20,
                    "jChar": 24
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_moveGroupVertically"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 89,
                    "jChar": 93
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 84,
                    "jChar": 88
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentNode"
                    ],
                    "iChar": 12,
                    "jChar": 16
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_computeLinkIndex"
                    ],
                    "iChar": 85,
                    "jChar": 89
                }
            ],
            "children": [
                "ts_firefly_graphview_property_Node_graph",
                "ts_firefly_graphview_property_Node_userObj",
                "ts_firefly_graphview_property_Node_div",
                "ts_firefly_graphview_property_Node_linkDiv",
                "ts_firefly_graphview_property_Node_parentDiv",
                "ts_firefly_graphview_property_Node_parentNode",
                "ts_firefly_graphview_property_Node_column",
                "ts_firefly_graphview_property_Node_x",
                "ts_firefly_graphview_property_Node_y",
                "ts_firefly_graphview_property_Node_xTarget",
                "ts_firefly_graphview_property_Node_yTarget",
                "ts_firefly_graphview_property_Node_width",
                "ts_firefly_graphview_property_Node_height",
                "ts_firefly_graphview_property_Node_shadow",
                "ts_firefly_graphview_property_Node_emphasize",
                "ts_firefly_graphview_property_Node_linkIndex",
                "ts_firefly_graphview_method_Node_constructor",
                "ts_firefly_graphview_method_Node_remove",
                "ts_firefly_graphview_method_Node_setTargetPos",
                "ts_firefly_graphview_method_Node_setPos",
                "ts_firefly_graphview_method_Node_targetRect",
                "ts_firefly_graphview_method_Node_sizeChanged",
                "ts_firefly_graphview_method_Node_moving",
                "ts_firefly_graphview_method_Node_update",
                "ts_firefly_graphview_method_Node_computeLinkIndex",
                "ts_firefly_graphview_method_Node_updateShadow",
                "ts_firefly_graphview_method_Node_json"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_graphview_class_Arrow",
            "language": "ts",
            "module": "graphview",
            "kind": "class",
            "name": "Arrow",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Arrow {\n    linkDiv: HTMLElement;\n    parentDiv: HTMLElement;\n    div: HTMLElement;\n    drawRect: Rect = new Rect(0,0,0,0);\n    xVertical: number = 0;\n    path: SVGPathElement;\n    constructor(linkDiv: HTMLElement, parentDiv: HTMLElement, div: HTMLElement) {\n        this.linkDiv = linkDiv; this.parentDiv = parentDiv; this.div = div;\n        this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        this.path.setAttribute('stroke', '#87bdb5');\n        this.path.setAttribute('stroke-width', '3');\n        this.path.setAttribute('stroke-opacity', '1');\n        this.path.setAttribute('fill', 'transparent');\n    }\n    addToSVG(svg: SVGSVGElement) {\n        svg.appendChild(this.path);\n    }\n    removeFromSVG() {\n        this.path.remove();\n    }\n    update() {\n        this.initDrawRect();\n        this.updatePath();\n    }\n    initDrawRect() {\n        const parentRect = rect(this.parentDiv);\n        const linkRect = rect(this.linkDiv);\n        const targetRect = rect(this.div);\n        const xFrom = parentRect.right + 2;\n        let yFrom = (linkRect.top + linkRect.bottom)/2;\n        yFrom = Math.max(yFrom, parentRect.top + 12);\n        yFrom = Math.min(yFrom, parentRect.bottom - 12);\n        const xTo = targetRect.left - 2;\n        let yTo = yFrom;\n        yTo = Math.max(yTo, targetRect.top + 12);\n        yTo = Math.min(yTo, targetRect.bottom - 12);\n        this.drawRect = new Rect(xFrom, yFrom, xTo, yTo);\n        this.xVertical = (xFrom + xTo)/2;\n    }\n    updatePath() {\n        /*if (!document.body.contains(this.linkDiv) || !document.body.contains(this.div)) {\n            this.removeFromSVG();\n            return;\n        }*/\n        const startX = this.drawRect.left;\n        const startY = this.drawRect.top;\n        const endX = this.drawRect.right;\n        const endY = this.drawRect.bottom;\n        const cornerRadius = Math.min(Math.abs(endY-startY)/2, 10);\n        const midX = this.xVertical;\n        const vs = (endY < startY) ? -1 : +1;\n\n        const d = [\n            `M ${startX} ${startY}`,\n            `H ${midX - cornerRadius}`,\n            `Q ${midX} ${startY} ${midX} ${startY + vs*cornerRadius}`,\n            `V ${endY - vs*cornerRadius}`,\n            `Q ${midX} ${endY} ${midX + cornerRadius} ${endY}`,\n            `H ${endX}`,\n        ].join(' ');\n\n        this.path.setAttribute('d', d);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 658,
                    "jLine": 723
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 104,
                    "jChar": 108
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 115,
                    "jChar": 119
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 905,
                    "jChar": 909
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 952,
                    "jChar": 956
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 999,
                    "jChar": 1003
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 1048,
                    "jChar": 1053
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 1089,
                    "jChar": 1092
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 1104,
                    "jChar": 1110
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 1158,
                    "jChar": 1161
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 1212,
                    "jChar": 1218
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 1257,
                    "jChar": 1261
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 1331,
                    "jChar": 1334
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 1381,
                    "jChar": 1387
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 1423,
                    "jChar": 1427
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 1715,
                    "jChar": 1719
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 1758,
                    "jChar": 1761
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 1798,
                    "jChar": 1803
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 1840,
                    "jChar": 1846
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 271,
                    "jChar": 276
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 17960,
                    "jChar": 17965
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18244,
                    "jChar": 18249
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18437,
                    "jChar": 18442
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowMap"
                    ],
                    "iChar": 27,
                    "jChar": 32
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 95,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 71,
                    "jChar": 76
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 248,
                    "jChar": 253
                }
            ],
            "children": [
                "ts_firefly_graphview_property_Arrow_linkDiv",
                "ts_firefly_graphview_property_Arrow_parentDiv",
                "ts_firefly_graphview_property_Arrow_div",
                "ts_firefly_graphview_property_Arrow_drawRect",
                "ts_firefly_graphview_property_Arrow_xVertical",
                "ts_firefly_graphview_property_Arrow_path",
                "ts_firefly_graphview_method_Arrow_constructor",
                "ts_firefly_graphview_method_Arrow_addToSVG",
                "ts_firefly_graphview_method_Arrow_removeFromSVG",
                "ts_firefly_graphview_method_Arrow_update",
                "ts_firefly_graphview_method_Arrow_initDrawRect",
                "ts_firefly_graphview_method_Arrow_updatePath"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_container",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "container",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "container: HTMLElement;",
                    "language": "ts",
                    "iLine": 26,
                    "jLine": 26
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 1973,
                    "jChar": 1982
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 154,
                    "jChar": 163
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 186,
                    "jChar": 195
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_find"
                    ],
                    "iChar": 167,
                    "jChar": 176
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 142,
                    "jChar": 151
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1197,
                    "jChar": 1206
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1244,
                    "jChar": 1253
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1283,
                    "jChar": 1292
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1334,
                    "jChar": 1343
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1815,
                    "jChar": 1824
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findDivContainingLink"
                    ],
                    "iChar": 242,
                    "jChar": 251
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_initArrows"
                    ],
                    "iChar": 319,
                    "jChar": 328
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 651,
                    "jChar": 660
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_nodeMap",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "nodeMap",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "nodeMap: Map<HTMLElement, Node> = new Map();",
                    "language": "ts",
                    "iLine": 27,
                    "jLine": 27
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 26,
                    "jChar": 30
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 93,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 39,
                    "jChar": 46
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 822,
                    "jChar": 829
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 166,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 251,
                    "jChar": 258
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 110,
                    "jChar": 117
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_anyNodeSizeChanged"
                    ],
                    "iChar": 58,
                    "jChar": 65
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_columns",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "columns",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "columns: Node[][] = [];",
                    "language": "ts",
                    "iLine": 28,
                    "jLine": 28
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 9,
                    "jChar": 13
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2120,
                    "jChar": 2127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2154,
                    "jChar": 2161
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 68,
                    "jChar": 75
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 120,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 199,
                    "jChar": 206
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 222,
                    "jChar": 229
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 133,
                    "jChar": 140
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 174,
                    "jChar": 181
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 429,
                    "jChar": 436
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_sortColumns"
                    ],
                    "iChar": 87,
                    "jChar": 94
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 138,
                    "jChar": 145
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 297,
                    "jChar": 304
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 102,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 182,
                    "jChar": 189
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 113,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 159,
                    "jChar": 166
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 192,
                    "jChar": 199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 50,
                    "jChar": 57
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 26,
                    "jChar": 33
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 60,
                    "jChar": 67
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_padding",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "padding",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "padding: number = 24;",
                    "language": "ts",
                    "iLine": 29,
                    "jLine": 29
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_xMax"
                    ],
                    "iChar": 158,
                    "jChar": 165
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 435,
                    "jChar": 442
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 227,
                    "jChar": 234
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 666,
                    "jChar": 673
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 926,
                    "jChar": 933
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 993,
                    "jChar": 1000
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 207,
                    "jChar": 214
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_arrowsSVG",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "arrowsSVG",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "arrowsSVG: SVGSVGElement;",
                    "language": "ts",
                    "iLine": 30,
                    "jLine": 30
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 313,
                    "jChar": 322
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1487,
                    "jChar": 1496
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1560,
                    "jChar": 1569
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1611,
                    "jChar": 1620
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 269,
                    "jChar": 278
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_arrowMap",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "arrowMap",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "arrowMap: Map<HTMLElement, Arrow[]> = new Map();",
                    "language": "ts",
                    "iLine": 31,
                    "jLine": 31
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 27,
                    "jChar": 32
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 141,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 171,
                    "jChar": 179
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 209,
                    "jChar": 217
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 98,
                    "jChar": 106
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateArrows"
                    ],
                    "iChar": 45,
                    "jChar": 53
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_htmlFunction",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "htmlFunction",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "htmlFunction : Function;",
                    "language": "ts",
                    "iLine": 32,
                    "jLine": 32
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 227,
                    "jChar": 239
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 240,
                    "jChar": 252
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_highlightFunction",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "highlightFunction",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "highlightFunction : Function;",
                    "language": "ts",
                    "iLine": 33,
                    "jLine": 33
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 265,
                    "jChar": 282
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 585,
                    "jChar": 602
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_attentionNode",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "attentionNode",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "attentionNode: Node|null;",
                    "language": "ts",
                    "iLine": 34,
                    "jLine": 34
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 15,
                    "jChar": 19
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 353,
                    "jChar": 366
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_attention"
                    ],
                    "iChar": 65,
                    "jChar": 78
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 1175,
                    "jChar": 1188
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 30,
                    "jChar": 43
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 62,
                    "jChar": 75
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 107,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 155,
                    "jChar": 168
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 267,
                    "jChar": 280
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 329,
                    "jChar": 342
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 490,
                    "jChar": 503
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 524,
                    "jChar": 537
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_scrolling",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "scrolling",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "scrolling: boolean = false;",
                    "language": "ts",
                    "iLine": 35,
                    "jLine": 35
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 472,
                    "jChar": 481
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 569,
                    "jChar": 578
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 614,
                    "jChar": 623
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_xScroll",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "xScroll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "xScroll: number = 0;",
                    "language": "ts",
                    "iLine": 36,
                    "jLine": 36
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 160,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 233,
                    "jChar": 240
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 402,
                    "jChar": 409
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 647,
                    "jChar": 654
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 148,
                    "jChar": 155
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 443,
                    "jChar": 450
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 179,
                    "jChar": 186
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_yScroll",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "yScroll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "yScroll: number = 0;",
                    "language": "ts",
                    "iLine": 37,
                    "jLine": 37
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 192,
                    "jChar": 199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 247,
                    "jChar": 254
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 444,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 682,
                    "jChar": 689
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 171,
                    "jChar": 178
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 483,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 218,
                    "jChar": 225
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_xScrollTarget",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "xScrollTarget",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "xScrollTarget: number = 0;",
                    "language": "ts",
                    "iLine": 38,
                    "jLine": 38
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 212,
                    "jChar": 225
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_yScrollTarget",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "yScrollTarget",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "yScrollTarget: number = 0;",
                    "language": "ts",
                    "iLine": 39,
                    "jLine": 39
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 232,
                    "jChar": 245
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_autoScroll",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "autoScroll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "autoScroll: boolean = false;",
                    "language": "ts",
                    "iLine": 40,
                    "jLine": 40
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_closedNodes",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "closedNodes",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "closedNodes: any[] = [];            // nodes we've closed but might reopen, stored as json",
                    "language": "ts",
                    "iLine": 41,
                    "jLine": 41
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 239,
                    "jChar": 250
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 142,
                    "jChar": 153
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 479,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 786,
                    "jChar": 797
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 962,
                    "jChar": 973
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 250,
                    "jChar": 261
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 68,
                    "jChar": 79
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 267,
                    "jChar": 278
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_GraphView_canvasRect",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "canvasRect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "canvasRect: Rect;                   // bounding-rect of all nodes, or window rect, whichever is bigger\n",
                    "language": "ts",
                    "iLine": 42,
                    "jLine": 43
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 12,
                    "jChar": 16
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 384,
                    "jChar": 394
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 774,
                    "jChar": 784
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 820,
                    "jChar": 830
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 867,
                    "jChar": 877
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 917,
                    "jChar": 927
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 983,
                    "jChar": 993
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1037,
                    "jChar": 1047
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1067,
                    "jChar": 1077
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1111,
                    "jChar": 1121
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1154,
                    "jChar": 1164
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_constructor",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// setup: pass the div that's going to hold all nodes\nconstructor(container: HTMLElement, htmlFunction: Function, highlightFunction: Function) {\n    this.container = container;\n    this.container.style.zIndex = `-10`;\n    this.htmlFunction = htmlFunction;\n    this.highlightFunction = highlightFunction;\n    this.arrowsSVG = this.initArrows();\n    this.attentionNode = null;\n    this.canvasRect = new Rect(0, 0, document.body.clientWidth, document.body.clientHeight);\n}\n",
                    "language": "ts",
                    "iLine": 44,
                    "jLine": 54
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 154,
                    "jChar": 163
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 186,
                    "jChar": 195
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_htmlFunction"
                    ],
                    "iChar": 227,
                    "jChar": 239
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_highlightFunction"
                    ],
                    "iChar": 265,
                    "jChar": 282
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowsSVG"
                    ],
                    "iChar": 313,
                    "jChar": 322
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_initArrows"
                    ],
                    "iChar": 330,
                    "jChar": 340
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 353,
                    "jChar": 366
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 384,
                    "jChar": 394
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 401,
                    "jChar": 405
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_find",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "find",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// given an id, returns the first div with that ID (expected to be unique)\nfind(id: string, parent?:HTMLElement) : HTMLElement | null {\n    if (!parent) parent = this.container;\n    const elementsArray = Array.from(parent.querySelectorAll(`#${id}`));\n    if (elementsArray.length == 0) return null;\n    return elementsArray[0] as HTMLElement;\n}\n",
                    "language": "ts",
                    "iLine": 55,
                    "jLine": 62
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 167,
                    "jChar": 176
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 1205,
                    "jChar": 1209
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 146,
                    "jChar": 150
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 447,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 501,
                    "jChar": 505
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 220,
                    "jChar": 224
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_userObj",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "userObj",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// given a div, returns the userObj of the first node that matches\nuserObj(div: HTMLElement) : any {\n    const node = this.get(div);\n    if (!node) return null;\n    return node.userObj;\n}\n",
                    "language": "ts",
                    "iLine": 63,
                    "jLine": 69
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 123,
                    "jChar": 126
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_userObj"
                    ],
                    "iChar": 177,
                    "jChar": 184
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 110,
                    "jChar": 117
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 105,
                    "jChar": 112
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_findLink",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "findLink",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// given a div, returns the linkDiv that opened it (todo: more than one? IDK)\nfindLink(div: HTMLElement) : HTMLElement | null {\n    const node = this.get(div);\n    return node ? node.linkDiv : null;\n}\n",
                    "language": "ts",
                    "iLine": 70,
                    "jLine": 75
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 150,
                    "jChar": 153
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv",
                        "ts_firefly_graphview_property_Arrow_linkDiv"
                    ],
                    "iChar": 183,
                    "jChar": 190
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_closeCard"
                    ],
                    "iChar": 89,
                    "jChar": 97
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_close",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "close",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// closes a div that's open, and all children as well\nclose(div: HTMLElement) {\n    const node = this.get(div)!;\n    if (node) {\n        let nodes = this.allChildren(node);\n        for(let i = 1; i < nodes.length; i++) { \n            this.closedNodes.push(nodes[i].json());\n        }\n        //console.log(\"closed nodes:\");\n        //for(const c of this.closedNodes) { console.log(\"  \", user(c.id)) };\n        for(let node of nodes) { this.disappear(node); }\n    }\n    this.arrangeAll();\n}\n",
                    "language": "ts",
                    "iLine": 76,
                    "jLine": 90
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 102,
                    "jChar": 105
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 154,
                    "jChar": 165
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 239,
                    "jChar": 250
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json",
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 265,
                    "jChar": 269
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 440,
                    "jChar": 449
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 474,
                    "jChar": 484
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_closeCard"
                    ],
                    "iChar": 186,
                    "jChar": 191
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_attention",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "attention",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// pay attention to (div)\nattention(div: HTMLElement) {\n    this.attentionNode = this.get(div);\n    //console.log(\"attention:\", user(this.attentionNode!.div.id));\n}\n",
                    "language": "ts",
                    "iLine": 91,
                    "jLine": 96
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 65,
                    "jChar": 78
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 86,
                    "jChar": 89
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 588,
                    "jChar": 597
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_disappear",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "disappear",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// animates to nothing over (time) seconds, then closes\ndisappear(node: Node, time: number=0.25): void {\n    let div = node.div;\n    if (node.linkDiv) {\n        this.removeArrow(node.linkDiv, div);\n    } \n    div.style.width = div.scrollWidth + \"px\";\n    div.style.height = div.scrollHeight + \"px\";\n    div.style.transition = `width ${time}s, height ${time}s`;\n    div.offsetWidth;\n    div.offsetHeight;\n    div.style.width = '0'; div.style.height = '0';\n    setTimeout(() => {this.closeSingleNode(node);}, (time-0.1)*1000);\n}\n",
                    "language": "ts",
                    "iLine": 97,
                    "jLine": 111
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 72,
                    "jChar": 76
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 124,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 142,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 166,
                    "jChar": 177
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 183,
                    "jChar": 190
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 219,
                    "jChar": 224
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 265,
                    "jChar": 271
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 418,
                    "jChar": 423
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 441,
                    "jChar": 447
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 482,
                    "jChar": 497
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 440,
                    "jChar": 449
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_allChildren",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "allChildren",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "allChildren(node: Node) : Node[] {\n    let result : Node[] = [ node ];\n    for(let n of this.nodeMap.values()) {\n        if (n.parentDiv == node.div) result.push(...this.allChildren(n));\n    }\n    return result;\n}\n",
                    "language": "ts",
                    "iLine": 112,
                    "jLine": 119
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 18,
                    "jChar": 22
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 26,
                    "jChar": 30
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 52,
                    "jChar": 56
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 93,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv",
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 127,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 145,
                    "jChar": 148
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 154,
                    "jChar": 165
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 98,
                    "jChar": 109
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_closeSingleNode",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "closeSingleNode",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "closeSingleNode(node: Node) {\n    this.nodeMap.delete(node.div);\n    node.div.remove();\n    node.remove();\n}\n",
                    "language": "ts",
                    "iLine": 120,
                    "jLine": 125
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 22,
                    "jChar": 26
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 39,
                    "jChar": 46
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 59,
                    "jChar": 62
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 74,
                    "jChar": 77
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 78,
                    "jChar": 84
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 97,
                    "jChar": 103
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 482,
                    "jChar": 497
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 151,
                    "jChar": 166
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_reopen",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "reopen",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "reopen(id: string, linkID: string, parentID: string, userObj: any, emphasize: boolean=false) {\n    let toOpen : any[] = [];\n\n    let i = this.closedNodes.findIndex(n => n.id == id);        // is new node in closedNodes?\n    if (i == -1) {\n        toOpen = [ { id: id, link: linkID ?? \"null\",            // if no, make a new json version\n            parent: parentID ?? \"null\",\n            emphasize: emphasize,\n            userObj: userObj }];\n    } else {\n        toOpen = this.closedNodes.splice(i, 1);                 // otherwise get it from closedNodes\n    }\n\n    // grab all nodes from closedNodes whose parents are in (tOpen)\n    let iCheck = 0;\n    while(iCheck < toOpen.length) {\n        const p = toOpen[iCheck++];\n        let remaining: any[] = [];\n        for(let c of this.closedNodes) {\n            if (c.parent == p.id) {\n                toOpen.push(c);\n            } else {\n                remaining.push(c);\n            }\n        }\n        this.closedNodes = remaining;\n    }\n    //console.log(\"reopen\", user(id));\n    for(const c of toOpen) {\n        //console.log(\"   \", user(c.id));\n    }\n\n    // and open them\n    this.openJsonNodeList(toOpen);\n    this.attentionNode = this.get(this.find(id)!);\n    //console.log(\"attention:\", user(this.attentionNode!.div.id));\n}\n",
                    "language": "ts",
                    "iLine": 126,
                    "jLine": 163
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 142,
                    "jChar": 153
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 479,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 786,
                    "jChar": 797
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_parent"
                    ],
                    "iChar": 819,
                    "jChar": 825
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 962,
                    "jChar": 973
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJsonNodeList"
                    ],
                    "iChar": 1140,
                    "jChar": 1156
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 1175,
                    "jChar": 1188
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 1196,
                    "jChar": 1199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_find"
                    ],
                    "iChar": 1205,
                    "jChar": 1209
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 336,
                    "jChar": 342
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_open",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "open",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// opens a new node, generates the HTML\nopen(id: string, linkID: string, parentID: string, userObj: any, emphasize: boolean=false) {\n    if (this.find(id)) return;                      // don't make one if exists already\n    let div = this.htmlFunction(id, userObj);\n    div.style.transition = 'max-width 0.5s, max-height 0.5s, background-color 0.5s';\n    let linkDiv = null;\n    if (linkID != \"\" && parentID != \"\") {\n        let parentDiv = this.find(parentID);\n        if (parentDiv) linkDiv = this.find(linkID, parentDiv); else linkDiv = null;\n    }\n    if (linkDiv) {\n        this.highlightFunction(linkDiv, true);\n    }\n    let node: Node = this.add(div, linkDiv, userObj);\n    if (emphasize) {\n        node!.emphasize = true;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 164,
                    "jLine": 182
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_find"
                    ],
                    "iChar": 146,
                    "jChar": 150
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_htmlFunction"
                    ],
                    "iChar": 240,
                    "jChar": 252
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_find"
                    ],
                    "iChar": 447,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_find"
                    ],
                    "iChar": 501,
                    "jChar": 505
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_highlightFunction"
                    ],
                    "iChar": 585,
                    "jChar": 602
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 639,
                    "jChar": 643
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 651,
                    "jChar": 654
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJsonNodeList"
                    ],
                    "iChar": 80,
                    "jChar": 84
                },
                {
                    "targets": [
                        "ts_firefly_db_function_openDB"
                    ],
                    "iChar": 280,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_db_function_storeHandle"
                    ],
                    "iChar": 169,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_db_function_getStoredHandle"
                    ],
                    "iChar": 214,
                    "jChar": 218
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 350,
                    "jChar": 354
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_reset",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "reset",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "reset() { // close all except main-node\n    for(let i = 1; i < this.columns.length; i++) {\n        for(let node of this.columns[i]) {\n            this.closeSingleNode(node);\n        }\n    }\n    this.columns.splice(1, this.columns.length-1);\n    this.closedNodes = [];\n}\n",
                    "language": "ts",
                    "iLine": 183,
                    "jLine": 192
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 68,
                    "jChar": 75
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 120,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 151,
                    "jChar": 166
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 199,
                    "jChar": 206
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 222,
                    "jChar": 229
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 250,
                    "jChar": 261
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_reset"
                    ],
                    "iChar": 35,
                    "jChar": 40
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_openJson",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "openJson",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "openJson(obj: any) {\n    this.openJsonNodeList(obj.nodes);\n    this.closedNodes = obj.closed;\n    //console.log(\"closed nodelist:\", this.closedNodes);\n    this.xScroll = obj.xScroll;\n    this.yScroll = obj.yScroll;\n    scrollTo(this.xScroll, this.yScroll);\n}\n",
                    "language": "ts",
                    "iLine": 193,
                    "jLine": 201
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJsonNodeList"
                    ],
                    "iChar": 30,
                    "jChar": 46
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 68,
                    "jChar": 79
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll"
                    ],
                    "iChar": 160,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll"
                    ],
                    "iChar": 192,
                    "jChar": 199
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollTo"
                    ],
                    "iChar": 219,
                    "jChar": 227
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll"
                    ],
                    "iChar": 233,
                    "jChar": 240
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll"
                    ],
                    "iChar": 247,
                    "jChar": 254
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openSession"
                    ],
                    "iChar": 214,
                    "jChar": 222
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_openJsonNodeList",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "openJsonNodeList",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "openJsonNodeList(nodesJson: any[]) {\n    for(let n of nodesJson) {\n        this.open(n.id, n.link, n.parent, n.userObj, n.emphasize);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 202,
                    "jLine": 207
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 80,
                    "jChar": 84
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_parent"
                    ],
                    "iChar": 101,
                    "jChar": 107
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_userObj"
                    ],
                    "iChar": 111,
                    "jChar": 118
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_emphasize"
                    ],
                    "iChar": 122,
                    "jChar": 131
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 1140,
                    "jChar": 1156
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 30,
                    "jChar": 46
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_add",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "add",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// adds a div to the manager, and to the container div\nadd(div: HTMLElement, link: HTMLElement | null, userObj: any = null) : Node {\n    this.container.appendChild(div);\n    let parentDiv = (link)? this.findDivContainingLink(link) : null;\n    let xTarget = 0;\n    let yTarget = 0;\n    if (link && parentDiv) {\n        const prect = rect(parentDiv);\n        const brect = rect(link);\n        const crect = rect(div);\n        xTarget = brect.left;\n        yTarget = ((brect.top + brect.bottom)/2) - (crect.height()/2);\n    } else {\n        const crect = rect(div);\n        xTarget = crect.left + 150;\n        yTarget = (window.innerHeight / 2) - (crect.height()/2) - 32;\n    }\n    let node = new Node(this, div, link, parentDiv, userObj);\n    node.setTargetPos(xTarget, yTarget);\n    node.setPos(xTarget, yTarget);\n    this.nodeMap.set(div, node);\n    if (link && parentDiv) {\n        this.addArrow(link, parentDiv, div);\n    }\n    this.arrangeAll();          // todo: call this every frame\n    return node;\n}\n",
                    "language": "ts",
                    "iLine": 208,
                    "jLine": 235
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 126,
                    "jChar": 130
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 142,
                    "jChar": 151
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findDivContainingLink"
                    ],
                    "iChar": 203,
                    "jChar": 224
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 332,
                    "jChar": 336
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 371,
                    "jChar": 375
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 405,
                    "jChar": 409
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 440,
                    "jChar": 444
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 472,
                    "jChar": 475
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 484,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 504,
                    "jChar": 510
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 552,
                    "jChar": 556
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 587,
                    "jChar": 591
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 651,
                    "jChar": 657
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 694,
                    "jChar": 698
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setTargetPos"
                    ],
                    "iChar": 746,
                    "jChar": 758
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 787,
                    "jChar": 793
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 822,
                    "jChar": 829
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 888,
                    "jChar": 896
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 935,
                    "jChar": 945
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 651,
                    "jChar": 654
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 194,
                    "jChar": 197
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_emphasize",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "emphasize",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// emphasizes element (moves shadow forward in space)\nemphasize(div: HTMLElement, onOff: boolean) {\n    let node = this.get(div);\n    if (!node) return;\n    node.emphasize = onOff; \n    node.updateShadow();\n}\n",
                    "language": "ts",
                    "iLine": 236,
                    "jLine": 243
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 120,
                    "jChar": 123
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_emphasize"
                    ],
                    "iChar": 162,
                    "jChar": 171
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 191,
                    "jChar": 203
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 514,
                    "jChar": 523
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_arrangeAll",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "arrangeAll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// arranges all views : computes xTarget, yTarget for each view\narrangeAll() {\n    this.sortColumns();\n    let xPos = this.xMax(this.columns[0]);\n    for(let i = 1; i < this.columns.length; i++) {\n        let groups : Node[][] = this.splitColumnIntoGroups(i);\n        for (let group of groups) {\n            this.spaceNodesInGroup(group, xPos);\n        }\n        this.spaceGroupsVertically(groups);\n        xPos = this.xMax(this.columns[i]);\n    }\n    const widthInPixels = getBodyWidth();\n    const newWidth = Math.max(window.innerWidth, xPos);\n    document.body.style.width = `${newWidth}px`;\n}\n",
                    "language": "ts",
                    "iLine": 244,
                    "jLine": 260
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_sortColumns"
                    ],
                    "iChar": 88,
                    "jChar": 99
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_xMax"
                    ],
                    "iChar": 123,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 133,
                    "jChar": 140
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 174,
                    "jChar": 181
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 218,
                    "jChar": 222
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 234,
                    "jChar": 255
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 313,
                    "jChar": 330
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceGroupsVertically"
                    ],
                    "iChar": 368,
                    "jChar": 389
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_xMax"
                    ],
                    "iChar": 419,
                    "jChar": 423
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 429,
                    "jChar": 436
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getBodyWidth"
                    ],
                    "iChar": 474,
                    "jChar": 486
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 570,
                    "jChar": 575
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 474,
                    "jChar": 484
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 935,
                    "jChar": 945
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 71,
                    "jChar": 81
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_sortColumns",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "sortColumns",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// sort nodes within each column by link order\nsortColumns() {\n    for(let col of this.columns) {\n        col.sort((a, b) => ((a.linkIndex > b.linkIndex) ? 1 : ((a.linkIndex < b.linkIndex) ? -1 : 0)));\n    }\n}\n",
                    "language": "ts",
                    "iLine": 261,
                    "jLine": 267
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 87,
                    "jChar": 94
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 129,
                    "jChar": 138
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 143,
                    "jChar": 152
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 164,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 178,
                    "jChar": 187
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 88,
                    "jChar": 99
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_xMax",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "xMax",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// right edge of column\nxMax(nodes: Node[]) : number {\n    let x = 0;\n    for (const node of nodes) {\n        x = Math.max(x, node.targetRect().right + (this.padding * 2));\n    }\n    return x;\n}\n",
                    "language": "ts",
                    "iLine": 268,
                    "jLine": 276
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 131,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 144,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 158,
                    "jChar": 165
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 123,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 419,
                    "jChar": 423
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_yRange",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "yRange",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// top edge of colum at xPos, or null if none intersect\nyRange(xPos: number) : [number | null, number | null] {\n    for(let i=0; i < this.columns.length; i++) {\n        let xMin = Infinity;\n        let xMax = -1;\n        let yBottom = -1;\n        let yTop = Infinity;\n        for(let node of this.columns[i]) {\n            const r = rect(node.div);\n            xMin = Math.min(r.left, xMin);\n            xMax = Math.max(r.right + this.padding*2, xMax);\n            yTop = Math.min(r.top, yTop);\n            yBottom = Math.max(r.bottom, yBottom);\n        }\n        if (xMin <= xPos && xMax >= xPos) {\n            return [yTop, yBottom];\n        }\n    }\n    return [null, null];\n}\n",
                    "language": "ts",
                    "iLine": 277,
                    "jLine": 297
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 138,
                    "jChar": 145
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 297,
                    "jChar": 304
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 333,
                    "jChar": 337
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 343,
                    "jChar": 346
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 379,
                    "jChar": 383
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 422,
                    "jChar": 427
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 435,
                    "jChar": 442
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 483,
                    "jChar": 486
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 528,
                    "jChar": 534
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 209,
                    "jChar": 215
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_update",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "update",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// update\nupdate() {\n    if (this.anyNodeSizeChanged()) {\n        this.arrangeAll();\n    }\n    this.updateCanvas();\n    this.updateScroll();\n    for(let node of this.nodeMap.values()) {\n        node.update();\n    }\n    this.updateArrows();\n}\n",
                    "language": "ts",
                    "iLine": 298,
                    "jLine": 310
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_anyNodeSizeChanged"
                    ],
                    "iChar": 34,
                    "jChar": 52
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 71,
                    "jChar": 81
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 100,
                    "jChar": 112
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 125,
                    "jChar": 137
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 166,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update",
                        "ts_firefly_graphview_method_Arrow_update"
                    ],
                    "iChar": 199,
                    "jChar": 205
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateArrows"
                    ],
                    "iChar": 224,
                    "jChar": 236
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateArrows"
                    ],
                    "iChar": 120,
                    "jChar": 126
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_eventLoop"
                    ],
                    "iChar": 39,
                    "jChar": 45
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_updateCanvas",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "updateCanvas",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "updateCanvas() {\n    let bounds = new Rect(0,0, window.innerWidth, window.innerHeight);\n    let padding = 10;\n    \n    // Calculate canvas rect based on node positions/sizes\n    // note: bounds may be negative, that's fine\n    for (const node of this.nodeMap.values()) {\n        const r = node.targetRect();\n        bounds.left = Math.min(bounds.left, r.left - padding);\n        bounds.top = Math.min(bounds.top, r.top - padding);\n        bounds.right = Math.max(bounds.right, r.right + padding);\n        bounds.bottom = Math.max(bounds.bottom, r.bottom + padding);\n    }\n    bounds.left = Math.floor(bounds.left);\n    bounds.top = Math.floor(bounds.top);\n    bounds.right = Math.ceil(bounds.right);\n    bounds.bottom = Math.ceil(bounds.bottom);\n    if (bounds.left == this.canvasRect.left &&\n        bounds.top == this.canvasRect.top &&\n        bounds.right == this.canvasRect.right &&\n        bounds.bottom == this.canvasRect.bottom) return;\n\n    const deltaX = bounds.left - this.canvasRect.left;\n    const deltaY = bounds.top - this.canvasRect.top;\n    \n    this.canvasRect = bounds;\n    const xSize = this.canvasRect.width();\n    const ySize = this.canvasRect.height();\n    if (xSize != this.container.offsetWidth ||\n        ySize != this.container.offsetHeight) {\n        this.container.style.width = `${xSize}px`;\n        this.container.style.height = `${ySize}px`;\n        document.body.style.width = `${xSize}px`;\n        document.body.style.height = `${ySize}px`;\n        this.arrowsSVG.setAttribute('viewBox', `0 0 ${xSize} ${ySize}`);\n        this.arrowsSVG.style.width = `${xSize}px`;\n        this.arrowsSVG.style.height = `${ySize}px`;\n    }\n\n    // If any code-container div has drifted upwards or left, adjust all divs\n    if (deltaX != 0 || deltaY != 0) {\n        for (let child of Array.from(this.container.children)) {\n            if (child instanceof HTMLElement) {\n                let div = child as HTMLElement;\n                div.style.left = `${div.offsetLeft - deltaX}px`;\n                div.style.top = `${div.offsetTop - deltaY}px`;\n            }\n        }\n        window.scrollTo(window.scrollX - deltaX, window.scrollY - deltaY);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 311,
                    "jLine": 362
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 251,
                    "jChar": 258
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 294,
                    "jChar": 304
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 323,
                    "jChar": 327
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 346,
                    "jChar": 350
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 354,
                    "jChar": 358
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 386,
                    "jChar": 389
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 408,
                    "jChar": 411
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 415,
                    "jChar": 418
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 446,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 470,
                    "jChar": 475
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 479,
                    "jChar": 484
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 512,
                    "jChar": 518
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 537,
                    "jChar": 543
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 547,
                    "jChar": 553
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 583,
                    "jChar": 587
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 608,
                    "jChar": 612
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 626,
                    "jChar": 629
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 650,
                    "jChar": 653
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 667,
                    "jChar": 672
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 692,
                    "jChar": 697
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 711,
                    "jChar": 717
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 737,
                    "jChar": 743
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 761,
                    "jChar": 765
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 774,
                    "jChar": 784
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 785,
                    "jChar": 789
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 808,
                    "jChar": 811
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 820,
                    "jChar": 830
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 831,
                    "jChar": 834
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 853,
                    "jChar": 858
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 867,
                    "jChar": 877
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 878,
                    "jChar": 883
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 902,
                    "jChar": 908
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 917,
                    "jChar": 927
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 928,
                    "jChar": 934
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 971,
                    "jChar": 975
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 983,
                    "jChar": 993
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 994,
                    "jChar": 998
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 1026,
                    "jChar": 1029
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 1037,
                    "jChar": 1047
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 1048,
                    "jChar": 1051
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 1067,
                    "jChar": 1077
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 1111,
                    "jChar": 1121
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width",
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 1122,
                    "jChar": 1127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 1154,
                    "jChar": 1164
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 1165,
                    "jChar": 1171
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 1197,
                    "jChar": 1206
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 1244,
                    "jChar": 1253
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 1283,
                    "jChar": 1292
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 1299,
                    "jChar": 1304
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 1334,
                    "jChar": 1343
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 1350,
                    "jChar": 1356
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 1401,
                    "jChar": 1406
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 1451,
                    "jChar": 1457
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowsSVG"
                    ],
                    "iChar": 1487,
                    "jChar": 1496
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowsSVG"
                    ],
                    "iChar": 1560,
                    "jChar": 1569
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 1576,
                    "jChar": 1581
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowsSVG"
                    ],
                    "iChar": 1611,
                    "jChar": 1620
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 1627,
                    "jChar": 1633
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 1815,
                    "jChar": 1824
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_children"
                    ],
                    "iChar": 1825,
                    "jChar": 1833
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 1960,
                    "jChar": 1964
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 2025,
                    "jChar": 2028
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollTo"
                    ],
                    "iChar": 2101,
                    "jChar": 2109
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 100,
                    "jChar": 112
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_updateScroll",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "updateScroll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "updateScroll() {\n    if (this.attentionNode && \n        (this.attentionNode.sizeChanged() ||\n         this.attentionNode.moving())) {\n            if (this.attentionNode.div.parentElement) {\n                [this.xScrollTarget, this.yScrollTarget] = scrollToView(this.attentionNode.div);\n            } else {\n                this.attentionNode = null;\n            }\n    }\n    if (window.scrollX == this.xScroll &&\n        window.scrollY == this.yScroll) {\n        if (this.scrolling && this.attentionNode) {\n            this.attentionNode = null;\n        }\n        this.scrolling = false;\n    } else {\n        this.scrolling = true;\n    }\n    this.xScroll = window.scrollX;\n    this.yScroll = window.scrollY;\n}\n",
                    "language": "ts",
                    "iLine": 363,
                    "jLine": 385
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 30,
                    "jChar": 43
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 62,
                    "jChar": 75
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 76,
                    "jChar": 87
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 107,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_moving"
                    ],
                    "iChar": 121,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 155,
                    "jChar": 168
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 169,
                    "jChar": 172
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScrollTarget"
                    ],
                    "iChar": 212,
                    "jChar": 225
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScrollTarget"
                    ],
                    "iChar": 232,
                    "jChar": 245
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 249,
                    "jChar": 261
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 267,
                    "jChar": 280
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 281,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 329,
                    "jChar": 342
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll"
                    ],
                    "iChar": 402,
                    "jChar": 409
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll"
                    ],
                    "iChar": 444,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_scrolling"
                    ],
                    "iChar": 472,
                    "jChar": 481
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 490,
                    "jChar": 503
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_attentionNode"
                    ],
                    "iChar": 524,
                    "jChar": 537
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_scrolling"
                    ],
                    "iChar": 569,
                    "jChar": 578
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_scrolling"
                    ],
                    "iChar": 614,
                    "jChar": 623
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll"
                    ],
                    "iChar": 647,
                    "jChar": 654
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll"
                    ],
                    "iChar": 682,
                    "jChar": 689
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 125,
                    "jChar": 137
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_get",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "get",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// returns the Node associated with a top-level div\nget(div: HTMLElement) : Node | null {\n    let node = this.nodeMap.get(div);\n    return node ? node : null;\n}\n",
                    "language": "ts",
                    "iLine": 388,
                    "jLine": 393
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 76,
                    "jChar": 80
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 110,
                    "jChar": 117
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 1700,
                    "jChar": 1703
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 1769,
                    "jChar": 1772
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_userObj"
                    ],
                    "iChar": 123,
                    "jChar": 126
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findLink"
                    ],
                    "iChar": 150,
                    "jChar": 153
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 102,
                    "jChar": 105
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_attention"
                    ],
                    "iChar": 86,
                    "jChar": 89
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 1196,
                    "jChar": 1199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_emphasize"
                    ],
                    "iChar": 120,
                    "jChar": 123
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 448,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 218,
                    "jChar": 221
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 107,
                    "jChar": 110
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 402,
                    "jChar": 405
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 467,
                    "jChar": 470
                },
                {
                    "targets": [
                        "ts_firefly_db_function_getStoredHandle"
                    ],
                    "iChar": 508,
                    "jChar": 511
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_findDivContainingLink",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "findDivContainingLink",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// find the top-level div that contains a link elemeent\nfindDivContainingLink(link: HTMLElement | null): HTMLElement | null {\n    if (!link) return null;\n    let parent = link.parentElement;\n    while (parent && parent.parentElement !== this.container) {\n        parent = parent.parentElement;\n    }\n    return (parent) ? parent : null;\n}\n",
                    "language": "ts",
                    "iLine": 394,
                    "jLine": 403
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 242,
                    "jChar": 251
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 203,
                    "jChar": 224
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 241,
                    "jChar": 262
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_anyNodeSizeChanged",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "anyNodeSizeChanged",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "anyNodeSizeChanged() : boolean {\n    for(let node of this.nodeMap.values()) {\n        if (node.sizeChanged())\n            return true;\n    }\n    return false;\n}\n",
                    "language": "ts",
                    "iLine": 404,
                    "jLine": 411
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_nodeMap"
                    ],
                    "iChar": 58,
                    "jChar": 65
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 95,
                    "jChar": 106
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 34,
                    "jChar": 52
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "splitColumnIntoGroups",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "splitColumnIntoGroups(i: number) : Node[][] {\n    let groups : Node[][] = [];\n    for(const p of this.columns[i-1]) {\n        let group : Node[] = [];\n        for(const node of this.columns[i]) {\n            if (node.parentDiv!.id === p.div.id) {\n                group.push(node);\n            }\n        }\n        if (group.length > 0) {\n            groups.push(group);\n        }\n    }\n    return groups;\n}\n",
                    "language": "ts",
                    "iLine": 412,
                    "jLine": 427
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 35,
                    "jChar": 39
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 63,
                    "jChar": 67
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 102,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 138,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 182,
                    "jChar": 189
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv",
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 217,
                    "jChar": 226
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 237,
                    "jChar": 240
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 234,
                    "jChar": 255
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_spaceNodesInGroup",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "spaceNodesInGroup",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// within a group (nodes with same parent), space out around centerline\nspaceNodesInGroup(group: Node[], xPos: number) {\n    // first find the total height of the group, plus padding\n    let sumHeight = (group.length-1) * this.padding;\n    for(const node of group) {\n        sumHeight += node.targetRect().height();\n    }\n\n    // then find the centerline of the group's parent\n    const parentDiv = group[0].parentDiv!;\n    const parentNode = this.get(parentDiv)!;\n    const parentRect = parentNode.targetRect();\n    const centerLine = (parentRect.top + parentRect.bottom)/2;\n\n    // now space group out vertically around the centerline\n    let yPos = Math.max(this.padding, centerLine - (sumHeight/2));\n    let pivot = (group.length-1)/2;\n    for (let i = 0; i < group.length; i++) {\n        let node = group[i];\n        let xOffset = (i < pivot) ? i : (pivot - (i - pivot));\n        node.setTargetPos(xPos + (xOffset * this.padding), yPos);\n        yPos += node.targetRect().height() + this.padding;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 428,
                    "jLine": 452
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 97,
                    "jChar": 101
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 227,
                    "jChar": 234
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 293,
                    "jChar": 303
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 306,
                    "jChar": 312
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv",
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 408,
                    "jChar": 417
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 448,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 499,
                    "jChar": 509
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 548,
                    "jChar": 551
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 565,
                    "jChar": 571
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 666,
                    "jChar": 673
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setTargetPos"
                    ],
                    "iChar": 890,
                    "jChar": 902
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 926,
                    "jChar": 933
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 964,
                    "jChar": 974
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 977,
                    "jChar": 983
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 993,
                    "jChar": 1000
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 313,
                    "jChar": 330
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_spaceGroupsVertically",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "spaceGroupsVertically",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// space groups out vertically so they don't overlap\nspaceGroupsVertically(groups: Node[][]) {\n    if (groups.length < 2) return;\n    const even = (groups.length % 2) == 0;\n    const iPivot = Math.floor((groups.length-1)/2);\n    if (even) {\n        this.checkGroups(groups[iPivot], groups[iPivot+1], 0.5);\n    }\n    for(let i=iPivot; i>0; i--) {\n        this.checkGroups(groups[i-1], groups[1], 0);\n    }\n    for(let i=iPivot; i < groups.length-1; i++) {\n        this.checkGroups(groups[i], groups[i+1], 1);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 453,
                    "jLine": 468
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 83,
                    "jChar": 87
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 254,
                    "jChar": 265
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 359,
                    "jChar": 370
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 468,
                    "jChar": 479
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 368,
                    "jChar": 389
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_checkGroups",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "checkGroups",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "checkGroups(groupA: Node[], groupB: Node[], mix: number) {\n    const bottomA = groupA[groupA.length-1].targetRect().bottom;\n    const topB = groupB[0].targetRect().top;\n    const overlap =  (bottomA + (this.padding*2)) - topB;\n    if (overlap < 0) return;\n    const moveA = -(overlap * (1 - mix));\n    const moveB = overlap * mix;\n    this.moveGroupVertically(groupA, moveA);\n    this.moveGroupVertically(groupB, moveB);\n}\n",
                    "language": "ts",
                    "iLine": 469,
                    "jLine": 479
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 20,
                    "jChar": 24
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 103,
                    "jChar": 113
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 116,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 151,
                    "jChar": 161
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 164,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_padding"
                    ],
                    "iChar": 207,
                    "jChar": 214
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_moveGroupVertically"
                    ],
                    "iChar": 340,
                    "jChar": 359
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_moveGroupVertically"
                    ],
                    "iChar": 385,
                    "jChar": 404
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceGroupsVertically"
                    ],
                    "iChar": 254,
                    "jChar": 265
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceGroupsVertically"
                    ],
                    "iChar": 359,
                    "jChar": 370
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceGroupsVertically"
                    ],
                    "iChar": 468,
                    "jChar": 479
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_moveGroupVertically",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "moveGroupVertically",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "moveGroupVertically(group: Node[], yMove: number) {\n    for(let node of group) {\n        node.yTarget += yMove;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 480,
                    "jLine": 485
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 94,
                    "jChar": 101
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 340,
                    "jChar": 359
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 385,
                    "jChar": 404
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_addToColumnArray",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "addToColumnArray",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// add a Node to the correct column, keep them sorted vertically\naddToColumnArray(node : Node) {\n    while (this.columns.length <= node.column) {\n        this.columns.push([]);\n    }\n    this.columns[node.column].push(node);\n}\n",
                    "language": "ts",
                    "iLine": 488,
                    "jLine": 495
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 89,
                    "jChar": 93
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 113,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 136,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 159,
                    "jChar": 166
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 192,
                    "jChar": 199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 205,
                    "jChar": 211
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 1868,
                    "jChar": 1884
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 554,
                    "jChar": 570
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_initArrows",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "initArrows",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// set up the SVG arrow renderer\ninitArrows() : SVGSVGElement {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.style.position = 'absolute';\n    svg.style.width = '100%';\n    svg.style.height = '100%';\n    svg.style.pointerEvents = 'none';\n    svg.style.zIndex = '1000';\n    this.container.appendChild(svg);\n    return svg;\n}\n",
                    "language": "ts",
                    "iLine": 498,
                    "jLine": 509
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 194,
                    "jChar": 199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 224,
                    "jChar": 230
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 319,
                    "jChar": 328
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 330,
                    "jChar": 340
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_addArrow",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "addArrow",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "addArrow(linkDiv: HTMLElement, parentDiv: HTMLElement, div: HTMLElement) {\n    let arrow = new Arrow(linkDiv, parentDiv, div);\n    if (!this.arrowMap.has(linkDiv)) { this.arrowMap.set(linkDiv, []); }\n    this.arrowMap.get(linkDiv)!.push(arrow);\n    arrow.addToSVG(this.arrowsSVG);\n}\n",
                    "language": "ts",
                    "iLine": 510,
                    "jLine": 516
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 95,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowMap"
                    ],
                    "iChar": 141,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowMap"
                    ],
                    "iChar": 171,
                    "jChar": 179
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowMap"
                    ],
                    "iChar": 209,
                    "jChar": 217
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 218,
                    "jChar": 221
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_addToSVG"
                    ],
                    "iChar": 255,
                    "jChar": 263
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowsSVG"
                    ],
                    "iChar": 269,
                    "jChar": 278
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 888,
                    "jChar": 896
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_removeArrow",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "removeArrow",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "removeArrow(linkDiv: HTMLElement, div: HTMLElement) {\n    let arrows : Arrow[] | undefined = this.arrowMap.get(linkDiv);\n    if (arrows) {\n        const index = arrows.findIndex(a => a.div === div);\n        if (index >= 0) {\n            let arrow: Arrow = arrows[index];\n            arrows.splice(index, 1);\n            arrow.removeFromSVG();\n        }\n    }\n}\n",
                    "language": "ts",
                    "iLine": 517,
                    "jLine": 528
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 71,
                    "jChar": 76
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowMap"
                    ],
                    "iChar": 98,
                    "jChar": 106
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 107,
                    "jChar": 110
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div",
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 185,
                    "jChar": 188
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 248,
                    "jChar": 253
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_removeFromSVG"
                    ],
                    "iChar": 326,
                    "jChar": 339
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 166,
                    "jChar": 177
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_updateArrows",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "updateArrows",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "updateArrows() {\n    for (let arrows of this.arrowMap.values()) {\n        for (let arrow of arrows) {\n            arrow.update();\n        }\n    }\n}\n",
                    "language": "ts",
                    "iLine": 529,
                    "jLine": 536
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_arrowMap"
                    ],
                    "iChar": 45,
                    "jChar": 53
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update",
                        "ts_firefly_graphview_method_Node_update",
                        "ts_firefly_graphview_method_Arrow_update"
                    ],
                    "iChar": 120,
                    "jChar": 126
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 224,
                    "jChar": 236
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_method_GraphView_json",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "json",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    json() : any {\n        let node : Node = this.columns[0][0];\n        let nodes: Node[] = this.allChildren(node);\n        return { xScroll: this.xScroll, yScroll: this.yScroll,\n                 nodes:  nodes.map(node => node.json()),\n                 closed: this.closedNodes };\n    }\n}",
                    "language": "ts",
                    "iLine": 537,
                    "jLine": 544
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 50,
                    "jChar": 57
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 84,
                    "jChar": 88
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 98,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll"
                    ],
                    "iChar": 148,
                    "jChar": 155
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll"
                    ],
                    "iChar": 171,
                    "jChar": 178
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 228,
                    "jChar": 232
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_closedNodes"
                    ],
                    "iChar": 267,
                    "jChar": 278
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 2379,
                    "jChar": 2383
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 265,
                    "jChar": 269
                },
                {
                    "targets": [
                        "ts_firefly_util_function_remote"
                    ],
                    "iChar": 777,
                    "jChar": 781
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_saveAll"
                    ],
                    "iChar": 86,
                    "jChar": 90
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_GraphView"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_graph",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "graph",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "graph: GraphView;                       // the view we're a part of",
                    "language": "ts",
                    "iLine": 549,
                    "jLine": 549
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7,
                    "jChar": 16
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 138,
                    "jChar": 143
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 396,
                    "jChar": 401
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 461,
                    "jChar": 466
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 548,
                    "jChar": 553
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 645,
                    "jChar": 650
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 20,
                    "jChar": 25
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 54,
                    "jChar": 59
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_userObj",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "userObj",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "userObj: any;                           // per-node user info",
                    "language": "ts",
                    "iLine": 550,
                    "jLine": 550
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 1848,
                    "jChar": 1855
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 6734,
                    "jChar": 6741
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_userObj"
                    ],
                    "iChar": 177,
                    "jChar": 184
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJsonNodeList"
                    ],
                    "iChar": 111,
                    "jChar": 118
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 161,
                    "jChar": 168
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 234,
                    "jChar": 241
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_div",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "div",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "div: HTMLElement;                       // the div we're tracking",
                    "language": "ts",
                    "iLine": 551,
                    "jLine": 551
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 2955,
                    "jChar": 2958
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3564,
                    "jChar": 3567
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3713,
                    "jChar": 3716
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3732,
                    "jChar": 3735
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9633,
                    "jChar": 9636
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12860,
                    "jChar": 12863
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12976,
                    "jChar": 12979
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14543,
                    "jChar": 14546
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18366,
                    "jChar": 18369
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 124,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 145,
                    "jChar": 148
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 59,
                    "jChar": 62
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 74,
                    "jChar": 77
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 343,
                    "jChar": 346
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 169,
                    "jChar": 172
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 281,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 237,
                    "jChar": 240
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 185,
                    "jChar": 188
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 284,
                    "jChar": 287
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 68,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 133,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 46,
                    "jChar": 49
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 57,
                    "jChar": 60
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 108,
                    "jChar": 111
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 293,
                    "jChar": 296
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 329,
                    "jChar": 332
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 42,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 45,
                    "jChar": 48
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_linkDiv",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "linkDiv",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "linkDiv: HTMLElement | null;            // the link that triggered this",
                    "language": "ts",
                    "iLine": 552,
                    "jLine": 552
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 2063,
                    "jChar": 2070
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 2977,
                    "jChar": 2984
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3022,
                    "jChar": 3029
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3525,
                    "jChar": 3532
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3583,
                    "jChar": 3590
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findLink"
                    ],
                    "iChar": 183,
                    "jChar": 190
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 142,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 183,
                    "jChar": 190
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 300,
                    "jChar": 307
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_computeLinkIndex"
                    ],
                    "iChar": 140,
                    "jChar": 147
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_computeLinkIndex"
                    ],
                    "iChar": 194,
                    "jChar": 201
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 81,
                    "jChar": 88
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_parentDiv",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "parentDiv",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "parentDiv: HTMLElement | null;          // the parent div of the link div that opened this node",
                    "language": "ts",
                    "iLine": 553,
                    "jLine": 553
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3546,
                    "jChar": 3555
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14523,
                    "jChar": 14532
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15193,
                    "jChar": 15202
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 127,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 217,
                    "jChar": 226
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 408,
                    "jChar": 417
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 324,
                    "jChar": 333
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 134,
                    "jChar": 143
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_parentNode",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "parentNode",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "parentNode: Node | null = null;         // the parent node corresponding to parentDiv",
                    "language": "ts",
                    "iLine": 554,
                    "jLine": 554
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 12,
                    "jChar": 16
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3721,
                    "jChar": 3731
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 443,
                    "jChar": 453
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_computeLinkIndex"
                    ],
                    "iChar": 320,
                    "jChar": 330
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_column",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "column",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "column: number = 0;                     // column we're in (first one zero)",
                    "language": "ts",
                    "iLine": 555,
                    "jLine": 555
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 17261,
                    "jChar": 17267
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 17342,
                    "jChar": 17348
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 136,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 205,
                    "jChar": 211
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 382,
                    "jChar": 388
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 39,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 73,
                    "jChar": 79
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_x",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "x",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "x: number = 0;                          // position right now",
                    "language": "ts",
                    "iLine": 556,
                    "jLine": 556
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 40,
                    "jChar": 41
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_moving"
                    ],
                    "iChar": 38,
                    "jChar": 39
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 46,
                    "jChar": 47
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 142,
                    "jChar": 143
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_y",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "y",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "y: number = 0;                          // ..",
                    "language": "ts",
                    "iLine": 557,
                    "jLine": 557
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 52,
                    "jChar": 53
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_moving"
                    ],
                    "iChar": 64,
                    "jChar": 65
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 84,
                    "jChar": 85
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 210,
                    "jChar": 211
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_xTarget",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "xTarget",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "xTarget: number = 0;                    // where we're trying to get to, to avoid others",
                    "language": "ts",
                    "iLine": 558,
                    "jLine": 558
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setTargetPos"
                    ],
                    "iChar": 46,
                    "jChar": 53
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 77,
                    "jChar": 84
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 105,
                    "jChar": 112
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_moving"
                    ],
                    "iChar": 48,
                    "jChar": 55
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 31,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 126,
                    "jChar": 133
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_yTarget",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "yTarget",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "yTarget: number = 0;                    // ..",
                    "language": "ts",
                    "iLine": 559,
                    "jLine": 559
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16999,
                    "jChar": 17006
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_moveGroupVertically"
                    ],
                    "iChar": 94,
                    "jChar": 101
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setTargetPos"
                    ],
                    "iChar": 68,
                    "jChar": 75
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 91,
                    "jChar": 98
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 131,
                    "jChar": 138
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_moving"
                    ],
                    "iChar": 74,
                    "jChar": 81
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 69,
                    "jChar": 76
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 194,
                    "jChar": 201
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_width",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "width",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "width: number =0;                       // width on last frame, so we can react to animation",
                    "language": "ts",
                    "iLine": 560,
                    "jLine": 560
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3066,
                    "jChar": 3071
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3285,
                    "jChar": 3290
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8759,
                    "jChar": 8764
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11724,
                    "jChar": 11729
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11834,
                    "jChar": 11839
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12021,
                    "jChar": 12026
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 17661,
                    "jChar": 17666
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2682,
                    "jChar": 2687
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 4096,
                    "jChar": 4101
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 219,
                    "jChar": 224
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 418,
                    "jChar": 423
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 570,
                    "jChar": 575
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1122,
                    "jChar": 1127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1299,
                    "jChar": 1304
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1401,
                    "jChar": 1406
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1576,
                    "jChar": 1581
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_initArrows"
                    ],
                    "iChar": 194,
                    "jChar": 199
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 696,
                    "jChar": 701
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 117,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 43,
                    "jChar": 48
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 280,
                    "jChar": 285
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 291,
                    "jChar": 296
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getBodyWidth"
                    ],
                    "iChar": 132,
                    "jChar": 137
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 237,
                    "jChar": 242
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 78,
                    "jChar": 83
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 162,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 241,
                    "jChar": 246
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_height",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "height",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "height: number =0;                      // ..",
                    "language": "ts",
                    "iLine": 561,
                    "jLine": 561
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3116,
                    "jChar": 3122
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3308,
                    "jChar": 3314
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7326,
                    "jChar": 7332
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7489,
                    "jChar": 7495
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11779,
                    "jChar": 11785
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11888,
                    "jChar": 11894
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12076,
                    "jChar": 12082
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15079,
                    "jChar": 15085
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15806,
                    "jChar": 15812
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 17695,
                    "jChar": 17701
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2708,
                    "jChar": 2714
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 4149,
                    "jChar": 4155
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 265,
                    "jChar": 271
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_disappear"
                    ],
                    "iChar": 441,
                    "jChar": 447
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 504,
                    "jChar": 510
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 651,
                    "jChar": 657
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1165,
                    "jChar": 1171
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1350,
                    "jChar": 1356
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1451,
                    "jChar": 1457
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1627,
                    "jChar": 1633
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 306,
                    "jChar": 312
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 977,
                    "jChar": 983
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_initArrows"
                    ],
                    "iChar": 224,
                    "jChar": 230
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 726,
                    "jChar": 732
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 143,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_sizeChanged"
                    ],
                    "iChar": 93,
                    "jChar": 99
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 315,
                    "jChar": 321
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 340,
                    "jChar": 346
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_shadow",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "shadow",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "shadow: HTMLElement;                    // the shadow, all-important :-)",
                    "language": "ts",
                    "iLine": 562,
                    "jLine": 562
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 588,
                    "jChar": 594
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 678,
                    "jChar": 684
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 121,
                    "jChar": 127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 194,
                    "jChar": 200
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 239,
                    "jChar": 245
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 278,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 327,
                    "jChar": 333
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 365,
                    "jChar": 371
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_emphasize",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "emphasize",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "emphasize: boolean = false;             // if set, comes forward in the stack",
                    "language": "ts",
                    "iLine": 563,
                    "jLine": 563
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 6745,
                    "jChar": 6754
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8073,
                    "jChar": 8082
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJsonNodeList"
                    ],
                    "iChar": 122,
                    "jChar": 131
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_emphasize"
                    ],
                    "iChar": 162,
                    "jChar": 171
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 102,
                    "jChar": 111
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 192,
                    "jChar": 201
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Node_linkIndex",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "linkIndex",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "linkIndex: string = \"\";                 // sort index for vertical ordering\n",
                    "language": "ts",
                    "iLine": 564,
                    "jLine": 565
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8936,
                    "jChar": 8945
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8950,
                    "jChar": 8959
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8971,
                    "jChar": 8980
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8985,
                    "jChar": 8994
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_sortColumns"
                    ],
                    "iChar": 129,
                    "jChar": 138
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_sortColumns"
                    ],
                    "iChar": 143,
                    "jChar": 152
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_sortColumns"
                    ],
                    "iChar": 164,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_sortColumns"
                    ],
                    "iChar": 178,
                    "jChar": 187
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 496,
                    "jChar": 505
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_constructor",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "constructor(view: GraphView, div: HTMLElement, linkDiv: HTMLElement | null, parentDiv: HTMLElement | null, userObj: any =null) {\n    this.graph = view;\n    this.userObj = userObj;\n    if (parentDiv === undefined) {\n        console.log(\"WARNING: parentDiv undefined!\");\n    }\n    this.div = div; this.linkDiv = linkDiv; this.parentDiv = parentDiv;\n    if (parentDiv) { \n        this.column = this.graph.get(parentDiv)!.column + 1;\n        this.parentNode = this.graph.get(parentDiv);\n        this.linkIndex = this.computeLinkIndex();\n    }\n    this.graph.addToColumnArray(this);\n\n    this.shadow = element(`<div class=\"shadow\"></div>`);\n    this.graph.container.appendChild(this.shadow);\n    this.width = div.clientWidth; this.height = div.clientHeight;\n}\n",
                    "language": "ts",
                    "iLine": 566,
                    "jLine": 584
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18,
                    "jChar": 27
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 138,
                    "jChar": 143
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_userObj"
                    ],
                    "iChar": 161,
                    "jChar": 168
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 284,
                    "jChar": 287
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 300,
                    "jChar": 307
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv"
                    ],
                    "iChar": 324,
                    "jChar": 333
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 382,
                    "jChar": 388
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 396,
                    "jChar": 401
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 402,
                    "jChar": 405
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentNode"
                    ],
                    "iChar": 443,
                    "jChar": 453
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 461,
                    "jChar": 466
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 467,
                    "jChar": 470
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkIndex"
                    ],
                    "iChar": 496,
                    "jChar": 505
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_computeLinkIndex"
                    ],
                    "iChar": 513,
                    "jChar": 529
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 548,
                    "jChar": 553
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addToColumnArray"
                    ],
                    "iChar": 554,
                    "jChar": 570
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 588,
                    "jChar": 594
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 597,
                    "jChar": 604
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 645,
                    "jChar": 650
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_container"
                    ],
                    "iChar": 651,
                    "jChar": 660
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 678,
                    "jChar": 684
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 696,
                    "jChar": 701
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 726,
                    "jChar": 732
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_remove",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "remove",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "remove() {\n    this.graph.columns[this.column] = this.graph.columns[this.column].filter(item => item !== this);\n    this.shadow.remove();\n}\n",
                    "language": "ts",
                    "iLine": 585,
                    "jLine": 589
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 20,
                    "jChar": 25
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 26,
                    "jChar": 33
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 39,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_graph"
                    ],
                    "iChar": 54,
                    "jChar": 59
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_columns"
                    ],
                    "iChar": 60,
                    "jChar": 67
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_column"
                    ],
                    "iChar": 73,
                    "jChar": 79
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 121,
                    "jChar": 127
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3759,
                    "jChar": 3765
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 78,
                    "jChar": 84
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_closeSingleNode"
                    ],
                    "iChar": 97,
                    "jChar": 103
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_removeFromSVG"
                    ],
                    "iChar": 32,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 720,
                    "jChar": 726
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_changeSearchOption"
                    ],
                    "iChar": 261,
                    "jChar": 267
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 650,
                    "jChar": 656
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 341,
                    "jChar": 347
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_setTargetPos",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "setTargetPos",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "setTargetPos(x: number, y: number) {\n    this.xTarget = x;\n    this.yTarget = y;\n}\n",
                    "language": "ts",
                    "iLine": 590,
                    "jLine": 594
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_xTarget"
                    ],
                    "iChar": 46,
                    "jChar": 53
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 68,
                    "jChar": 75
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7596,
                    "jChar": 7608
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15715,
                    "jChar": 15727
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 746,
                    "jChar": 758
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 890,
                    "jChar": 902
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_setPos",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "setPos",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "setPos(x: number, y: number) {\n    this.x = x; this.y = y;\n    this.div.style.left = `${x - this.graph.canvasRect.left}px`;\n    this.div.style.top = `${y - this.graph.canvasRect.top}px`;\n}\n",
                    "language": "ts",
                    "iLine": 595,
                    "jLine": 600
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_x"
                    ],
                    "iChar": 40,
                    "jChar": 41
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_y"
                    ],
                    "iChar": 52,
                    "jChar": 53
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 68,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 78,
                    "jChar": 82
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 133,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 143,
                    "jChar": 146
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7641,
                    "jChar": 7647
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 787,
                    "jChar": 793
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 232,
                    "jChar": 238
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_targetRect",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "targetRect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "targetRect() : Rect {\n    const r = rect(this.div);\n    return new Rect(this.xTarget, this.yTarget, this.xTarget + r.width(), this.yTarget + r.height());\n}\n",
                    "language": "ts",
                    "iLine": 601,
                    "jLine": 605
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 15,
                    "jChar": 19
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 46,
                    "jChar": 49
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 67,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_xTarget"
                    ],
                    "iChar": 77,
                    "jChar": 84
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 91,
                    "jChar": 98
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_xTarget"
                    ],
                    "iChar": 105,
                    "jChar": 112
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width",
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 117,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 131,
                    "jChar": 138
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height",
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 143,
                    "jChar": 149
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9177,
                    "jChar": 9187
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10631,
                    "jChar": 10641
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15066,
                    "jChar": 15076
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15292,
                    "jChar": 15302
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15793,
                    "jChar": 15803
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16540,
                    "jChar": 16550
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16592,
                    "jChar": 16602
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_xMax"
                    ],
                    "iChar": 131,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 294,
                    "jChar": 304
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 293,
                    "jChar": 303
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 499,
                    "jChar": 509
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 964,
                    "jChar": 974
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 103,
                    "jChar": 113
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 151,
                    "jChar": 161
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_sizeChanged",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "sizeChanged",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "sizeChanged() : boolean {\n    return (this.width != this.div.clientWidth ||\n            this.height != this.div.clientHeight);\n}\n",
                    "language": "ts",
                    "iLine": 606,
                    "jLine": 610
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 43,
                    "jChar": 48
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 57,
                    "jChar": 60
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 93,
                    "jChar": 99
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 108,
                    "jChar": 111
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12759,
                    "jChar": 12770
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14199,
                    "jChar": 14210
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 76,
                    "jChar": 87
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_anyNodeSizeChanged"
                    ],
                    "iChar": 95,
                    "jChar": 106
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_moving",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "moving",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "moving() : boolean {\n    return (this.x != this.xTarget || this.y != this.yTarget);\n}\n",
                    "language": "ts",
                    "iLine": 611,
                    "jLine": 614
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_x"
                    ],
                    "iChar": 38,
                    "jChar": 39
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_xTarget"
                    ],
                    "iChar": 48,
                    "jChar": 55
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_y"
                    ],
                    "iChar": 64,
                    "jChar": 65
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 74,
                    "jChar": 81
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12808,
                    "jChar": 12814
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 121,
                    "jChar": 127
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_update",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "update",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "update() {\n    const dx = this.xTarget - this.x;\n    const dy = this.yTarget - this.y;\n    const x = (Math.abs(dx)<=1) ? this.xTarget : (this.x + dx*0.1);\n    const y = (Math.abs(dy)<=1) ? this.yTarget : (this.y + dy*0.1);\n    this.setPos(x, y);\n    this.updateShadow();\n    this.width = this.div.clientWidth; this.height = this.div.clientHeight;\n}\n",
                    "language": "ts",
                    "iLine": 615,
                    "jLine": 624
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_xTarget"
                    ],
                    "iChar": 31,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_x"
                    ],
                    "iChar": 46,
                    "jChar": 47
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 69,
                    "jChar": 76
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_y"
                    ],
                    "iChar": 84,
                    "jChar": 85
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_xTarget"
                    ],
                    "iChar": 126,
                    "jChar": 133
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_x"
                    ],
                    "iChar": 142,
                    "jChar": 143
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_yTarget"
                    ],
                    "iChar": 194,
                    "jChar": 201
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_y"
                    ],
                    "iChar": 210,
                    "jChar": 211
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 232,
                    "jChar": 238
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 255,
                    "jChar": 267
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 280,
                    "jChar": 285
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 293,
                    "jChar": 296
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 315,
                    "jChar": 321
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 329,
                    "jChar": 332
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10249,
                    "jChar": 10255
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 199,
                    "jChar": 205
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateArrows"
                    ],
                    "iChar": 120,
                    "jChar": 126
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_computeLinkIndex",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "computeLinkIndex",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "computeLinkIndex() : string {\n    let result = \"\";\n    let digit = 1;\n    let node : Node | null = this;\n    while(node) {\n        if (node.linkDiv) {\n            let i = getChildNodeIndex(node.linkDiv).toString().padStart(3, '0');\n            result = (result==\"\") ? i : i + '.' + result;\n        }\n        node = node.parentNode;\n    }\n    return result;\n}\n",
                    "language": "ts",
                    "iLine": 625,
                    "jLine": 638
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 85,
                    "jChar": 89
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 140,
                    "jChar": 147
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getChildNodeIndex"
                    ],
                    "iChar": 171,
                    "jChar": 188
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 194,
                    "jChar": 201
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentNode"
                    ],
                    "iChar": 320,
                    "jChar": 330
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 513,
                    "jChar": 529
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_updateShadow",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "updateShadow",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "updateShadow() {\n    const sr = rect(this.div);\n    const wh = window.innerHeight;\n    let sy = (this.emphasize) ? (sr.bottom + 150) : (sr.bottom + 50);\n    sy = Math.max(wh/2+20, sy);\n    this.shadow.style.left = `${sr.left}px`;\n    this.shadow.style.top = `${sy}px`;\n    this.shadow.style.width = `${sr.width()}px`;\n    this.shadow.style.height = `1px`;\n    this.shadow.style.zIndex = `-1`;\n}\n",
                    "language": "ts",
                    "iLine": 639,
                    "jLine": 650
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 42,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_emphasize"
                    ],
                    "iChar": 102,
                    "jChar": 111
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 119,
                    "jChar": 125
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 139,
                    "jChar": 145
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 194,
                    "jChar": 200
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 207,
                    "jChar": 211
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 239,
                    "jChar": 245
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 252,
                    "jChar": 255
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 278,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 291,
                    "jChar": 296
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 327,
                    "jChar": 333
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_height"
                    ],
                    "iChar": 340,
                    "jChar": 346
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_shadow"
                    ],
                    "iChar": 365,
                    "jChar": 371
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8106,
                    "jChar": 8118
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_emphasize"
                    ],
                    "iChar": 191,
                    "jChar": 203
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_update"
                    ],
                    "iChar": 255,
                    "jChar": 267
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_method_Node_json",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "json",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    json() : any {\n        return { id: this.div.id,\n                 link: this.linkDiv?.id ?? \"null\",\n                 parent: this.parentDiv?.id ?? \"null\",\n                 emphasize: this.emphasize,\n                 userObj: this.userObj };\n    }\n}",
                    "language": "ts",
                    "iLine": 651,
                    "jLine": 658
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_div"
                    ],
                    "iChar": 45,
                    "jChar": 48
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_linkDiv"
                    ],
                    "iChar": 81,
                    "jChar": 88
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_parentDiv"
                    ],
                    "iChar": 134,
                    "jChar": 143
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_emphasize"
                    ],
                    "iChar": 192,
                    "jChar": 201
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_userObj"
                    ],
                    "iChar": 234,
                    "jChar": 241
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 2379,
                    "jChar": 2383
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18976,
                    "jChar": 18980
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 265,
                    "jChar": 269
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 228,
                    "jChar": 232
                },
                {
                    "targets": [
                        "ts_firefly_util_function_remote"
                    ],
                    "iChar": 777,
                    "jChar": 781
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Node"
        },
        {
            "uid": "ts_firefly_graphview_property_Arrow_linkDiv",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "linkDiv",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "linkDiv: HTMLElement;",
                    "language": "ts",
                    "iLine": 661,
                    "jLine": 661
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findLink"
                    ],
                    "iChar": 183,
                    "jChar": 190
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 87,
                    "jChar": 94
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 93,
                    "jChar": 100
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_property_Arrow_parentDiv",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "parentDiv",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "parentDiv: HTMLElement;",
                    "language": "ts",
                    "iLine": 662,
                    "jLine": 662
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 3546,
                    "jChar": 3555
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15193,
                    "jChar": 15202
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_allChildren"
                    ],
                    "iChar": 127,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 217,
                    "jChar": 226
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 408,
                    "jChar": 417
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 111,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 50,
                    "jChar": 59
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_property_Arrow_div",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "div",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "div: HTMLElement;",
                    "language": "ts",
                    "iLine": 663,
                    "jLine": 663
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 14543,
                    "jChar": 14546
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18366,
                    "jChar": 18369
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 343,
                    "jChar": 346
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 169,
                    "jChar": 172
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 281,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_splitColumnIntoGroups"
                    ],
                    "iChar": 237,
                    "jChar": 240
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 185,
                    "jChar": 188
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 139,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 136,
                    "jChar": 139
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_property_Arrow_drawRect",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "drawRect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "drawRect: Rect = new Rect(0,0,0,0);",
                    "language": "ts",
                    "iLine": 664,
                    "jLine": 664
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 10,
                    "jChar": 14
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 21,
                    "jChar": 25
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 499,
                    "jChar": 507
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 205,
                    "jChar": 213
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 248,
                    "jChar": 256
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 288,
                    "jChar": 296
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 330,
                    "jChar": 338
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_property_Arrow_xVertical",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "xVertical",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "xVertical: number = 0;",
                    "language": "ts",
                    "iLine": 665,
                    "jLine": 665
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 553,
                    "jChar": 562
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 441,
                    "jChar": 450
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_property_Arrow_path",
            "language": "ts",
            "module": "graphview",
            "kind": "property",
            "name": "path",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "path: SVGPathElement;",
                    "language": "ts",
                    "iLine": 666,
                    "jLine": 666
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 159,
                    "jChar": 163
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 239,
                    "jChar": 243
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 288,
                    "jChar": 292
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 337,
                    "jChar": 341
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_constructor"
                    ],
                    "iChar": 388,
                    "jChar": 392
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_addToSVG"
                    ],
                    "iChar": 56,
                    "jChar": 60
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_removeFromSVG"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 834,
                    "jChar": 838
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_method_Arrow_constructor",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "constructor(linkDiv: HTMLElement, parentDiv: HTMLElement, div: HTMLElement) {\n    this.linkDiv = linkDiv; this.parentDiv = parentDiv; this.div = div;\n    this.path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    this.path.setAttribute('stroke', '#87bdb5');\n    this.path.setAttribute('stroke-width', '3');\n    this.path.setAttribute('stroke-opacity', '1');\n    this.path.setAttribute('fill', 'transparent');\n}",
                    "language": "ts",
                    "iLine": 667,
                    "jLine": 674
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_linkDiv"
                    ],
                    "iChar": 87,
                    "jChar": 94
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 111,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 139,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 159,
                    "jChar": 163
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 239,
                    "jChar": 243
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 288,
                    "jChar": 292
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 337,
                    "jChar": 341
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 388,
                    "jChar": 392
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_method_Arrow_addToSVG",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "addToSVG",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "addToSVG(svg: SVGSVGElement) {\n    svg.appendChild(this.path);\n}",
                    "language": "ts",
                    "iLine": 675,
                    "jLine": 677
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 56,
                    "jChar": 60
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18132,
                    "jChar": 18140
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_addArrow"
                    ],
                    "iChar": 255,
                    "jChar": 263
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_method_Arrow_removeFromSVG",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "removeFromSVG",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "removeFromSVG() {\n    this.path.remove();\n}",
                    "language": "ts",
                    "iLine": 678,
                    "jLine": 680
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 32,
                    "jChar": 38
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18523,
                    "jChar": 18536
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_removeArrow"
                    ],
                    "iChar": 326,
                    "jChar": 339
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_method_Arrow_update",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "update",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "update() {\n    this.initDrawRect();\n    this.updatePath();\n}",
                    "language": "ts",
                    "iLine": 681,
                    "jLine": 684
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 20,
                    "jChar": 32
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 45,
                    "jChar": 55
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18707,
                    "jChar": 18713
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 199,
                    "jChar": 205
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateArrows"
                    ],
                    "iChar": 120,
                    "jChar": 126
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_method_Arrow_initDrawRect",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "initDrawRect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "initDrawRect() {\n    const parentRect = rect(this.parentDiv);\n    const linkRect = rect(this.linkDiv);\n    const targetRect = rect(this.div);\n    const xFrom = parentRect.right + 2;\n    let yFrom = (linkRect.top + linkRect.bottom)/2;\n    yFrom = Math.max(yFrom, parentRect.top + 12);\n    yFrom = Math.min(yFrom, parentRect.bottom - 12);\n    const xTo = targetRect.left - 2;\n    let yTo = yFrom;\n    yTo = Math.max(yTo, targetRect.top + 12);\n    yTo = Math.min(yTo, targetRect.bottom - 12);\n    this.drawRect = new Rect(xFrom, yFrom, xTo, yTo);\n    this.xVertical = (xFrom + xTo)/2;\n}",
                    "language": "ts",
                    "iLine": 685,
                    "jLine": 699
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 40,
                    "jChar": 44
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_parentDiv"
                    ],
                    "iChar": 50,
                    "jChar": 59
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 83,
                    "jChar": 87
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_linkDiv"
                    ],
                    "iChar": 93,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 126,
                    "jChar": 130
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_div"
                    ],
                    "iChar": 136,
                    "jChar": 139
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 171,
                    "jChar": 176
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 208,
                    "jChar": 211
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 223,
                    "jChar": 229
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 273,
                    "jChar": 276
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 323,
                    "jChar": 329
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 364,
                    "jChar": 368
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 430,
                    "jChar": 433
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 476,
                    "jChar": 482
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 499,
                    "jChar": 507
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 514,
                    "jChar": 518
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_xVertical"
                    ],
                    "iChar": 553,
                    "jChar": 562
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_update"
                    ],
                    "iChar": 20,
                    "jChar": 32
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_graphview_method_Arrow_updatePath",
            "language": "ts",
            "module": "graphview",
            "kind": "method",
            "name": "updatePath",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    updatePath() {\n        /*if (!document.body.contains(this.linkDiv) || !document.body.contains(this.div)) {\n            this.removeFromSVG();\n            return;\n        }*/\n        const startX = this.drawRect.left;\n        const startY = this.drawRect.top;\n        const endX = this.drawRect.right;\n        const endY = this.drawRect.bottom;\n        const cornerRadius = Math.min(Math.abs(endY-startY)/2, 10);\n        const midX = this.xVertical;\n        const vs = (endY < startY) ? -1 : +1;\n\n        const d = [\n            `M ${startX} ${startY}`,\n            `H ${midX - cornerRadius}`,\n            `Q ${midX} ${startY} ${midX} ${startY + vs*cornerRadius}`,\n            `V ${endY - vs*cornerRadius}`,\n            `Q ${midX} ${endY} ${midX + cornerRadius} ${endY}`,\n            `H ${endX}`,\n        ].join(' ');\n\n        this.path.setAttribute('d', d);\n    }\n}",
                    "language": "ts",
                    "iLine": 700,
                    "jLine": 724
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 205,
                    "jChar": 213
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 214,
                    "jChar": 218
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 248,
                    "jChar": 256
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 257,
                    "jChar": 260
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 288,
                    "jChar": 296
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 297,
                    "jChar": 302
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 330,
                    "jChar": 338
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 339,
                    "jChar": 345
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_xVertical"
                    ],
                    "iChar": 441,
                    "jChar": 450
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_path"
                    ],
                    "iChar": 834,
                    "jChar": 838
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_update"
                    ],
                    "iChar": 45,
                    "jChar": 55
                }
            ],
            "children": [],
            "parent": "ts_firefly_graphview_class_Arrow"
        },
        {
            "uid": "ts_firefly_util_class_Rect",
            "language": "ts",
            "module": "util",
            "kind": "class",
            "name": "Rect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "export class Rect {\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left; this.top = top; this.right = right; this.bottom = bottom; \n    }\n    width() : number { return this.right - this.left; }\n    height() : number { return this.bottom - this.top; }\n}\n",
                    "language": "ts",
                    "iLine": 6,
                    "jLine": 17
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 674,
                    "jChar": 678
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 1203,
                    "jChar": 1207
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10351,
                    "jChar": 10355
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2572,
                    "jChar": 2576
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2632,
                    "jChar": 2636
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 104,
                    "jChar": 108
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 115,
                    "jChar": 119
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1423,
                    "jChar": 1427
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_canvasRect"
                    ],
                    "iChar": 12,
                    "jChar": 16
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_constructor"
                    ],
                    "iChar": 401,
                    "jChar": 405
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 15,
                    "jChar": 19
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 67,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 10,
                    "jChar": 14
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Arrow_drawRect"
                    ],
                    "iChar": 21,
                    "jChar": 25
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 514,
                    "jChar": 518
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 111,
                    "jChar": 115
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 187,
                    "jChar": 191
                }
            ],
            "children": [
                "ts_firefly_util_property_Rect_left",
                "ts_firefly_util_property_Rect_top",
                "ts_firefly_util_property_Rect_right",
                "ts_firefly_util_property_Rect_bottom",
                "ts_firefly_util_method_Rect_constructor",
                "ts_firefly_util_method_Rect_width",
                "ts_firefly_util_method_Rect_height"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_element",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "element",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "export function element(html: string) : HTMLElement {\n    let div = document.createElement('div');\n    div.innerHTML = html;  \n    return div.firstChild as HTMLElement;\n}\n",
                    "language": "ts",
                    "iLine": 18,
                    "jLine": 23
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 1915,
                    "jChar": 1922
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_constructor"
                    ],
                    "iChar": 597,
                    "jChar": 604
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getChildNodeIndex"
                    ],
                    "iChar": 34,
                    "jChar": 41
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getChildNodeIndex"
                    ],
                    "iChar": 84,
                    "jChar": 91
                },
                {
                    "targets": [
                        "ts_firefly_util_function_getChildNodeIndex"
                    ],
                    "iChar": 125,
                    "jChar": 132
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 590,
                    "jChar": 597
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 649,
                    "jChar": 656
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 79,
                    "jChar": 86
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 488,
                    "jChar": 495
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 464,
                    "jChar": 471
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 153,
                    "jChar": 160
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 186,
                    "jChar": 193
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 338,
                    "jChar": 345
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1148,
                    "jChar": 1155
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_rect",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "rect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// given an element, returns the rectangle relative to document origin\nexport function rect(el: HTMLElement) : Rect {\n            const r = el.getBoundingClientRect();\n        return new Rect(r.left + window.scrollX, r.top + window.scrollY,\n                    r.right + window.scrollX, r.bottom + window.scrollY);\n}\n",
                    "language": "ts",
                    "iLine": 24,
                    "jLine": 30
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 111,
                    "jChar": 115
                },
                {
                    "targets": [
                        "ts_firefly_util_class_Rect"
                    ],
                    "iChar": 187,
                    "jChar": 191
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 194,
                    "jChar": 198
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 219,
                    "jChar": 222
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 263,
                    "jChar": 268
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 289,
                    "jChar": 295
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7138,
                    "jChar": 7142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7181,
                    "jChar": 7185
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7219,
                    "jChar": 7223
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7382,
                    "jChar": 7386
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9623,
                    "jChar": 9627
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2597,
                    "jChar": 2601
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3813,
                    "jChar": 3817
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 905,
                    "jChar": 909
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 952,
                    "jChar": 956
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 999,
                    "jChar": 1003
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 332,
                    "jChar": 336
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 371,
                    "jChar": 375
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 405,
                    "jChar": 409
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 552,
                    "jChar": 556
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 333,
                    "jChar": 337
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 40,
                    "jChar": 44
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 83,
                    "jChar": 87
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 126,
                    "jChar": 130
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 99,
                    "jChar": 103
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 320,
                    "jChar": 324
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 415,
                    "jChar": 419
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 450,
                    "jChar": 454
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 559,
                    "jChar": 563
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 646,
                    "jChar": 650
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 752,
                    "jChar": 756
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 788,
                    "jChar": 792
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 906,
                    "jChar": 910
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 226,
                    "jChar": 230
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_getBodyWidth",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "getBodyWidth",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// find width of body element\nexport function getBodyWidth() : number {\n    let bodyWidth: string = getComputedStyle(document.body).width;\n    return parseInt(bodyWidth, 10);\n}\n",
                    "language": "ts",
                    "iLine": 31,
                    "jLine": 36
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 132,
                    "jChar": 137
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 8655,
                    "jChar": 8667
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_arrangeAll"
                    ],
                    "iChar": 474,
                    "jChar": 486
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_scrollToView",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "scrollToView",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "export function scrollToView(div: HTMLElement, padding: number = 48) : [number, number]{\n    const rect = div.getBoundingClientRect();\n    const windowHeight = window.innerHeight;\n    const windowWidth = window.innerWidth;\n    let x = window.scrollX;\n    let y = window.scrollY;\n    // Check vertical visibility\n    if (rect.top - padding < 0) {\n        // The div is above the viewport\n        y= window.scrollY + rect.top - padding;\n    } else if (rect.bottom + padding > windowHeight) {\n        // The div is below the viewport\n        y= window.scrollY + rect.bottom + padding - windowHeight;\n    }\n    // Check horizontal visibility\n    if (rect.left - padding < 0) {\n        // The div is to the left of the viewport\n        x = window.scrollX + rect.left - padding;\n    } else if (rect.right + padding > windowWidth) {\n        // The div is to the right of the viewport\n        x = window.scrollX + rect.right + padding - windowWidth;\n    }\n    // Perform the scroll if needed\n    if (x != window.scrollX || y != window.scrollY) {\n        window.scrollTo(x, y);\n    }\n    return [x, y];\n}\n",
                    "language": "ts",
                    "iLine": 37,
                    "jLine": 65
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 99,
                    "jChar": 103
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 320,
                    "jChar": 324
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 325,
                    "jChar": 328
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 415,
                    "jChar": 419
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 420,
                    "jChar": 423
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 450,
                    "jChar": 454
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 455,
                    "jChar": 461
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 559,
                    "jChar": 563
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 564,
                    "jChar": 570
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 646,
                    "jChar": 650
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 651,
                    "jChar": 655
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 752,
                    "jChar": 756
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 757,
                    "jChar": 761
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 788,
                    "jChar": 792
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 793,
                    "jChar": 798
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 906,
                    "jChar": 910
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 911,
                    "jChar": 916
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollTo"
                    ],
                    "iChar": 1053,
                    "jChar": 1061
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12944,
                    "jChar": 12956
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateScroll"
                    ],
                    "iChar": 249,
                    "jChar": 261
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_scrollTo",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "scrollTo",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "export function scrollTo(x: number | undefined, y: number | undefined) {\n    let scrollOptions: ScrollToOptions = {\n        behavior: 'smooth'\n    };\n    scrollOptions.left = x;\n    scrollOptions.top = y;\n    window.scrollTo(scrollOptions);\n}\n",
                    "language": "ts",
                    "iLine": 66,
                    "jLine": 74
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 6566,
                    "jChar": 6574
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12594,
                    "jChar": 12602
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 219,
                    "jChar": 227
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 2101,
                    "jChar": 2109
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 1053,
                    "jChar": 1061
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_splitArray",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "splitArray",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "export function splitArray<T>(arr: T[], cond: (item: T) => boolean): [T[], T[]] {\n    const trueArray: T[] = [];\n    const falseArray: T[] = [];\n\n    arr.forEach(item => {\n        if (cond(item)) {\n            trueArray.push(item);\n        } else {\n            falseArray.push(item);\n        }\n    });\n\n    return [trueArray, falseArray];\n}\n",
                    "language": "ts",
                    "iLine": 75,
                    "jLine": 89
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_debounce",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "debounce",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// Debounce function\nexport function debounce<T extends (...args: any[]) => void>(func: T, wait: number): (...args: Parameters<T>) => void {\n    let timeout: number | undefined;\n    return function (this: ThisParameterType<T>, ...args: Parameters<T>) {\n        clearTimeout(timeout);\n  \n        timeout = setTimeout(() => {\n            func.apply(this, args);\n        }, wait) as unknown as number;\n    };\n}\n",
                    "language": "ts",
                    "iLine": 90,
                    "jLine": 101
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_debouncedSaveAll"
                    ],
                    "iChar": 25,
                    "jChar": 33
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_getChildNodeIndex",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "getChildNodeIndex",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "export function getChildNodeIndex(element: Element): number {\n    return Array.from(element.parentElement!.children).indexOf(element);\n}\n",
                    "language": "ts",
                    "iLine": 102,
                    "jLine": 105
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 34,
                    "jChar": 41
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 84,
                    "jChar": 91
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 125,
                    "jChar": 132
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3560,
                    "jChar": 3577
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_computeLinkIndex"
                    ],
                    "iChar": 171,
                    "jChar": 188
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_function_remote",
            "language": "ts",
            "module": "util",
            "kind": "function",
            "name": "remote",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// sends a command request to the server, waits on the reply, returns dictionary object\nexport async function remote(endpointAndFunc: string, args: any) : Promise<any> {\n    if (!endpointAndFunc.startsWith(\"@\")) {\n        console.error(`endpoint '${endpointAndFunc}' must start with '@'`);\n    }\n    const parts = endpointAndFunc.split(\".\");\n    const endpoint = parts[0].slice(1);\n    const func = parts[1];\n    try {\n        const response = await fetch(`http://localhost:8000/${endpoint}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ func: func, args: args })\n        });\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const obj= await response.json();\n        return obj;\n    } catch (error) {\n        console.error('Error:', error);\n    }\n    return [];\n}",
                    "language": "ts",
                    "iLine": 106,
                    "jLine": 129
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json",
                        "ts_firefly_graphview_method_Node_json"
                    ],
                    "iChar": 777,
                    "jChar": 781
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_search"
                    ],
                    "iChar": 71,
                    "jChar": 77
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importFolders"
                    ],
                    "iChar": 84,
                    "jChar": 90
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_save"
                    ],
                    "iChar": 57,
                    "jChar": 63
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_load"
                    ],
                    "iChar": 68,
                    "jChar": 74
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_util_property_Rect_left",
            "language": "ts",
            "module": "util",
            "kind": "property",
            "name": "left",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "left: number;",
                    "language": "ts",
                    "iLine": 9,
                    "jLine": 9
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7258,
                    "jChar": 7262
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7421,
                    "jChar": 7425
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9673,
                    "jChar": 9677
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10664,
                    "jChar": 10668
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10687,
                    "jChar": 10691
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10695,
                    "jChar": 10699
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10944,
                    "jChar": 10948
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10969,
                    "jChar": 10973
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11138,
                    "jChar": 11142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11162,
                    "jChar": 11166
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11364,
                    "jChar": 11368
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11387,
                    "jChar": 11391
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12437,
                    "jChar": 12441
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2433,
                    "jChar": 2437
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 4004,
                    "jChar": 4008
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1257,
                    "jChar": 1261
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1715,
                    "jChar": 1719
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 440,
                    "jChar": 444
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 587,
                    "jChar": 591
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 379,
                    "jChar": 383
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 323,
                    "jChar": 327
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 346,
                    "jChar": 350
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 354,
                    "jChar": 358
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 583,
                    "jChar": 587
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 608,
                    "jChar": 612
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 761,
                    "jChar": 765
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 785,
                    "jChar": 789
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 971,
                    "jChar": 975
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 994,
                    "jChar": 998
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1960,
                    "jChar": 1964
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 78,
                    "jChar": 82
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 207,
                    "jChar": 211
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 364,
                    "jChar": 368
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 214,
                    "jChar": 218
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 194,
                    "jChar": 198
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 651,
                    "jChar": 655
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 757,
                    "jChar": 761
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_constructor"
                    ],
                    "iChar": 81,
                    "jChar": 85
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 44,
                    "jChar": 48
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 167,
                    "jChar": 171
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_animateLogoToLeft"
                    ],
                    "iChar": 882,
                    "jChar": 886
                }
            ],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_util_property_Rect_top",
            "language": "ts",
            "module": "util",
            "kind": "property",
            "name": "top",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "top: number;",
                    "language": "ts",
                    "iLine": 10,
                    "jLine": 10
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7294,
                    "jChar": 7297
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9785,
                    "jChar": 9788
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10731,
                    "jChar": 10734
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10753,
                    "jChar": 10756
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10760,
                    "jChar": 10763
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10991,
                    "jChar": 10994
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11015,
                    "jChar": 11018
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11189,
                    "jChar": 11192
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11212,
                    "jChar": 11215
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11423,
                    "jChar": 11426
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11445,
                    "jChar": 11448
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 12506,
                    "jChar": 12509
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15345,
                    "jChar": 15348
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16605,
                    "jChar": 16608
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2502,
                    "jChar": 2505
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 4053,
                    "jChar": 4056
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1089,
                    "jChar": 1092
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1158,
                    "jChar": 1161
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1331,
                    "jChar": 1334
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1758,
                    "jChar": 1761
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 472,
                    "jChar": 475
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 483,
                    "jChar": 486
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 386,
                    "jChar": 389
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 408,
                    "jChar": 411
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 415,
                    "jChar": 418
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 626,
                    "jChar": 629
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 650,
                    "jChar": 653
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 808,
                    "jChar": 811
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 831,
                    "jChar": 834
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1026,
                    "jChar": 1029
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1048,
                    "jChar": 1051
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 2025,
                    "jChar": 2028
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 548,
                    "jChar": 551
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 164,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_setPos"
                    ],
                    "iChar": 143,
                    "jChar": 146
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 252,
                    "jChar": 255
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 208,
                    "jChar": 211
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 273,
                    "jChar": 276
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 430,
                    "jChar": 433
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 257,
                    "jChar": 260
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 219,
                    "jChar": 222
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 325,
                    "jChar": 328
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 420,
                    "jChar": 423
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_constructor"
                    ],
                    "iChar": 99,
                    "jChar": 102
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 50,
                    "jChar": 53
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 238,
                    "jChar": 241
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 295,
                    "jChar": 298
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 355,
                    "jChar": 358
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 441,
                    "jChar": 444
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 502,
                    "jChar": 505
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 835,
                    "jChar": 838
                }
            ],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_util_property_Rect_right",
            "language": "ts",
            "module": "util",
            "kind": "property",
            "name": "right",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "right: number;",
                    "language": "ts",
                    "iLine": 11,
                    "jLine": 11
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9190,
                    "jChar": 9195
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9720,
                    "jChar": 9725
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10795,
                    "jChar": 10800
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10819,
                    "jChar": 10824
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10828,
                    "jChar": 10833
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11036,
                    "jChar": 11041
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11061,
                    "jChar": 11066
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11238,
                    "jChar": 11243
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11263,
                    "jChar": 11268
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1048,
                    "jChar": 1053
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1798,
                    "jChar": 1803
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_xMax"
                    ],
                    "iChar": 144,
                    "jChar": 149
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 422,
                    "jChar": 427
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 446,
                    "jChar": 451
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 470,
                    "jChar": 475
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 479,
                    "jChar": 484
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 667,
                    "jChar": 672
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 692,
                    "jChar": 697
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 853,
                    "jChar": 858
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 878,
                    "jChar": 883
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 171,
                    "jChar": 176
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 297,
                    "jChar": 302
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 263,
                    "jChar": 268
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 793,
                    "jChar": 798
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 911,
                    "jChar": 916
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_constructor"
                    ],
                    "iChar": 115,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 31,
                    "jChar": 36
                }
            ],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_util_property_Rect_bottom",
            "language": "ts",
            "module": "util",
            "kind": "property",
            "name": "bottom",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "bottom: number;",
                    "language": "ts",
                    "iLine": 12,
                    "jLine": 12
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7306,
                    "jChar": 7312
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 9834,
                    "jChar": 9840
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10865,
                    "jChar": 10871
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10890,
                    "jChar": 10896
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 10900,
                    "jChar": 10906
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11084,
                    "jChar": 11090
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11110,
                    "jChar": 11116
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11291,
                    "jChar": 11297
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11317,
                    "jChar": 11323
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15362,
                    "jChar": 15368
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 16553,
                    "jChar": 16559
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3908,
                    "jChar": 3914
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 3928,
                    "jChar": 3934
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1104,
                    "jChar": 1110
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1212,
                    "jChar": 1218
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1381,
                    "jChar": 1387
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Arrow"
                    ],
                    "iChar": 1840,
                    "jChar": 1846
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 484,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 528,
                    "jChar": 534
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 512,
                    "jChar": 518
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 537,
                    "jChar": 543
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 547,
                    "jChar": 553
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 711,
                    "jChar": 717
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 737,
                    "jChar": 743
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 902,
                    "jChar": 908
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 928,
                    "jChar": 934
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 565,
                    "jChar": 571
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_checkGroups"
                    ],
                    "iChar": 116,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 119,
                    "jChar": 125
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_updateShadow"
                    ],
                    "iChar": 139,
                    "jChar": 145
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 223,
                    "jChar": 229
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 323,
                    "jChar": 329
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_initDrawRect"
                    ],
                    "iChar": 476,
                    "jChar": 482
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Arrow_updatePath"
                    ],
                    "iChar": 339,
                    "jChar": 345
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 289,
                    "jChar": 295
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 455,
                    "jChar": 461
                },
                {
                    "targets": [
                        "ts_firefly_util_function_scrollToView"
                    ],
                    "iChar": 564,
                    "jChar": 570
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_constructor"
                    ],
                    "iChar": 135,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_util_method_Rect_height"
                    ],
                    "iChar": 36,
                    "jChar": 42
                }
            ],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_util_method_Rect_constructor",
            "language": "ts",
            "module": "util",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "constructor(left: number, top: number, right: number, bottom: number) {\n    this.left = left; this.top = top; this.right = right; this.bottom = bottom; \n}",
                    "language": "ts",
                    "iLine": 13,
                    "jLine": 15
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 81,
                    "jChar": 85
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 99,
                    "jChar": 102
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 115,
                    "jChar": 120
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 135,
                    "jChar": 141
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_util_method_Rect_width",
            "language": "ts",
            "module": "util",
            "kind": "method",
            "name": "width",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "width() : number { return this.right - this.left; }",
                    "language": "ts",
                    "iLine": 16,
                    "jLine": 16
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_right"
                    ],
                    "iChar": 31,
                    "jChar": 36
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 44,
                    "jChar": 48
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11531,
                    "jChar": 11536
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2682,
                    "jChar": 2687
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1122,
                    "jChar": 1127
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 117,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 237,
                    "jChar": 242
                }
            ],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_util_method_Rect_height",
            "language": "ts",
            "module": "util",
            "kind": "method",
            "name": "height",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    height() : number { return this.bottom - this.top; }\n}",
                    "language": "ts",
                    "iLine": 17,
                    "jLine": 18
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_bottom"
                    ],
                    "iChar": 36,
                    "jChar": 42
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 50,
                    "jChar": 53
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7326,
                    "jChar": 7332
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 7489,
                    "jChar": 7495
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 11578,
                    "jChar": 11584
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15079,
                    "jChar": 15085
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 15806,
                    "jChar": 15812
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 2708,
                    "jChar": 2714
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 504,
                    "jChar": 510
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 651,
                    "jChar": 657
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1165,
                    "jChar": 1171
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 306,
                    "jChar": 312
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_spaceNodesInGroup"
                    ],
                    "iChar": 977,
                    "jChar": 983
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_targetRect"
                    ],
                    "iChar": 143,
                    "jChar": 149
                }
            ],
            "children": [],
            "parent": "ts_firefly_util_class_Rect"
        },
        {
            "uid": "ts_firefly_db_global_dbInstance",
            "language": "ts",
            "module": "db",
            "kind": "global",
            "name": "dbInstance",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let dbInstance : any;",
                    "language": "ts",
                    "iLine": 2,
                    "jLine": 2
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_db_function_openDB"
                    ],
                    "iChar": 61,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_db_function_openDB"
                    ],
                    "iChar": 141,
                    "jChar": 151
                },
                {
                    "targets": [
                        "ts_firefly_db_function_openDB"
                    ],
                    "iChar": 982,
                    "jChar": 992
                },
                {
                    "targets": [
                        "ts_firefly_db_function_openDB"
                    ],
                    "iChar": 1036,
                    "jChar": 1046
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_db_global_dirHandle",
            "language": "ts",
            "module": "db",
            "kind": "global",
            "name": "dirHandle",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let dirHandle : any = null;\n",
                    "language": "ts",
                    "iLine": 3,
                    "jLine": 4
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_db_function_storeHandle"
                    ],
                    "iChar": 711,
                    "jChar": 720
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 577,
                    "jChar": 586
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFile"
                    ],
                    "iChar": 245,
                    "jChar": 254
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_db_function_openDB",
            "language": "ts",
            "module": "db",
            "kind": "function",
            "name": "openDB",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function openDB() {\n    console.log(\"openDB\");\n    if (dbInstance) {\n        console.log(\"already have a db instance\");\n        return dbInstance;\n    }\n    console.log(\"creating db instance\");\n    return new Promise((resolve, reject) => {\n        const request = indexedDB.open('myDatabase', 1);  // 'myDatabase' is the name of your database.\n\n        // This event is only triggered once when the database is first created or when \n        // the version number is changed (like from 1 to 2).\n        request.onupgradeneeded = function(event: any) {\n            console.log(\"onupgradeneeded\");\n            const db = event.target.result;\n            \n            // Create an object store named 'fileHandles' if it doesn't exist.\n            if (!db.objectStoreNames.contains('fileHandles')) {\n                db.createObjectStore('fileHandles');\n            }\n        };\n\n        request.onsuccess = function(event: any) {\n            console.log(\"onsuccess\");\n            dbInstance = event.target.result;\n            resolve(dbInstance);\n        };\n\n        request.onerror = function(event: any) {\n            console.error(\"Error opening database:\", event.target.errorCode);\n            reject(event.target.errorCode);\n        };\n    });\n}\n\n\n",
                    "language": "ts",
                    "iLine": 5,
                    "jLine": 41
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_db_global_dbInstance"
                    ],
                    "iChar": 61,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_db_global_dbInstance"
                    ],
                    "iChar": 141,
                    "jChar": 151
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 280,
                    "jChar": 284
                },
                {
                    "targets": [
                        "ts_firefly_db_global_dbInstance"
                    ],
                    "iChar": 982,
                    "jChar": 992
                },
                {
                    "targets": [
                        "ts_firefly_db_global_dbInstance"
                    ],
                    "iChar": 1036,
                    "jChar": 1046
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_db_function_storeHandle",
            "language": "ts",
            "module": "db",
            "kind": "function",
            "name": "storeHandle",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// Store Directory Handle in IndexedDB\nasync function storeHandle(): Promise<void> {\n    return new Promise((resolve, reject) => {\n        const openRequest = indexedDB.open('myDatabase', 1);\n\n        openRequest.onupgradeneeded = (event: any) => {\n            const db = event.target.result;\n            if (!db.objectStoreNames.contains('fileHandles')) {\n                db.createObjectStore('fileHandles');\n            }\n        };\n\n        openRequest.onsuccess = () => {\n            const db = openRequest.result;\n            const transaction = db.transaction('fileHandles', 'readwrite');\n            const objectStore = transaction.objectStore('fileHandles');\n            const request = objectStore.put(dirHandle, 'dirHandle');\n\n            request.onsuccess = () => {\n                resolve();\n            };\n\n            request.onerror = () => {\n                reject(new Error('Error storing dirHandle to IndexedDB'));\n            };\n        };\n\n        openRequest.onerror = () => {\n            reject(new Error('Error opening database'));\n        };\n    });\n}\n",
                    "language": "ts",
                    "iLine": 42,
                    "jLine": 74
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 169,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_db_global_dirHandle",
                        "ts_firefly_firefly_global_dirHandle"
                    ],
                    "iChar": 711,
                    "jChar": 720
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_db_function_getStoredHandle",
            "language": "ts",
            "module": "db",
            "kind": "function",
            "name": "getStoredHandle",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// Retrieve Directory Handle from IndexedDB\nasync function getStoredHandle() : Promise<any> {\n    console.log(\"getStoredHandle\");\n    return new Promise((resolve, reject) => {\n        const openRequest = indexedDB.open('myDatabase', 1);\n\n        openRequest.onsuccess = () => {\n            const db = openRequest.result;\n            const transaction = db.transaction('fileHandles', 'readonly');\n            const objectStore = transaction.objectStore('fileHandles');\n            const request = objectStore.get('dirHandle');\n\n            request.onsuccess = () => {\n                if (request.result) {\n                    resolve(request.result);\n                } else {\n                    resolve(null);  // or resolve(undefined);\n                }\n            };\n\n            request.onerror = () => {\n                //reject(new Error('Error retrieving dirHandle from IndexedDB'));\n                resolve(null);\n            };\n        };\n\n        openRequest.onerror = () => {\n            reject(new Error('Error opening database'));\n        };\n    });\n}\n",
                    "language": "ts",
                    "iLine": 75,
                    "jLine": 106
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 214,
                    "jChar": 218
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_get"
                    ],
                    "iChar": 508,
                    "jChar": 511
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_useLocalFiles",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_useLocalFiles",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "const s_useLocalFiles = false;              // change this to true to enable local file access",
                    "language": "ts",
                    "iLine": 14,
                    "jLine": 14
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 67,
                    "jChar": 82
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_dirHandle",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "dirHandle",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let dirHandle: any | null = null;",
                    "language": "ts",
                    "iLine": 15,
                    "jLine": 15
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_db_function_storeHandle"
                    ],
                    "iChar": 711,
                    "jChar": 720
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 577,
                    "jChar": 586
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFile"
                    ],
                    "iChar": 245,
                    "jChar": 254
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_allCards",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_allCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "var s_allCards: Card[];",
                    "language": "ts",
                    "iLine": 16,
                    "jLine": 16
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 16,
                    "jChar": 20
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 198,
                    "jChar": 208
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 263,
                    "jChar": 273
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 126,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 226,
                    "jChar": 236
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_graphView",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_graphView",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "var s_graphView : GraphView;",
                    "language": "ts",
                    "iLine": 17,
                    "jLine": 17
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 18,
                    "jChar": 27
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_graph"
                    ],
                    "iChar": 98,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_eventLoop"
                    ],
                    "iChar": 27,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 197,
                    "jChar": 208
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openSession"
                    ],
                    "iChar": 202,
                    "jChar": 213
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_reset"
                    ],
                    "iChar": 23,
                    "jChar": 34
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 338,
                    "jChar": 349
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 98,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 502,
                    "jChar": 513
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 576,
                    "jChar": 587
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 93,
                    "jChar": 104
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_saveAll"
                    ],
                    "iChar": 74,
                    "jChar": 85
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 208,
                    "jChar": 219
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 229,
                    "jChar": 240
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 324,
                    "jChar": 335
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_closeCard"
                    ],
                    "iChar": 77,
                    "jChar": 88
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_closeCard"
                    ],
                    "iChar": 174,
                    "jChar": 185
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_mainIcon",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_mainIcon",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let s_mainIcon = \"icon-search\";",
                    "language": "ts",
                    "iLine": 18,
                    "jLine": 18
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_changeSearchOption"
                    ],
                    "iChar": 133,
                    "jChar": 143
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_mainOption",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_mainOption",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let s_mainOption = \"search\";\n",
                    "language": "ts",
                    "iLine": 19,
                    "jLine": 20
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_changeSearchOption"
                    ],
                    "iChar": 160,
                    "jChar": 172
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_class_CodeBlock",
            "language": "ts",
            "module": "firefly",
            "kind": "class",
            "name": "CodeBlock",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class CodeBlock {\n    text: string = \"\";                  // actual code text\n    language: string;                   // \".ts\", \".py\", \".cpp\", \".hpp\", etc.\n    iLine: number = 0;                  // 1-based line index in original code file\n    constructor(code: string, language: string, iLine: number) {\n        this.text = code; this.language = language; this.iLine = iLine;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 21,
                    "jLine": 29
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_code"
                    ],
                    "iChar": 6,
                    "jChar": 15
                }
            ],
            "children": [
                "ts_firefly_firefly_property_CodeBlock_text",
                "ts_firefly_firefly_property_CodeBlock_language",
                "ts_firefly_firefly_property_CodeBlock_iLine",
                "ts_firefly_firefly_method_CodeBlock_constructor"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_class_Dependency",
            "language": "ts",
            "module": "firefly",
            "kind": "class",
            "name": "Dependency",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Dependency {\n    iChar: number = 0;                  // character index in code of start of symbol\n    jChar: number = 0;                  // character index in code after symbol\n    targets: string[] = [];             // card uids we link to\n};\n",
                    "language": "ts",
                    "iLine": 30,
                    "jLine": 35
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 733,
                    "jChar": 743
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 796,
                    "jChar": 806
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependsOn"
                    ],
                    "iChar": 11,
                    "jChar": 21
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependents"
                    ],
                    "iChar": 12,
                    "jChar": 22
                }
            ],
            "children": [
                "ts_firefly_firefly_property_Dependency_iChar",
                "ts_firefly_firefly_property_Dependency_jChar",
                "ts_firefly_firefly_property_Dependency_targets",
                "ts_firefly_firefly_property_Dependency_};"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_class_Card",
            "language": "ts",
            "module": "firefly",
            "kind": "class",
            "name": "Card",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Card {\n    uid: string = \"\";                   // uid; something like lang_module_kind_name, but maybe other decorators too\n    language: string = \"\";              // language shortname of original code\n    module: string = \"\";                // module: eg. firefly or graphview\n    kind: string = \"\";                  // \"class\" or \"function\" or \"other\"\n    name: string = \"\";                  // name of function or class being defined\n    purpose: string = \"\";               // purpose\n    examples: string = \"\";              // examples\n    inputs: string = \"\";                // inputs\n    outputs: string = \"\";               // outputs\n    code: CodeBlock[] = [];             // actual text from code file\n    dependsOn: Dependency[] = [];       // cards we depend on\n    dependents: Dependency[] =[];       // cards that depend on us\n    children: Card[] =[];               // if we're a class, cards for methods\n    parent: string = \"\";                // if we're a method or property, points to parent\n    rankFromBottom: number = 0;         // 1 means depends on nothing; x means depends on things with rank < x\n    rankFromTop: number = 0;            // 1 means nothing calls this; x means called by things with rank < x\n\n}\n",
                    "language": "ts",
                    "iLine": 36,
                    "jLine": 55
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_CodeBlock"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 733,
                    "jChar": 743
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 796,
                    "jChar": 806
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_allCards"
                    ],
                    "iChar": 16,
                    "jChar": 20
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 228,
                    "jChar": 232
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 89,
                    "jChar": 93
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 167,
                    "jChar": 171
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 28,
                    "jChar": 32
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 245,
                    "jChar": 249
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChain"
                    ],
                    "iChar": 25,
                    "jChar": 29
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChain"
                    ],
                    "iChar": 35,
                    "jChar": 39
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 82,
                    "jChar": 86
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 92,
                    "jChar": 96
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_visitCount"
                    ],
                    "iChar": 22,
                    "jChar": 26
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visited"
                    ],
                    "iChar": 23,
                    "jChar": 27
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visit"
                    ],
                    "iChar": 21,
                    "jChar": 25
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findDependency"
                    ],
                    "iChar": 127,
                    "jChar": 131
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findDependency"
                    ],
                    "iChar": 141,
                    "jChar": 145
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 96,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 134,
                    "jChar": 138
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 25,
                    "jChar": 29
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 137,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_children"
                    ],
                    "iChar": 10,
                    "jChar": 14
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Link_card"
                    ],
                    "iChar": 6,
                    "jChar": 10
                },
                {
                    "targets": [
                        "ts_firefly_firefly_method_Link_constructor"
                    ],
                    "iChar": 36,
                    "jChar": 40
                }
            ],
            "children": [
                "ts_firefly_firefly_property_Card_uid",
                "ts_firefly_firefly_property_Card_language",
                "ts_firefly_firefly_property_Card_module",
                "ts_firefly_firefly_property_Card_kind",
                "ts_firefly_firefly_property_Card_name",
                "ts_firefly_firefly_property_Card_purpose",
                "ts_firefly_firefly_property_Card_examples",
                "ts_firefly_firefly_property_Card_inputs",
                "ts_firefly_firefly_property_Card_outputs",
                "ts_firefly_firefly_property_Card_code",
                "ts_firefly_firefly_property_Card_dependsOn",
                "ts_firefly_firefly_property_Card_dependents",
                "ts_firefly_firefly_property_Card_children",
                "ts_firefly_firefly_property_Card_parent",
                "ts_firefly_firefly_property_Card_rankFromBottom",
                "ts_firefly_firefly_property_Card_rankFromTop"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_class_CardView",
            "language": "ts",
            "module": "firefly",
            "kind": "class",
            "name": "CardView",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class CardView {\n    state: CardViewState = CardViewState.Compact;\n    xScroll: number =0;\n    yScroll: number =0;\n    constructor(state: CardViewState) {\n        this.state = state;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 63,
                    "jLine": 71
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 397,
                    "jChar": 405
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 93,
                    "jChar": 101
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 370,
                    "jChar": 378
                }
            ],
            "children": [
                "ts_firefly_firefly_property_CardView_state",
                "ts_firefly_firefly_property_CardView_xScroll",
                "ts_firefly_firefly_property_CardView_yScroll",
                "ts_firefly_firefly_method_CardView_constructor"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_main",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "main",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function main() {\n    console.log(\"firefly \u1566(\u30c4)\u1564\");\n    await run();\n}\n\n",
                    "language": "ts",
                    "iLine": 72,
                    "jLine": 77
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 68,
                    "jChar": 71
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_run",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "run",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function run() {\n    await init();\n    await loadCards();\n    await animateLogoToLeft();\n    await openSession();\n    searchBox();\n    testSearch(\"animate logo to left\");\n    eventLoop();\n}\n",
                    "language": "ts",
                    "iLine": 78,
                    "jLine": 87
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_init"
                    ],
                    "iChar": 33,
                    "jChar": 37
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 51,
                    "jChar": 60
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_animateLogoToLeft"
                    ],
                    "iChar": 74,
                    "jChar": 91
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openSession"
                    ],
                    "iChar": 105,
                    "jChar": 116
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 124,
                    "jChar": 133
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_testSearch"
                    ],
                    "iChar": 141,
                    "jChar": 151
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_eventLoop"
                    ],
                    "iChar": 181,
                    "jChar": 190
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_main"
                    ],
                    "iChar": 68,
                    "jChar": 71
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_init",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "init",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function init() {\n    logo();\n    graph();\n    keyboard();\n}\n",
                    "language": "ts",
                    "iLine": 88,
                    "jLine": 93
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 28,
                    "jChar": 32
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_graph"
                    ],
                    "iChar": 40,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_keyboard"
                    ],
                    "iChar": 53,
                    "jChar": 61
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 33,
                    "jChar": 37
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_logo",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "logo",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function logo() {\n    const logo = document.getElementById('logo_and_shadow') as HTMLElement;\n    let shadow = document.getElementById(\"logo_shadow\")!;\n    logo.style.left = `${(window.innerWidth - logo.offsetWidth)/2}px`;\n    logo.style.top = `${(window.innerHeight/2)-40}px`;\n    logo.style.transition = `top 0.25s`;\n    shadow.style.transition = `top 0.25s`;\n}\n",
                    "language": "ts",
                    "iLine": 94,
                    "jLine": 102
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 167,
                    "jChar": 171
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 238,
                    "jChar": 241
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_init"
                    ],
                    "iChar": 28,
                    "jChar": 32
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 64,
                    "jChar": 68
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 231,
                    "jChar": 235
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 284,
                    "jChar": 288
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 430,
                    "jChar": 434
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 45,
                    "jChar": 49
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 335,
                    "jChar": 339
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 361,
                    "jChar": 365
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_graph",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "graph",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function graph() {\n    const container = document.getElementById('container') as HTMLElement;\n    s_graphView = new GraphView(container, cardToHTML, highlightLink);\n}\n",
                    "language": "ts",
                    "iLine": 103,
                    "jLine": 107
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 98,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 116,
                    "jChar": 125
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 137,
                    "jChar": 147
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_highlightLink"
                    ],
                    "iChar": 149,
                    "jChar": 162
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_Node"
                    ],
                    "iChar": 66,
                    "jChar": 71
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_init"
                    ],
                    "iChar": 40,
                    "jChar": 45
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_eventLoop",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "eventLoop",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function eventLoop() {\n    s_graphView.update();\n    moveLogo();\n    requestAnimationFrame(eventLoop);\n}\n",
                    "language": "ts",
                    "iLine": 108,
                    "jLine": 113
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 27,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_update"
                    ],
                    "iChar": 39,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_moveLogo"
                    ],
                    "iChar": 53,
                    "jChar": 61
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 181,
                    "jChar": 190
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_moveLogo",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "moveLogo",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function moveLogo() {\n    let xScroll = window.scrollX;\n    let logo = document.getElementById(\"logo_and_shadow\")!;\n    let shadow = document.getElementById(\"logo_shadow\")!;\n    let [yMin, yMax] = s_graphView.yRange(xScroll + rect(logo).width() + 50);\n    if (yMin && yMax) {\n        logo.style.top = `${window.innerHeight -  66}px`;\n        shadow.style.top = `${document.body.clientHeight - yMin - 100}px`;\n    } else {\n        logo.style.top = `${(window.innerHeight/2)-40}px`;\n        shadow.style.top = `${45}px`;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 114,
                    "jLine": 127
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 64,
                    "jChar": 68
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 197,
                    "jChar": 208
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_yRange"
                    ],
                    "iChar": 209,
                    "jChar": 215
                },
                {
                    "targets": [
                        "ts_firefly_util_function_rect"
                    ],
                    "iChar": 226,
                    "jChar": 230
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 231,
                    "jChar": 235
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width",
                        "ts_firefly_util_method_Rect_width"
                    ],
                    "iChar": 237,
                    "jChar": 242
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 284,
                    "jChar": 288
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 295,
                    "jChar": 298
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 355,
                    "jChar": 358
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 430,
                    "jChar": 434
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 441,
                    "jChar": 444
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 502,
                    "jChar": 505
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_eventLoop"
                    ],
                    "iChar": 53,
                    "jChar": 61
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_loadCards",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "loadCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function loadCards() {\n    console.log(\"loadCards\");\n    if (s_useLocalFiles) {\n        await importLocalFolder();\n    } \n    const jsonObj = await importFolders(\"firefly\", [\"ts\", \"py\"]);\n    s_allCards = jsonObj.cards as Card[];\n    console.log(\"nCards:\", s_allCards.length);\n}\n",
                    "language": "ts",
                    "iLine": 128,
                    "jLine": 137
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_useLocalFiles"
                    ],
                    "iChar": 67,
                    "jChar": 82
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 100,
                    "jChar": 117
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importFolders"
                    ],
                    "iChar": 154,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_allCards"
                    ],
                    "iChar": 198,
                    "jChar": 208
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 228,
                    "jChar": 232
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_allCards"
                    ],
                    "iChar": 263,
                    "jChar": 273
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 51,
                    "jChar": 60
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_openSession",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "openSession",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function openSession() {\n    let json = await load(\"session/test.json\");\n    if (json.error) {\n        console.log(\"failed to load session:\", json.error);\n        openMain();\n    } else {\n        s_graphView.openJson(json);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 138,
                    "jLine": 147
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_load"
                    ],
                    "iChar": 52,
                    "jChar": 56
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openMain"
                    ],
                    "iChar": 169,
                    "jChar": 177
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 202,
                    "jChar": 213
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJson"
                    ],
                    "iChar": 214,
                    "jChar": 222
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 105,
                    "jChar": 116
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_openMain",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "openMain",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function openMain() {\n    openCard(\"ts_firefly_firefly_function_main\", null);\n}\n",
                    "language": "ts",
                    "iLine": 148,
                    "jLine": 151
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 26,
                    "jChar": 34
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openSession"
                    ],
                    "iChar": 169,
                    "jChar": 177
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_reset",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "reset",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function reset() {\n    s_graphView.reset();\n}\n",
                    "language": "ts",
                    "iLine": 152,
                    "jLine": 155
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 23,
                    "jChar": 34
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reset"
                    ],
                    "iChar": 35,
                    "jChar": 40
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 6016,
                    "jChar": 6021
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_searchBox",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "searchBox",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function searchBox() {\n    const searchFieldHTML = `<div class=\"search-field\" id=\"search-field\" contenteditable=\"true\" spellcheck=\"false\"></div>`;\n    const iconHTML = `<i class=\"${s_mainIcon}\" style=\"padding-top: 6px;\" id=\"search-button\"></i>`;\n    const icon2HTML = `<i class=\"icon-right-big\" style=\"padding-top: 6px; padding-right:3px\"></i>`;\n    const searchResultsHTML = `<div class=\"search-results\" id=\"search-results\"></div>`;\n    const searchDivHTML = `<div class=\"search-box\" id=\"search-box\">${iconHTML}${searchFieldHTML}${icon2HTML}${searchResultsHTML}</div>`;\n    const shadow = element(`<div class=\"shadow\"></div>`);\n    let searchDiv = element(searchDivHTML);\n    document.body.append(searchDiv);\n    let searchField = document.getElementById(\"search-field\")!;\n    searchField.addEventListener('keydown', async (event) => {\n        await updateSearch(searchField);\n        if (event.key == 'Enter') { event.preventDefault(); }\n    });\n    let searchButton = document.getElementById(\"search-button\")!;\n    searchButton.style.cursor = 'pointer';\n    listen(searchButton, 'click', searchOptions);\n}\n",
                    "language": "ts",
                    "iLine": 156,
                    "jLine": 174
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 590,
                    "jChar": 597
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 649,
                    "jChar": 656
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 851,
                    "jChar": 863
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 1061,
                    "jChar": 1067
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 1091,
                    "jChar": 1104
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 124,
                    "jChar": 133
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_changeSearchOption"
                    ],
                    "iChar": 275,
                    "jChar": 284
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_updateSearch",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "updateSearch",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function updateSearch(searchField: HTMLElement) {\n    searchField.style.width = '128px';\n    if (searchField.scrollWidth < 512) {\n        searchField.style.width = `${searchField.scrollWidth}px`;\n    } else {\n        searchField.style.width = '512px';\n    }\n    setTimeout(async () => {\n        const results = await testSearch(searchField!.innerText);\n        if (results) {\n            showSearchResults(results);\n        } else {\n            clearSearchResults();\n        }\n    }, 0);\n}\n",
                    "language": "ts",
                    "iLine": 175,
                    "jLine": 191
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 78,
                    "jChar": 83
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 162,
                    "jChar": 167
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_Node_width"
                    ],
                    "iChar": 241,
                    "jChar": 246
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_testSearch"
                    ],
                    "iChar": 323,
                    "jChar": 333
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 394,
                    "jChar": 411
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_clearSearchResults"
                    ],
                    "iChar": 451,
                    "jChar": 469
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 851,
                    "jChar": 863
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_searchOptions",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "searchOptions",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function searchOptions() {\n    console.log(\"searchOptions\");\n    let palette = element(`<div class=\"icon-palette\"></div>`);\n    let iconNames = [ \"icon-search\", \"icon-wrench\", \"icon-right-open\", \"icon-user-plus\", \"icon-cog\", \"icon-logout\"];\n    let optionNames = [\"search\", \"edit-code\", \"execute-code\", \"collaborate\", \"settings\", \"logout\"];\n    for(let i=0; i < iconNames.length; i++) {\n        const iconName = iconNames[i];\n        const optionName = optionNames[i];\n        let icon = element(`<i class=\"${iconName}\" id=\"option-${optionName}\" style=\"margin-left: 4px; margin-right: 4px;\"></i>`)!;\n        icon.style.cursor = \"pointer\";\n        palette.appendChild(icon);\n        listen(icon, 'click', () => { palette.remove(); changeSearchOption(optionName, iconName); });\n    }\n    document.body.append(palette);\n    palette.style.top = `${window.innerHeight -  64}px`;\n}\n",
                    "language": "ts",
                    "iLine": 192,
                    "jLine": 208
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 79,
                    "jChar": 86
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 488,
                    "jChar": 495
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 682,
                    "jChar": 688
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 720,
                    "jChar": 726
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_changeSearchOption"
                    ],
                    "iChar": 730,
                    "jChar": 748
                },
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_top"
                    ],
                    "iChar": 835,
                    "jChar": 838
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 1091,
                    "jChar": 1104
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_changeSearchOption",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "changeSearchOption",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function changeSearchOption(optionName: string, iconName: string) {\n    console.log(\"changeSearchOption\", optionName, iconName);\n    s_mainIcon = iconName;\n    s_mainOption = optionName;\n    let searchDiv = document.getElementById(\"search-box\")!;\n    searchDiv.remove();\n    searchBox();\n}\n",
                    "language": "ts",
                    "iLine": 209,
                    "jLine": 217
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_mainIcon"
                    ],
                    "iChar": 133,
                    "jChar": 143
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_mainOption"
                    ],
                    "iChar": 160,
                    "jChar": 172
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 261,
                    "jChar": 267
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 275,
                    "jChar": 284
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 730,
                    "jChar": 748
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_keyboard",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "keyboard",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function keyboard() {\n    listen(document.body, 'keydown', async (event: KeyboardEvent) => {\n        if (event.metaKey && event.key == 'f') {\n            event.preventDefault();\n            await onCommandKey();\n        }\n    });\n}\n",
                    "language": "ts",
                    "iLine": 218,
                    "jLine": 226
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 32,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_onCommandKey"
                    ],
                    "iChar": 202,
                    "jChar": 214
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_init"
                    ],
                    "iChar": 53,
                    "jChar": 61
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_onCommandKey",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "onCommandKey",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function onCommandKey() {\n    let searchField = document.getElementById(\"search-field\")!;\n    clearSearchResults();\n    searchField.innerText = \"\";\n    searchField.focus();\n}\n",
                    "language": "ts",
                    "iLine": 227,
                    "jLine": 233
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_clearSearchResults"
                    ],
                    "iChar": 100,
                    "jChar": 118
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_keyboard"
                    ],
                    "iChar": 202,
                    "jChar": 214
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_testSearch",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "testSearch",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function testSearch(query: string) : Promise<any>{\n    if (query.trim() == \"\") return null;\n    const results = await search(query);\n    return results;\n}\n",
                    "language": "ts",
                    "iLine": 234,
                    "jLine": 239
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_search"
                    ],
                    "iChar": 124,
                    "jChar": 130
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 141,
                    "jChar": 151
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 323,
                    "jChar": 333
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_showSearchResults",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "showSearchResults",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function showSearchResults(results: any) {\n    clearSearchResults();\n    let searchResultsDiv = document.getElementById(\"search-results\")!;\n    const array = results.results;\n    for(const item of array) {\n        const id = item.value;\n        const card = findCard(id);\n        if (card) {\n            const name = shortName(card);\n            if (card.kind == \"function\" || card.kind == \"method\" || card.kind == \"class\") {\n                let searchResultDiv = element(`<div class=\"search-result\">${name}</div>`);\n                listen(searchResultDiv, 'click', () => { jumpToCard(card)});\n                searchResultsDiv.append(searchResultDiv);\n            }\n        }\n    }\n}\n",
                    "language": "ts",
                    "iLine": 240,
                    "jLine": 257
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_clearSearchResults"
                    ],
                    "iChar": 47,
                    "jChar": 65
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 258,
                    "jChar": 266
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 317,
                    "jChar": 326
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 355,
                    "jChar": 359
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 382,
                    "jChar": 386
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 407,
                    "jChar": 411
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 464,
                    "jChar": 471
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 533,
                    "jChar": 539
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 574,
                    "jChar": 584
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 394,
                    "jChar": 411
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_class_Link",
            "language": "ts",
            "module": "firefly",
            "kind": "class",
            "name": "Link",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Link {\n    iDep: number =-1;               // dependency index in caller\n    card: Card | null = null;       // card to open\n    constructor(iDep: number, card: Card) {\n        this.iDep = iDep; this.card = card;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 258,
                    "jLine": 265
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 89,
                    "jChar": 93
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 167,
                    "jChar": 171
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 144,
                    "jChar": 148
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChain"
                    ],
                    "iChar": 43,
                    "jChar": 47
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 121,
                    "jChar": 125
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 286,
                    "jChar": 290
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 383,
                    "jChar": 387
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 409,
                    "jChar": 413
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 769,
                    "jChar": 773
                }
            ],
            "children": [
                "ts_firefly_firefly_property_Link_iDep",
                "ts_firefly_firefly_property_Link_card",
                "ts_firefly_firefly_method_Link_constructor"
            ],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_jumpToCard",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "jumpToCard",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function jumpToCard(target: Card) {\n    let mainCard = findCard(\"ts_firefly_firefly_function_main\");\n    if (!mainCard) return;\n    let chain : Link[] = callChain(mainCard, target);\n    if (chain.length==0) return;\n    //reset();\n    let card : Card = mainCard;\n    for(let link of chain) {\n        const cardID = link.card!.uid;\n        s_graphView.open(cardID, `linkto_${cardID}`, card.uid, new CardView(CardViewState.Compact), false);\n        card = link.card!;\n    }\n    let lastId = chain[chain.length-1].card!.uid;\n    //setTimeout(() => { expandOrContract(s_graphView.find(lastId)!); }, 0);\n}\n\n",
                    "language": "ts",
                    "iLine": 266,
                    "jLine": 282
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 28,
                    "jChar": 32
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 55,
                    "jChar": 63
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 144,
                    "jChar": 148
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChain"
                    ],
                    "iChar": 153,
                    "jChar": 162
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 245,
                    "jChar": 249
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Link_card"
                    ],
                    "iChar": 319,
                    "jChar": 323
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 338,
                    "jChar": 349
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_open"
                    ],
                    "iChar": 350,
                    "jChar": 354
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_uid"
                    ],
                    "iChar": 388,
                    "jChar": 391
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_CardView"
                    ],
                    "iChar": 397,
                    "jChar": 405
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Link_card"
                    ],
                    "iChar": 458,
                    "jChar": 462
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Link_card"
                    ],
                    "iChar": 510,
                    "jChar": 514
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 574,
                    "jChar": 584
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_callChain",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "callChain",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function callChain(from: Card, to: Card) : Link[] {\n    newVisitPass();\n    return callChainRec(from, to).slice(1);\n}\n",
                    "language": "ts",
                    "iLine": 283,
                    "jLine": 287
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 25,
                    "jChar": 29
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 35,
                    "jChar": 39
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 43,
                    "jChar": 47
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_newVisitPass"
                    ],
                    "iChar": 56,
                    "jChar": 68
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 83,
                    "jChar": 95
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 153,
                    "jChar": 162
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_callChainRec",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "callChainRec",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// returns a list of { dep, card } to get from a to b\nfunction callChainRec(from: Card, to: Card, iDepFrom: number=-1) : Link[]  {\n    if (from.kind != \"method\" && from.kind != \"function\") return []; // only callables\n    if (visited(from)) return [];\n    if (from === to) return [ new Link(iDepFrom, from) ];\n    let iDep = findDependency(from, to);\n    if (iDep >= 0) return [ new Link(iDepFrom, from), new Link(iDep, to) ];\n    visit(from);        // prevent us from going down this path again\n    for(let iDep = 0; iDep < from.dependsOn.length; iDep++) {\n        const dep = from.dependsOn[iDep];\n        for(const t of dep.targets) {\n            const chain = callChainRec(findCard(t)!, to, iDep);\n            if (chain.length != 0) {\n                return [ new Link(iDepFrom, from), ...chain ];\n            }\n        }\n    }\n    return [];\n}\n",
                    "language": "ts",
                    "iLine": 288,
                    "jLine": 307
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 82,
                    "jChar": 86
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 92,
                    "jChar": 96
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 121,
                    "jChar": 125
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 144,
                    "jChar": 148
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 169,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visited"
                    ],
                    "iChar": 226,
                    "jChar": 233
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 286,
                    "jChar": 290
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findDependency"
                    ],
                    "iChar": 325,
                    "jChar": 339
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 383,
                    "jChar": 387
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 409,
                    "jChar": 413
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visit"
                    ],
                    "iChar": 431,
                    "jChar": 436
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependsOn"
                    ],
                    "iChar": 531,
                    "jChar": 540
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependsOn"
                    ],
                    "iChar": 584,
                    "jChar": 593
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_targets"
                    ],
                    "iChar": 628,
                    "jChar": 635
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 678,
                    "jChar": 686
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Link"
                    ],
                    "iChar": 769,
                    "jChar": 773
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChain"
                    ],
                    "iChar": 83,
                    "jChar": 95
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_visit",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_visit",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let s_visit: number = 0;",
                    "language": "ts",
                    "iLine": 308,
                    "jLine": 308
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_newVisitPass"
                    ],
                    "iChar": 26,
                    "jChar": 33
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visited"
                    ],
                    "iChar": 102,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visit"
                    ],
                    "iChar": 56,
                    "jChar": 63
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_s_visitCount",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "s_visitCount",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "let s_visitCount: Map<Card, number> = new Map();\n",
                    "language": "ts",
                    "iLine": 309,
                    "jLine": 310
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 22,
                    "jChar": 26
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_visited"
                    ],
                    "iChar": 54,
                    "jChar": 66
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_visit"
                    ],
                    "iChar": 33,
                    "jChar": 45
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_newVisitPass",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "newVisitPass",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function newVisitPass() { s_visit ++; }",
                    "language": "ts",
                    "iLine": 311,
                    "jLine": 311
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_visit"
                    ],
                    "iChar": 26,
                    "jChar": 33
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChain"
                    ],
                    "iChar": 56,
                    "jChar": 68
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_visited",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "visited",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function visited(card: Card) : boolean {\n    let vc = s_visitCount.get(card);\n    return (vc && vc == s_visit) ? true : false;\n}",
                    "language": "ts",
                    "iLine": 312,
                    "jLine": 315
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 23,
                    "jChar": 27
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_visitCount"
                    ],
                    "iChar": 54,
                    "jChar": 66
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_visit"
                    ],
                    "iChar": 102,
                    "jChar": 109
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 226,
                    "jChar": 233
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_visit",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "visit",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function visit(card: Card) {\n    s_visitCount.set(card, s_visit);\n}\n",
                    "language": "ts",
                    "iLine": 316,
                    "jLine": 319
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 21,
                    "jChar": 25
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_visitCount"
                    ],
                    "iChar": 33,
                    "jChar": 45
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_visit"
                    ],
                    "iChar": 56,
                    "jChar": 63
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 431,
                    "jChar": 436
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_findDependency",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "findDependency",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// given (card) and (target), checks card.dependsOn and returns index of dependency that matches\nfunction findDependency(card: Card, target: Card) : number {\n    return card.dependsOn.findIndex(d => (d.targets.indexOf(target.uid) >= 0));\n}\n\n",
                    "language": "ts",
                    "iLine": 320,
                    "jLine": 325
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 127,
                    "jChar": 131
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 141,
                    "jChar": 145
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependsOn"
                    ],
                    "iChar": 174,
                    "jChar": 183
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_targets"
                    ],
                    "iChar": 202,
                    "jChar": 209
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_uid"
                    ],
                    "iChar": 225,
                    "jChar": 228
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 325,
                    "jChar": 339
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_clearSearchResults",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "clearSearchResults",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function clearSearchResults() {\n    let searchResultsDiv = document.getElementById(\"search-results\")!;\n    if (searchResultsDiv) {\n        while (searchResultsDiv.children.length > 0) {\n            searchResultsDiv.removeChild(searchResultsDiv.lastChild!);\n        }\n    }\n}\n",
                    "language": "ts",
                    "iLine": 326,
                    "jLine": 334
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_children"
                    ],
                    "iChar": 163,
                    "jChar": 171
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_updateSearch"
                    ],
                    "iChar": 451,
                    "jChar": 469
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_onCommandKey"
                    ],
                    "iChar": 100,
                    "jChar": 118
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 47,
                    "jChar": 65
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_search",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "search",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function search(query: string) : Promise<any> {\n    return await remote(\"@firefly.search\", { query });\n}\n",
                    "language": "ts",
                    "iLine": 335,
                    "jLine": 338
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_remote"
                    ],
                    "iChar": 71,
                    "jChar": 77
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_testSearch"
                    ],
                    "iChar": 124,
                    "jChar": 130
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_importLocalFolder",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "importLocalFolder",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function importLocalFolder() {\n    let logo: HTMLButtonElement = document.getElementById('logo_and_shadow') as HTMLButtonElement;\n    let button = element(`<button id=\"openDirectory\" class=\"transparent-button\" style=\"display: inline-block;\">\n                            <h3 style=\"display: inline-block;\">\u25b6\ufe0e</h3></button>`);\n    logo.insertBefore(button, logo.children[1]);\n    button.addEventListener('click', async () => {\n        if (!(window as any).showDirectoryPicker) {\n            console.log(\"showDirectoryPicker is null\");\n            return;\n        }\n        dirHandle = await (window as any).showDirectoryPicker!();\n        button.remove();\n        await importLocalFile();\n    });\n}\n",
                    "language": "ts",
                    "iLine": 339,
                    "jLine": 354
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 45,
                    "jChar": 49
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 153,
                    "jChar": 160
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 335,
                    "jChar": 339
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_logo"
                    ],
                    "iChar": 361,
                    "jChar": 365
                },
                {
                    "targets": [
                        "ts_firefly_db_global_dirHandle",
                        "ts_firefly_firefly_global_dirHandle"
                    ],
                    "iChar": 577,
                    "jChar": 586
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 650,
                    "jChar": 656
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFile"
                    ],
                    "iChar": 674,
                    "jChar": 689
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 100,
                    "jChar": 117
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_importLocalFile",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "importLocalFile",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// test-reads the first file and sets text in browser\nasync function importLocalFile() {\n    console.log(\"importLocalFile\");\n    // Assuming we are just reading the first file we find.\n    console.log(\"values...\");\n    for await (const entry of dirHandle.values()) {\n        if (entry.kind === 'file') {\n            console.log(\"getFile...\");\n            const file = await (entry as any).getFile();\n            const filename : string = file.name; // Assuming 'file' has a 'name' property with the filename.\n            if (filename.startsWith(\".\")) continue;\n            const parts = filename.split('.');\n            const ext = parts.length > 1 ? '.' + parts.pop() : '';\n            console.log(\"readFileAsText...\");\n            console.log(`ext = '${ext}'`);\n            const fullText = await readFileAsText(file);\n            console.log(\"NOT IMPLEMENTED YET\"); // todo: implement by reading files, horking them over to the server, then following the normal channels\n            break;\n        }\n    }\n}\n",
                    "language": "ts",
                    "iLine": 355,
                    "jLine": 376
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_db_global_dirHandle",
                        "ts_firefly_firefly_global_dirHandle"
                    ],
                    "iChar": 245,
                    "jChar": 254
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 285,
                    "jChar": 289
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_name"
                    ],
                    "iChar": 443,
                    "jChar": 447
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_readFileAsText"
                    ],
                    "iChar": 799,
                    "jChar": 813
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFolder"
                    ],
                    "iChar": 674,
                    "jChar": 689
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_readFileAsText",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "readFileAsText",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// Read file on client machine in folder\nfunction readFileAsText(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = event => resolve(event.target!.result as string);\n        reader.onerror = error => reject(error);\n        reader.readAsText(file);\n    });\n}\n",
                    "language": "ts",
                    "iLine": 377,
                    "jLine": 386
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFile"
                    ],
                    "iChar": 799,
                    "jChar": 813
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_animateLogoToLeft",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "animateLogoToLeft",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// move the logo and shadow to the left of the window\nasync function animateLogoToLeft(): Promise<void> {\n    return new Promise((resolve, reject) => {\n        const logoAndShadow = document.getElementById(\"logo_and_shadow\")!;\n\n        // Set animation properties\n        logoAndShadow.style.animationName = \"moveToLeft\";\n        logoAndShadow.style.animationDuration = \"0.25s\";\n        logoAndShadow.style.animationTimingFunction = \"ease-in-out\";\n        logoAndShadow.style.animationFillMode = \"forwards\"; \n\n        // Attach the animationend event listener\n        logoAndShadow.addEventListener('animationend', function onAnimationEnd() {\n            // Remove the event listener to prevent memory leaks\n            logoAndShadow.removeEventListener('animationend', onAnimationEnd);\n            resolve();\n        });\n\n        // Start the animation\n        logoAndShadow.style.left = \"0\";\n    });\n}\n",
                    "language": "ts",
                    "iLine": 387,
                    "jLine": 409
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_property_Rect_left"
                    ],
                    "iChar": 882,
                    "jChar": 886
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_run"
                    ],
                    "iChar": 74,
                    "jChar": 91
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_importFolders",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "importFolders",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function importFolders(project: string, folders: string[]) {\n    return await remote(\"@firefly.importFolders\", { project: project, folders: folders });\n}\n",
                    "language": "ts",
                    "iLine": 410,
                    "jLine": 413
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_remote"
                    ],
                    "iChar": 84,
                    "jChar": 90
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_loadCards"
                    ],
                    "iChar": 154,
                    "jChar": 167
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_findCard",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "findCard",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// finds the card with the given UID, or null if doesn't exist\nfunction findCard(uid: string) : Card | null {\n    let index = s_allCards.findIndex((card : any ) => card.uid === uid);\n    if (index < 0) return null;\n    return s_allCards[index];\n}\n",
                    "language": "ts",
                    "iLine": 414,
                    "jLine": 420
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 96,
                    "jChar": 100
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_allCards"
                    ],
                    "iChar": 126,
                    "jChar": 136
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_allCards"
                    ],
                    "iChar": 226,
                    "jChar": 236
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 258,
                    "jChar": 266
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 55,
                    "jChar": 63
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 678,
                    "jChar": 686
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 148,
                    "jChar": 156
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 114,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 151,
                    "jChar": 159
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_cardToHTML",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "cardToHTML",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// generates HTML for card, but doesn't connect it yet\nfunction cardToHTML(id: string, view: CardView) : HTMLElement {\n    let card : Card | null = findCard(id);\n    if (!card) { return element(`<div></div>`); }\n    let style = \"code\"; if (view.state == CardViewState.Fullsize) { style += \" code-expanded\"; }\n    let elem : HTMLElement = element(`<div id=\"code_${card.uid}\" class=\"${style}\" spellcheck=\"false\" contenteditable=\"false\"></div>`);\n    let text : string = card.code[0].text;\n    if (card.dependsOn.length==0) {\n        elem.innerText = text;\n    } else {\n        let iChar : number = 0;\n        for(const dep of card.dependsOn) {\n            // add text-node going from (iChar) to (dep.iChar)\n            if (dep.iChar > iChar) {\n                elem.appendChild(document.createTextNode(text.slice(iChar, dep.iChar)));\n            }\n            // add span containing the link\n            const link = text.slice(dep.iChar, dep.jChar);\n            let linkId = \"linkto_\" + dep.targets[0];\n            for(let i = 1; i < dep.targets.length; i++) {\n                linkId += \"__\" + dep.targets[i];\n            }\n            const child = element(`<span class=\"tag\" id=\"${linkId}\">${link}</span>`);\n            listen(child, 'click', async function(event: any) {\n                onLinkButtonPress(child);\n            });\n            elem.appendChild(child);\n            // step\n            iChar = dep.jChar;\n        }\n        // add text-node for the remaining bit of text\n        if (iChar < text.length) {\n            elem.appendChild(document.createTextNode(text.slice(iChar, text.length)));\n        }\n    }\n    setTimeout(() => { elem.scrollLeft = view.xScroll; elem.scrollTop = view.yScroll;}, 0);\n    listen(elem, 'click', function() { expandOrContract(elem); });\n    listen(elem, 'scroll', function(event: any) { getScrollPos(elem); });\n    let container = codeContainer(elem, shortName(card));\n    container.id = card.uid;\n    return container;\n}\n",
                    "language": "ts",
                    "iLine": 421,
                    "jLine": 463
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_CardView"
                    ],
                    "iChar": 93,
                    "jChar": 101
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 134,
                    "jChar": 138
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 148,
                    "jChar": 156
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 186,
                    "jChar": 193
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 245,
                    "jChar": 250
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 338,
                    "jChar": 345
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_code"
                    ],
                    "iChar": 473,
                    "jChar": 477
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CodeBlock_text"
                    ],
                    "iChar": 481,
                    "jChar": 485
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependsOn"
                    ],
                    "iChar": 500,
                    "jChar": 509
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_dependsOn"
                    ],
                    "iChar": 629,
                    "jChar": 638
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_iChar"
                    ],
                    "iChar": 725,
                    "jChar": 730
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_iChar"
                    ],
                    "iChar": 821,
                    "jChar": 826
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_iChar"
                    ],
                    "iChar": 929,
                    "jChar": 934
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_jChar"
                    ],
                    "iChar": 940,
                    "jChar": 945
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_targets"
                    ],
                    "iChar": 989,
                    "jChar": 996
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_targets"
                    ],
                    "iChar": 1036,
                    "jChar": 1043
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_targets"
                    ],
                    "iChar": 1096,
                    "jChar": 1103
                },
                {
                    "targets": [
                        "ts_firefly_util_function_element"
                    ],
                    "iChar": 1148,
                    "jChar": 1155
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 1220,
                    "jChar": 1226
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_onLinkButtonPress"
                    ],
                    "iChar": 1288,
                    "jChar": 1305
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Dependency_jChar"
                    ],
                    "iChar": 1411,
                    "jChar": 1416
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_xScroll"
                    ],
                    "iChar": 1667,
                    "jChar": 1674
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_yScroll"
                    ],
                    "iChar": 1698,
                    "jChar": 1705
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 1717,
                    "jChar": 1723
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 1752,
                    "jChar": 1768
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 1784,
                    "jChar": 1790
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 1830,
                    "jChar": 1842
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_codeContainer"
                    ],
                    "iChar": 1874,
                    "jChar": 1887
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 1894,
                    "jChar": 1903
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_uid"
                    ],
                    "iChar": 1936,
                    "jChar": 1939
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_graph"
                    ],
                    "iChar": 137,
                    "jChar": 147
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_codeContainer",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "codeContainer",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function codeContainer(codeDiv: HTMLElement, title: string) : HTMLElement {\n    const containerDiv = document.createElement('div');\n    containerDiv.className = 'code-container';\n\n    // Create the title div\n    const titleDiv = document.createElement('div');\n    titleDiv.className = 'code-title';\n    titleDiv.textContent = title;\n\n    // Append the title and the code div to the container\n    containerDiv.appendChild(titleDiv);\n    containerDiv.appendChild(codeDiv);\n\n    return containerDiv;\n}\n",
                    "language": "ts",
                    "iLine": 464,
                    "jLine": 479
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1874,
                    "jChar": 1887
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_shortName",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "shortName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function shortName(card: Card) : string {\n    let result: string = \"\";\n    if (card.parent != \"null\") { result += findCard(card.parent)!.name + \".\"; }\n    result += card.name;\n    if (card.kind==\"method\" || card.kind==\"function\") result += \"()\";\n    return result;\n}\n",
                    "language": "ts",
                    "iLine": 480,
                    "jLine": 487
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 25,
                    "jChar": 29
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_parent"
                    ],
                    "iChar": 84,
                    "jChar": 90
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 114,
                    "jChar": 122
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_parent"
                    ],
                    "iChar": 128,
                    "jChar": 134
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_name"
                    ],
                    "iChar": 170,
                    "jChar": 174
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 189,
                    "jChar": 193
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Card_kind"
                    ],
                    "iChar": 212,
                    "jChar": 216
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 317,
                    "jChar": 326
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1894,
                    "jChar": 1903
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_highlightLink",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "highlightLink",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function highlightLink(linkDiv: HTMLElement, highlight: boolean) {\n    if (highlight) linkDiv.className = \"tag-highlight\"; else linkDiv.className = \"tag\";\n}\n",
                    "language": "ts",
                    "iLine": 488,
                    "jLine": 491
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_graph"
                    ],
                    "iChar": 149,
                    "jChar": 162
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 430,
                    "jChar": 443
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_closeCard"
                    ],
                    "iChar": 134,
                    "jChar": 147
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_listen",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "listen",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function listen(elem: HTMLElement, type: string, func: Function) {\n    elem.addEventListener(type, async (event) => {\n        //console.log(`${type}: ${elem.id}`);\n        await func(event);  // Assuming func is synchronous. If it's async, use await func(event);\n        event.stopPropagation();\n        debouncedSaveAll();\n    });\n}\n",
                    "language": "ts",
                    "iLine": 492,
                    "jLine": 500
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_debouncedSaveAll"
                    ],
                    "iChar": 304,
                    "jChar": 320
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchBox"
                    ],
                    "iChar": 1061,
                    "jChar": 1067
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_searchOptions"
                    ],
                    "iChar": 682,
                    "jChar": 688
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_keyboard"
                    ],
                    "iChar": 32,
                    "jChar": 38
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 533,
                    "jChar": 539
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1220,
                    "jChar": 1226
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1717,
                    "jChar": 1723
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1784,
                    "jChar": 1790
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_expandOrContract",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "expandOrContract",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function expandOrContract(elem : HTMLElement) {\n    let div = elem.parentElement!;\n    let view = s_graphView.userObj(div);\n    if (view.state == CardViewState.Compact) {\n        elem.classList.add(\"code-expanded\");\n        view.state = CardViewState.Fullsize;\n\n    } else if (view.state == CardViewState.Fullsize) {\n         elem.classList.remove(\"code-expanded\");\n         view.state = CardViewState.Compact;\n         elem.scrollLeft = view.xScroll;\n         elem.scrollTop = view.yScroll;\n    }\n    s_graphView.emphasize(div, elem.classList.contains(\"code-expanded\"));\n    s_graphView.attention(div);\n}\n",
                    "language": "ts",
                    "iLine": 501,
                    "jLine": 517
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 98,
                    "jChar": 109
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_userObj"
                    ],
                    "iChar": 110,
                    "jChar": 117
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 137,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_add"
                    ],
                    "iChar": 194,
                    "jChar": 197
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 229,
                    "jChar": 234
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 282,
                    "jChar": 287
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_Node_remove"
                    ],
                    "iChar": 341,
                    "jChar": 347
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 380,
                    "jChar": 385
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll",
                        "ts_firefly_firefly_property_CardView_xScroll"
                    ],
                    "iChar": 443,
                    "jChar": 450
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll",
                        "ts_firefly_firefly_property_CardView_yScroll"
                    ],
                    "iChar": 483,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 502,
                    "jChar": 513
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_emphasize"
                    ],
                    "iChar": 514,
                    "jChar": 523
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 576,
                    "jChar": 587
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_attention"
                    ],
                    "iChar": 588,
                    "jChar": 597
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1752,
                    "jChar": 1768
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_getScrollPos",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "getScrollPos",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "function getScrollPos(elem: HTMLElement) {\n    let div = elem.parentElement!;\n    let view = s_graphView.userObj(div);\n    if (view.state == CardViewState.Compact) {\n        view.xScroll = div.scrollLeft;\n        view.yScroll = div.scrollTop;\n    }\n}\n",
                    "language": "ts",
                    "iLine": 518,
                    "jLine": 526
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 93,
                    "jChar": 104
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_userObj"
                    ],
                    "iChar": 105,
                    "jChar": 112
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 132,
                    "jChar": 137
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_xScroll",
                        "ts_firefly_firefly_property_CardView_xScroll"
                    ],
                    "iChar": 179,
                    "jChar": 186
                },
                {
                    "targets": [
                        "ts_firefly_graphview_property_GraphView_yScroll",
                        "ts_firefly_firefly_property_CardView_yScroll"
                    ],
                    "iChar": 218,
                    "jChar": 225
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1830,
                    "jChar": 1842
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_global_debouncedSaveAll",
            "language": "ts",
            "module": "firefly",
            "kind": "global",
            "name": "debouncedSaveAll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "const debouncedSaveAll = debounce(() => { saveAll() }, 300);\n",
                    "language": "ts",
                    "iLine": 527,
                    "jLine": 528
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_debounce"
                    ],
                    "iChar": 25,
                    "jChar": 33
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_saveAll"
                    ],
                    "iChar": 42,
                    "jChar": 49
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_listen"
                    ],
                    "iChar": 304,
                    "jChar": 320
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_saveAll",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "saveAll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function saveAll() {\n    //console.log(\"saveAll\");\n    const json = s_graphView.json();\n    await save(json, \"sessions/test.json\");\n}\n",
                    "language": "ts",
                    "iLine": 529,
                    "jLine": 534
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 74,
                    "jChar": 85
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_json"
                    ],
                    "iChar": 86,
                    "jChar": 90
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_save"
                    ],
                    "iChar": 104,
                    "jChar": 108
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_debouncedSaveAll"
                    ],
                    "iChar": 42,
                    "jChar": 49
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_save",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "save",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function save(json: any, path: string) {\n    await remote(\"@firefly.save\", { path: \"sessions/test.json\", obj: json });\n}\n",
                    "language": "ts",
                    "iLine": 535,
                    "jLine": 538
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_remote"
                    ],
                    "iChar": 57,
                    "jChar": 63
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_saveAll"
                    ],
                    "iChar": 104,
                    "jChar": 108
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_load",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "load",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "async function load(path: string) : Promise<any> {\n    return await remote(\"@firefly.load\", { path: \"sessions/test.json\"});\n}\n",
                    "language": "ts",
                    "iLine": 539,
                    "jLine": 542
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_util_function_remote"
                    ],
                    "iChar": 68,
                    "jChar": 74
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openSession"
                    ],
                    "iChar": 52,
                    "jChar": 56
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_onLinkButtonPress",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "onLinkButtonPress",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// link button pressed\nfunction onLinkButtonPress(button: HTMLElement) {\n    const id = button.id.slice(\"linkto_\".length);\n    const linkIDs = id.split(\"__\");\n    for(const linkID of linkIDs) {\n        openOrCloseCard(linkID, button);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 543,
                    "jLine": 551
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 202,
                    "jChar": 217
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1288,
                    "jChar": 1305
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_openOrCloseCard",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "openOrCloseCard",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// if a card view is closed, opens it; otherwise closes it\nfunction openOrCloseCard(uid: string, button: HTMLElement) {\n    const card : Card | null = findCard(uid);\n    if (!card) return;\n    let existing = s_graphView.find(uid);\n    if (existing) {\n        closeCard(existing);\n    } else {\n        openCard(uid, button);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 552,
                    "jLine": 563
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 137,
                    "jChar": 141
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findCard"
                    ],
                    "iChar": 151,
                    "jChar": 159
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 208,
                    "jChar": 219
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_find"
                    ],
                    "iChar": 220,
                    "jChar": 224
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_closeCard"
                    ],
                    "iChar": 259,
                    "jChar": 268
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openCard"
                    ],
                    "iChar": 301,
                    "jChar": 309
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_onLinkButtonPress"
                    ],
                    "iChar": 202,
                    "jChar": 217
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_openCard",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "openCard",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// opens a card, optionally connected to a button element\nfunction openCard(uid: string, button: HTMLElement | null){\n    let linkID = \"\";\n    let parentID = \"\";\n    if (button) {\n        linkID = button.id;\n        let parent = s_graphView.findDivContainingLink(button);\n        if (parent) parentID = parent.id;\n    }\n    s_graphView.reopen(uid, linkID, parentID, new CardView(CardViewState.Compact));\n    if (button) {\n        highlightLink(button, true);\n    }\n}\n",
                    "language": "ts",
                    "iLine": 564,
                    "jLine": 578
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 229,
                    "jChar": 240
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findDivContainingLink"
                    ],
                    "iChar": 241,
                    "jChar": 262
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 324,
                    "jChar": 335
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 336,
                    "jChar": 342
                },
                {
                    "targets": [
                        "ts_firefly_firefly_class_CardView"
                    ],
                    "iChar": 370,
                    "jChar": 378
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_highlightLink"
                    ],
                    "iChar": 430,
                    "jChar": 443
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openMain"
                    ],
                    "iChar": 26,
                    "jChar": 34
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 301,
                    "jChar": 309
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_function_closeCard",
            "language": "ts",
            "module": "firefly",
            "kind": "function",
            "name": "closeCard",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "// closes a card\nfunction closeCard(cardDiv: HTMLElement) {\n    let button = s_graphView.findLink(cardDiv);\n    if (button) {\n        highlightLink(button, false);\n    }\n    s_graphView.close(cardDiv);\n}",
                    "language": "ts",
                    "iLine": 579,
                    "jLine": 586
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 77,
                    "jChar": 88
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_findLink"
                    ],
                    "iChar": 89,
                    "jChar": 97
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_highlightLink"
                    ],
                    "iChar": 134,
                    "jChar": 147
                },
                {
                    "targets": [
                        "ts_firefly_firefly_global_s_graphView"
                    ],
                    "iChar": 174,
                    "jChar": 185
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_close"
                    ],
                    "iChar": 186,
                    "jChar": 191
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_openOrCloseCard"
                    ],
                    "iChar": 259,
                    "jChar": 268
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "ts_firefly_firefly_property_CodeBlock_text",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "text",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "text: string = \"\";                  // actual code text",
                    "language": "ts",
                    "iLine": 24,
                    "jLine": 24
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 481,
                    "jChar": 485
                },
                {
                    "targets": [
                        "ts_firefly_firefly_method_CodeBlock_constructor"
                    ],
                    "iChar": 78,
                    "jChar": 82
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_CodeBlock"
        },
        {
            "uid": "ts_firefly_firefly_property_CodeBlock_language",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "language",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "language: string;                   // \".ts\", \".py\", \".cpp\", \".hpp\", etc.",
                    "language": "ts",
                    "iLine": 25,
                    "jLine": 25
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_method_CodeBlock_constructor"
                    ],
                    "iChar": 96,
                    "jChar": 104
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_CodeBlock"
        },
        {
            "uid": "ts_firefly_firefly_property_CodeBlock_iLine",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "iLine",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "iLine: number = 0;                  // 1-based line index in original code file",
                    "language": "ts",
                    "iLine": 26,
                    "jLine": 26
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_method_CodeBlock_constructor"
                    ],
                    "iChar": 122,
                    "jChar": 127
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_CodeBlock"
        },
        {
            "uid": "ts_firefly_firefly_method_CodeBlock_constructor",
            "language": "ts",
            "module": "firefly",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    constructor(code: string, language: string, iLine: number) {\n        this.text = code; this.language = language; this.iLine = iLine;\n    }\n}",
                    "language": "ts",
                    "iLine": 27,
                    "jLine": 30
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_property_CodeBlock_text"
                    ],
                    "iChar": 78,
                    "jChar": 82
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CodeBlock_language"
                    ],
                    "iChar": 96,
                    "jChar": 104
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_CodeBlock_iLine"
                    ],
                    "iChar": 122,
                    "jChar": 127
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_CodeBlock"
        },
        {
            "uid": "ts_firefly_firefly_property_Dependency_iChar",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "iChar",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "iChar: number = 0;                  // character index in code of start of symbol",
                    "language": "ts",
                    "iLine": 33,
                    "jLine": 33
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 725,
                    "jChar": 730
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 821,
                    "jChar": 826
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 929,
                    "jChar": 934
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Dependency"
        },
        {
            "uid": "ts_firefly_firefly_property_Dependency_jChar",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "jChar",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "jChar: number = 0;                  // character index in code after symbol",
                    "language": "ts",
                    "iLine": 34,
                    "jLine": 34
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 940,
                    "jChar": 945
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1411,
                    "jChar": 1416
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Dependency"
        },
        {
            "uid": "ts_firefly_firefly_property_Dependency_targets",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "targets",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "targets: string[] = [];             // card uids we link to",
                    "language": "ts",
                    "iLine": 35,
                    "jLine": 35
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 628,
                    "jChar": 635
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findDependency"
                    ],
                    "iChar": 202,
                    "jChar": 209
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 989,
                    "jChar": 996
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1036,
                    "jChar": 1043
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1096,
                    "jChar": 1103
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Dependency"
        },
        {
            "uid": "ts_firefly_firefly_property_Dependency_};",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "};",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "};",
                    "language": "ts",
                    "iLine": 36,
                    "jLine": 36
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Dependency"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_uid",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "uid",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "uid: string = \"\";                   // uid; something like lang_module_kind_name, but maybe other decorators too",
                    "language": "ts",
                    "iLine": 39,
                    "jLine": 39
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 388,
                    "jChar": 391
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findDependency"
                    ],
                    "iChar": 225,
                    "jChar": 228
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1936,
                    "jChar": 1939
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_language",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "language",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "language: string = \"\";              // language shortname of original code",
                    "language": "ts",
                    "iLine": 40,
                    "jLine": 40
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_module",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "module",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "module: string = \"\";                // module: eg. firefly or graphview",
                    "language": "ts",
                    "iLine": 41,
                    "jLine": 41
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_kind",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "kind",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "kind: string = \"\";                  // \"class\" or \"function\" or \"other\"",
                    "language": "ts",
                    "iLine": 42,
                    "jLine": 42
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 355,
                    "jChar": 359
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 382,
                    "jChar": 386
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_showSearchResults"
                    ],
                    "iChar": 407,
                    "jChar": 411
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 144,
                    "jChar": 148
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 169,
                    "jChar": 173
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFile"
                    ],
                    "iChar": 285,
                    "jChar": 289
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 189,
                    "jChar": 193
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 212,
                    "jChar": 216
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_name",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "name",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "name: string = \"\";                  // name of function or class being defined",
                    "language": "ts",
                    "iLine": 43,
                    "jLine": 43
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_importLocalFile"
                    ],
                    "iChar": 443,
                    "jChar": 447
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 170,
                    "jChar": 174
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_purpose",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "purpose",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "purpose: string = \"\";               // purpose",
                    "language": "ts",
                    "iLine": 44,
                    "jLine": 44
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_examples",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "examples",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "examples: string = \"\";              // examples",
                    "language": "ts",
                    "iLine": 45,
                    "jLine": 45
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_inputs",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "inputs",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "inputs: string = \"\";                // inputs",
                    "language": "ts",
                    "iLine": 46,
                    "jLine": 46
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_outputs",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "outputs",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "outputs: string = \"\";               // outputs",
                    "language": "ts",
                    "iLine": 47,
                    "jLine": 47
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_code",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "code",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "code: CodeBlock[] = [];             // actual text from code file",
                    "language": "ts",
                    "iLine": 48,
                    "jLine": 48
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_CodeBlock"
                    ],
                    "iChar": 6,
                    "jChar": 15
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 473,
                    "jChar": 477
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_dependsOn",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "dependsOn",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "dependsOn: Dependency[] = [];       // cards we depend on",
                    "language": "ts",
                    "iLine": 49,
                    "jLine": 49
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 11,
                    "jChar": 21
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 531,
                    "jChar": 540
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_callChainRec"
                    ],
                    "iChar": 584,
                    "jChar": 593
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_findDependency"
                    ],
                    "iChar": 174,
                    "jChar": 183
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 500,
                    "jChar": 509
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 629,
                    "jChar": 638
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_dependents",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "dependents",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "dependents: Dependency[] =[];       // cards that depend on us",
                    "language": "ts",
                    "iLine": 50,
                    "jLine": 50
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 12,
                    "jChar": 22
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_children",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "children",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "children: Card[] =[];               // if we're a class, cards for methods",
                    "language": "ts",
                    "iLine": 51,
                    "jLine": 51
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 10,
                    "jChar": 14
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_updateCanvas"
                    ],
                    "iChar": 1825,
                    "jChar": 1833
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_clearSearchResults"
                    ],
                    "iChar": 163,
                    "jChar": 171
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_parent",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "parent",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "parent: string = \"\";                // if we're a method or property, points to parent",
                    "language": "ts",
                    "iLine": 52,
                    "jLine": 52
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 4667,
                    "jChar": 4673
                },
                {
                    "targets": [
                        "ts_firefly_graphview_class_GraphView"
                    ],
                    "iChar": 6724,
                    "jChar": 6730
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_reopen"
                    ],
                    "iChar": 819,
                    "jChar": 825
                },
                {
                    "targets": [
                        "ts_firefly_graphview_method_GraphView_openJsonNodeList"
                    ],
                    "iChar": 101,
                    "jChar": 107
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 84,
                    "jChar": 90
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_shortName"
                    ],
                    "iChar": 128,
                    "jChar": 134
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_rankFromBottom",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "rankFromBottom",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "rankFromBottom: number = 0;         // 1 means depends on nothing; x means depends on things with rank < x",
                    "language": "ts",
                    "iLine": 53,
                    "jLine": 53
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_Card_rankFromTop",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "rankFromTop",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    rankFromTop: number = 0;            // 1 means nothing calls this; x means called by things with rank < x\n\n}",
                    "language": "ts",
                    "iLine": 54,
                    "jLine": 56
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Card"
        },
        {
            "uid": "ts_firefly_firefly_property_CardView_state",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "state",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "state: CardViewState = CardViewState.Compact;",
                    "language": "ts",
                    "iLine": 66,
                    "jLine": 66
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 245,
                    "jChar": 250
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 137,
                    "jChar": 142
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 229,
                    "jChar": 234
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 282,
                    "jChar": 287
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 380,
                    "jChar": 385
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 132,
                    "jChar": 137
                },
                {
                    "targets": [
                        "ts_firefly_firefly_method_CardView_constructor"
                    ],
                    "iChar": 53,
                    "jChar": 58
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_CardView"
        },
        {
            "uid": "ts_firefly_firefly_property_CardView_xScroll",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "xScroll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "xScroll: number =0;",
                    "language": "ts",
                    "iLine": 67,
                    "jLine": 67
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1667,
                    "jChar": 1674
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 443,
                    "jChar": 450
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 179,
                    "jChar": 186
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_CardView"
        },
        {
            "uid": "ts_firefly_firefly_property_CardView_yScroll",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "yScroll",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "yScroll: number =0;",
                    "language": "ts",
                    "iLine": 68,
                    "jLine": 68
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_cardToHTML"
                    ],
                    "iChar": 1698,
                    "jChar": 1705
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_expandOrContract"
                    ],
                    "iChar": 483,
                    "jChar": 490
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_getScrollPos"
                    ],
                    "iChar": 218,
                    "jChar": 225
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_CardView"
        },
        {
            "uid": "ts_firefly_firefly_method_CardView_constructor",
            "language": "ts",
            "module": "firefly",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    constructor(state: CardViewState) {\n        this.state = state;\n    }\n}",
                    "language": "ts",
                    "iLine": 69,
                    "jLine": 72
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_property_CardView_state"
                    ],
                    "iChar": 53,
                    "jChar": 58
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_CardView"
        },
        {
            "uid": "ts_firefly_firefly_property_Link_iDep",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "iDep",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "iDep: number =-1;               // dependency index in caller",
                    "language": "ts",
                    "iLine": 261,
                    "jLine": 261
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_method_Link_constructor"
                    ],
                    "iChar": 57,
                    "jChar": 61
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Link"
        },
        {
            "uid": "ts_firefly_firefly_property_Link_card",
            "language": "ts",
            "module": "firefly",
            "kind": "property",
            "name": "card",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "card: Card | null = null;       // card to open",
                    "language": "ts",
                    "iLine": 262,
                    "jLine": 262
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 6,
                    "jChar": 10
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 319,
                    "jChar": 323
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 458,
                    "jChar": 462
                },
                {
                    "targets": [
                        "ts_firefly_firefly_function_jumpToCard"
                    ],
                    "iChar": 510,
                    "jChar": 514
                },
                {
                    "targets": [
                        "ts_firefly_firefly_method_Link_constructor"
                    ],
                    "iChar": 75,
                    "jChar": 79
                }
            ],
            "children": [],
            "parent": "ts_firefly_firefly_class_Link"
        },
        {
            "uid": "ts_firefly_firefly_method_Link_constructor",
            "language": "ts",
            "module": "firefly",
            "kind": "method",
            "name": "constructor",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "    constructor(iDep: number, card: Card) {\n        this.iDep = iDep; this.card = card;\n    }\n}",
                    "language": "ts",
                    "iLine": 263,
                    "jLine": 266
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "ts_firefly_firefly_class_Card"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Link_iDep"
                    ],
                    "iChar": 57,
                    "jChar": 61
                },
                {
                    "targets": [
                        "ts_firefly_firefly_property_Link_card"
                    ],
                    "iChar": 75,
                    "jChar": 79
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "ts_firefly_firefly_class_Link"
        },
        {
            "uid": "py_firefly_firefly_global_import http.server",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import http.server",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import http.server",
                    "language": "py",
                    "iLine": 5,
                    "jLine": 5
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import socketserver",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import socketserver",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import socketserver",
                    "language": "py",
                    "iLine": 6,
                    "jLine": 6
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import json",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import json",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import json",
                    "language": "py",
                    "iLine": 7,
                    "jLine": 7
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import os",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import os",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import os",
                    "language": "py",
                    "iLine": 8,
                    "jLine": 8
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import subprocess",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import subprocess",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import subprocess",
                    "language": "py",
                    "iLine": 9,
                    "jLine": 9
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import threading",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import threading",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import threading",
                    "language": "py",
                    "iLine": 10,
                    "jLine": 10
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_from urllib.parse import parse_qs, urlparse",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "from urllib.parse import parse_qs, urlparse",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from urllib.parse import parse_qs, urlparse",
                    "language": "py",
                    "iLine": 11,
                    "jLine": 11
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_from io import BytesIO",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "from io import BytesIO",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from io import BytesIO",
                    "language": "py",
                    "iLine": 12,
                    "jLine": 12
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import socket",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import socket",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import socket",
                    "language": "py",
                    "iLine": 13,
                    "jLine": 13
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_from typing import Tuple",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "from typing import Tuple",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from typing import Tuple",
                    "language": "py",
                    "iLine": 14,
                    "jLine": 14
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import re",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import re",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import re",
                    "language": "py",
                    "iLine": 15,
                    "jLine": 15
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import select",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import select",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import select",
                    "language": "py",
                    "iLine": 16,
                    "jLine": 16
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import subprocess",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import subprocess",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import subprocess",
                    "language": "py",
                    "iLine": 17,
                    "jLine": 17
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import service",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import service",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import service",
                    "language": "py",
                    "iLine": 18,
                    "jLine": 18
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_from typing import List",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "from typing import List",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from typing import List",
                    "language": "py",
                    "iLine": 19,
                    "jLine": 19
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import random",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import random",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import random",
                    "language": "py",
                    "iLine": 20,
                    "jLine": 20
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_import vectors",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "import vectors",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import vectors",
                    "language": "py",
                    "iLine": 21,
                    "jLine": 21
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_print(\"---------------------------------------------------------------------------\")",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "print(\"---------------------------------------------------------------------------\")",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "print(\"---------------------------------------------------------------------------\")",
                    "language": "py",
                    "iLine": 24,
                    "jLine": 24
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_print(\"firefly.ps \u1566(\u30c4)\u1564\")",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "print(\"firefly.ps \u1566(\u30c4)\u1564\")",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "print(\"firefly.ps \u1566(\u30c4)\u1564\")",
                    "language": "py",
                    "iLine": 25,
                    "jLine": 25
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_root",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "root",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "root = \"/Users/asnaroo/desktop/experiments/firefly\"",
                    "language": "py",
                    "iLine": 26,
                    "jLine": 26
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importFolders"
                    ],
                    "iChar": 95,
                    "jChar": 99
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_save"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_load"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 107,
                    "jChar": 111
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 159,
                    "jChar": 163
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_startFirefly"
                    ],
                    "iChar": 74,
                    "jChar": 78
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_save"
                    ],
                    "iChar": 41,
                    "jChar": 45
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 177,
                    "jChar": 181
                },
                {
                    "targets": [
                        "py_firefly_service_global_global listen_port, app_name, public, root"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1725,
                    "jChar": 1729
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 77,
                    "jChar": 81
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 129,
                    "jChar": 133
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 160,
                    "jChar": 164
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 59,
                    "jChar": 63
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 74,
                    "jChar": 78
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_@service.register",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "@service.register",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "@service.register",
                    "language": "py",
                    "iLine": 28,
                    "jLine": 28
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_function_register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_importFolders",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "importFolders",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importFolders(project, folders):\n    fullPaths = []\n    for f in folders: fullPaths.append(root + \"/\" + f)\n    return importAllCards(project, fullPaths)",
                    "language": "py",
                    "iLine": 29,
                    "jLine": 32
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 95,
                    "jChar": 99
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 122,
                    "jChar": 136
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_@service.register",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "@service.register",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "@service.register",
                    "language": "py",
                    "iLine": 34,
                    "jLine": 34
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_function_register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_save",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "save",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def save(path, obj):\n    path = root + \"/data/\" + path\n    writeJsonToFile(obj, path)\n    return { \"saved\" : True }",
                    "language": "py",
                    "iLine": 35,
                    "jLine": 38
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_writeJsonToFile"
                    ],
                    "iChar": 59,
                    "jChar": 74
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 261,
                    "jChar": 265
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 514,
                    "jChar": 518
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_@service.register",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "@service.register",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "@service.register",
                    "language": "py",
                    "iLine": 40,
                    "jLine": 40
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_function_register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_load",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "load",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def load(path):\n    path = root + \"/data/\" + path\n    print(\"path:\", path)\n    if os.path.exists(path):\n        json = readJsonFromFile(path)\n        return json\n    else:\n        return { \"error\" : f\"{path.replace(root, '')} not found\" }",
                    "language": "py",
                    "iLine": 41,
                    "jLine": 48
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_readJsonFromFile"
                    ],
                    "iChar": 119,
                    "jChar": 135
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_readJsonFromFile"
                    ],
                    "iChar": 90,
                    "jChar": 94
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_startFirefly"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 458,
                    "jChar": 462
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_global_@service.register",
            "language": "py",
            "module": "firefly",
            "kind": "global",
            "name": "@service.register",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "@service.register",
                    "language": "py",
                    "iLine": 50,
                    "jLine": 50
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_function_register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_search",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "search",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def search(query):\n    return vectors.search(query, 8)",
                    "language": "py",
                    "iLine": 51,
                    "jLine": 52
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_function_search"
                    ],
                    "iChar": 38,
                    "jChar": 44
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_writeJsonToFile",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "writeJsonToFile",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def writeJsonToFile(obj, path: str):\n    os.makedirs(os.path.dirname(path), exist_ok=True)\n    with open(path, 'w') as file:\n        json.dump(obj, file, indent=4)",
                    "language": "py",
                    "iLine": 54,
                    "jLine": 57
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_save"
                    ],
                    "iChar": 59,
                    "jChar": 74
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_readJsonFromFile",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "readJsonFromFile",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def readJsonFromFile(filename):\n    with open(filename, 'r') as file:\n        data = json.load(file)\n    return data",
                    "language": "py",
                    "iLine": 59,
                    "jLine": 62
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_load",
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 90,
                    "jChar": 94
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_load"
                    ],
                    "iChar": 119,
                    "jChar": 135
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_importAllCards",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "importAllCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importAllCards(project, folders) -> dict:\n    cards = []\n    for folder in folders:\n        files = findAllFiles(folder, \".ts\") + findAllFiles(folder, \".py\")\n        print(\"files:\", files)\n        for file in files:\n            cards.extend(importCardsFromFile(project, file))\n    cards = list(filter(lambda c: not c.uid().endswith(\"_\"), cards))\n    removeIndents(cards)\n    computeDependencies(cards)\n    #computeLevels(cards)\n    saveEmbeddings(cards)\n    return cardsToJsonDict(cards)",
                    "language": "py",
                    "iLine": 65,
                    "jLine": 77
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_findAllFiles"
                    ],
                    "iChar": 104,
                    "jChar": 116
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_findAllFiles"
                    ],
                    "iChar": 134,
                    "jChar": 146
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 245,
                    "jChar": 264
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_removeIndents"
                    ],
                    "iChar": 354,
                    "jChar": 367
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 379,
                    "jChar": 398
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 436,
                    "jChar": 450
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_cardsToJsonDict"
                    ],
                    "iChar": 469,
                    "jChar": 484
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importFolders"
                    ],
                    "iChar": 122,
                    "jChar": 136
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_saveEmbeddings",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "saveEmbeddings",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def saveEmbeddings(cards):\n    print(\"saving embeddings\")\n    for card in cards:\n        key = separateWords(card.shortName())\n        vectors.add(key, card.uid())",
                    "language": "py",
                    "iLine": 79,
                    "jLine": 83
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_separateWords"
                    ],
                    "iChar": 95,
                    "jChar": 108
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 114,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 143,
                    "jChar": 146
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 157,
                    "jChar": 160
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 436,
                    "jChar": 450
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_separateWords",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "separateWords",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def separateWords(name): # convert \"camelCaseHTTP\" and \"camel_case_HTTP\" to \"camel case HTTP\", \n    symbols = \"!@#$%^&*()+-={}[]:\\\";\\',.<>/?\\`~_\"\n    result = \"\"\n    for i in range(0, len(name)):\n        pc = ' ' if i == 0 else name[i-1]\n        nc = ' ' if i == len(name)-1 else name[i+1]\n        c = name[i]\n        if c.isupper():\n            if pc.isupper():        # part of an acronym\n                result += c         # so don't change it\n            else:\n                if nc.isupper():    # also part of an acronym, but lead with a space\n                    result += ' ' + c\n                else:               # not part of an acronym\n                    result += ' ' + c.lower()\n        else:\n            if c in symbols: c = ' '\n            result += c\n    return result.replace(\"\\n\", \" \").strip()",
                    "language": "py",
                    "iLine": 85,
                    "jLine": 103
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 95,
                    "jChar": 108
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_Language",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "Language",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Language:\n    def name(self) -> str:\n        return \"\"\n    def shortName(self) -> str:\n        return \"\"\n    def comment(self) -> str:\n        return \"\"\n    def multiLineComment(self) -> str:\n        return \"\"\n    def endMultiLineComment(self) -> str:\n        return \"\"\n    def checkOpenQuote(self, str, ic):   # if (str[ic:]) starts with an openquote, return the closed-quote string to look for\n        return \"\"\n    def namesCanContainHyphens(self) -> bool:\n        return False\n    def constructorName(self) -> str:\n        return \"\"\n    def definitionKeywords(self) -> List[str]:\n        return []\n    def importCards(self, project, module,  text):\n        return []\n    def thisName(self) -> str:  # return \"this\" or \"self\" or whatever\n        return \"\"\n    def findTypeAndName(self, card, minIndent) -> (str, str):\n        return (\"\", \"\")",
                    "language": "py",
                    "iLine": 105,
                    "jLine": 129
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 616,
                    "jChar": 627
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_CodeBlock"
                    ],
                    "iChar": 61,
                    "jChar": 69
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 83,
                    "jChar": 91
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 13,
                    "jChar": 21
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 30,
                    "jChar": 38
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_findLanguage"
                    ],
                    "iChar": 30,
                    "jChar": 38
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 36,
                    "jChar": 44
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPastNextWord"
                    ],
                    "iChar": 39,
                    "jChar": 47
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_isWordChar"
                    ],
                    "iChar": 27,
                    "jChar": 35
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 61,
                    "jChar": 69
                }
            ],
            "children": [
                "py_firefly_firefly_method_Language_name",
                "py_firefly_firefly_method_Language_shortName",
                "py_firefly_firefly_method_Language_comment",
                "py_firefly_firefly_method_Language_multiLineComment",
                "py_firefly_firefly_method_Language_endMultiLineComment",
                "py_firefly_firefly_method_Language_checkOpenQuote",
                "py_firefly_firefly_method_Language_namesCanContainHyphens",
                "py_firefly_firefly_method_Language_constructorName",
                "py_firefly_firefly_method_Language_definitionKeywords",
                "py_firefly_firefly_method_Language_importCards",
                "py_firefly_firefly_method_Language_thisName",
                "py_firefly_firefly_method_Language_findTypeAndName"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_CodeBlock",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "CodeBlock",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class CodeBlock:\n    def __init__(self, text: str, language: Language, iLine: int):\n        self.text = text\n        self.language = language\n        self.iLine = iLine\n        self.jLine = iLine # inclusive: eurgh",
                    "language": "py",
                    "iLine": 131,
                    "jLine": 136
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 61,
                    "jChar": 69
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 613,
                    "jChar": 622
                }
            ],
            "children": [
                "py_firefly_firefly_method_CodeBlock___init__"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_Card",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "Card",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Card:\n    def __init__(self, project: str, module: str, code: str, language: Language, iLine: int) :\n        self.project = project  # global\n        self.module = module    # root-relative path of the file, for disambiguation\n        self.language = language.shortName()    \n        self.kind = ''          # \"class\" or \"function\" or \"other\"\n        self.name = ''          # name of function or class being defined\n        self.purpose = ''       # purpose\n        self.examples = ''      # examples\n        self.inputs = ''        # inputs\n        self.outputs = ''       # outputs\n        self.code = [ CodeBlock(code, language, iLine) ]        # actual text from code file\n        self.dependsOn = []     # cards we depend on\n        self.dependents = []    # cards that depend on us\n        self.children = []      # if we're a class, cards for methods\n        self.parent = None      # if we're a method or property, points to parent\n        self.rankFromBottom = 0 # 1 means depends on nothing; x means depends on things with rank < x\n        self.rankFromTop = 0    # 1 means nothing calls this; x means called by things with rank < x \n    def shortName(self):\n        s = \"\"\n        if self.parent: s= self.parent.name + \".\"\n        s += self.name\n        if self.kind == 'function' or self.kind == 'method':\n            s += \"()\"\n        return s\n    def uid(self):\n        u = self.language + \"_\" + self.project + \"_\" + self.module + \"_\" + self.kind + \"_\"\n        if self.parent: u += self.parent.name + \"_\"\n        u += self.name\n        return u",
                    "language": "py",
                    "iLine": 138,
                    "jLine": 169
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 83,
                    "jChar": 91
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName"
                    ],
                    "iChar": 266,
                    "jChar": 275
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_CodeBlock"
                    ],
                    "iChar": 613,
                    "jChar": 622
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 49,
                    "jChar": 53
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 74,
                    "jChar": 78
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 812,
                    "jChar": 816
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 1390,
                    "jChar": 1394
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 759,
                    "jChar": 763
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 1541,
                    "jChar": 1545
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 51,
                    "jChar": 55
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 72,
                    "jChar": 76
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_cardsToJsonDict"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 30,
                    "jChar": 34
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 90,
                    "jChar": 94
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 119,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_removeIndents"
                    ],
                    "iChar": 30,
                    "jChar": 34
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Python_importCards"
                    ],
                    "iChar": 64,
                    "jChar": 68
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Python_importCards"
                    ],
                    "iChar": 590,
                    "jChar": 594
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Typescript_importCards"
                    ],
                    "iChar": 64,
                    "jChar": 68
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Typescript_importCards"
                    ],
                    "iChar": 782,
                    "jChar": 786
                }
            ],
            "children": [
                "py_firefly_firefly_method_Card___init__",
                "py_firefly_firefly_method_Card_shortName",
                "py_firefly_firefly_method_Card_uid"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_card_serialiser",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "card_serialiser",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def card_serialiser(obj):\n    if isinstance(obj, Card):\n        return {\n            \"uid\" : obj.uid(),\n            \"language\" : obj.language,\n            \"module\" : obj.module,\n            \"kind\" : obj.kind,\n            \"name\" : obj.name,\n            \"purpose\" : obj.purpose,\n            \"examples\" : obj.examples,\n            \"inputs\" : obj.inputs,\n            \"outputs\" : obj.outputs,\n            \"code\" : [{ \"text\" : c.text, \"language\" : c.language.shortName(), \"iLine\" : c.iLine, \"jLine\" : c.jLine } for c in obj.code],\n            \"dependsOn\" : [ { \"targets\" : [t.uid() for t in d.targets], \"iChar\": d.iChar, \"jChar\": d.jChar } for d in obj.dependsOn],\n            \"dependents\" : [ { \"targets\" : [t.uid() for t in d.targets], \"iChar\": d.iChar, \"jChar\": d.jChar } for d in obj.dependents],\n            \"children\" : [ c.uid() for c in obj.children],\n            \"parent\" : obj.parent.uid() if obj.parent else \"null\"\n        }\n    raise TypeError(f\"Type {type(obj)} unfortunately is not serializable\")",
                    "language": "py",
                    "iLine": 171,
                    "jLine": 189
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 49,
                    "jChar": 53
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 97,
                    "jChar": 100
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 453,
                    "jChar": 462
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 570,
                    "jChar": 573
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 705,
                    "jChar": 708
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 824,
                    "jChar": 827
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 888,
                    "jChar": 891
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_cardsToJsonDict"
                    ],
                    "iChar": 126,
                    "jChar": 141
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_Dependency",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "Dependency",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Dependency:\n    def __init__(self, iChar: int, jChar: int, targets: Card):\n        self.iChar = iChar\n        self.jChar = jChar\n        self.targets = targets\n    def combine(self, dep):\n        len0 = self.jChar - self.iChar\n        len1 = dep.jChar - dep.iChar\n        if len1 > len0: # dep wins because longer\n            self.iChar = dep.iChar\n            self.jChar = dep.jChar\n            self.targets = dep.targets\n        elif len1 < len0 : # self wins because longer\n            pass\n        else: # equal length; combine the arrays\n            self.iChar = min(self.iChar, dep.iChar)\n            self.jChar = max(self.jChar, dep.jChar)\n            self.targets += dep.targets",
                    "language": "py",
                    "iLine": 191,
                    "jLine": 208
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 74,
                    "jChar": 78
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3642,
                    "jChar": 3652
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3833,
                    "jChar": 3843
                }
            ],
            "children": [
                "py_firefly_firefly_method_Dependency___init__",
                "py_firefly_firefly_method_Dependency_combine"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_Python",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "Python",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Python(Language):\n    def name(self): return \"python\"\n    def shortName(self): return \"py\"\n    def comment(self): return \"#\"\n    def checkOpenQuote(self, str, ic):   # if (str) starts with an openquote, return a pair: open and close quote strings\n        if str.startswith('\\'', ic): return ('\\'', '\\'')\n        elif str.startswith('\"', ic): return ('\"', '\"')\n        elif str.startswith('f\"', ic): return ('f\"', '\"')\n        elif str.startswith('\"\"\"', ic): return ('\"\"\"', '\"\"\"')\n        return(\"\", \"\")\n    def constructorName(self) -> str:\n        return \"__init__\"\n    def definitionKeywords(self) -> List[str]:\n        return [\"def\", \"class\"]\n    def thisName(self) -> str:  # return \"this\" or \"self\" or whatever\n        return 'self'\n    def importCards(self, project, module, text, minIndent) -> List[Card]:\n        lines = text.split(\"\\n\")\n        card = None\n        cards = []\n        indent = 0\n        for i in range(0, len(lines)):\n            line = lines[i]\n            prevLine = lines[i-1] if i > 0 else \"\"\n            if not(isBlank(line)):\n                oldIndent = indent\n                indent = nTabsAtStart(line)\n                if indent >= minIndent:\n                    if card == None or (oldIndent > minIndent and indent == minIndent) or (indent==minIndent and oldIndent==indent and (not(prevLine.strip().startswith(\"#\")))):\n                        card = Card(project, module, line, self, i+1)\n                        cards.append(card)\n                    else:\n                        card.code[0].text += \"\\n\" + line\n                        card.code[0].jLine = i+1\n        return cards\n    def findTypeAndName(self, card) -> (str, str):\n        lines = card.code[0].text.split(\"\\n\")\n        for line in lines:\n            l = line.strip()\n            if not l.startswith(\"#\"):\n                if l.startswith(\"def\"):\n                    parts = l.split(f\"(\")   # \"def funcName\"  \"params) -> result:\"\n                    funcName = parts[0].split(\" \")[1].strip()\n                    if parts[1].startswith(\"self\"):\n                        return (\"method\", funcName)\n                    else:\n                        return (\"function\", funcName)\n                elif l.startswith(\"class\"):\n                    return (\"class\", l.split(\" \")[1].split(\":\")[0].split(\"(\")[0])\n                else: # could be property (self.blah = ) or global (blah = ..)\n                    parts = l.split(\"=\")\n                    if \"self.\" in parts[0]:\n                        return (\"method\", parts[0].strip())\n                    else:\n                        return (\"global\", parts[0].strip())\n        return (\"unknown\", \"unknown\")",
                    "language": "py",
                    "iLine": 210,
                    "jLine": 265
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 13,
                    "jChar": 21
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 752,
                    "jChar": 763
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 812,
                    "jChar": 816
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_isBlank"
                    ],
                    "iChar": 1047,
                    "jChar": 1054
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_nTabsAtStart"
                    ],
                    "iChar": 1123,
                    "jChar": 1135
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 1390,
                    "jChar": 1394
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_findLanguage"
                    ],
                    "iChar": 68,
                    "jChar": 74
                }
            ],
            "children": [
                "py_firefly_firefly_method_Python_name",
                "py_firefly_firefly_method_Python_shortName",
                "py_firefly_firefly_method_Python_comment",
                "py_firefly_firefly_method_Python_checkOpenQuote",
                "py_firefly_firefly_method_Python_constructorName",
                "py_firefly_firefly_method_Python_definitionKeywords",
                "py_firefly_firefly_method_Python_thisName",
                "py_firefly_firefly_method_Python_importCards",
                "py_firefly_firefly_method_Python_findTypeAndName"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_Typescript",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "Typescript",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "# typescript\nclass Typescript(Language):\n    def name(self): return \"typescript\"\n    def shortName(self): return \"ts\"\n    def comment(self): return \"//\"\n    def multiLineComment(self): return \"/*\"\n    def endMultiLineComment(self): return \"*/\"\n    def checkOpenQuote(self, str, ic):\n        if str[ic] == '\"': return ('\"', '\"')\n        elif str[ic] == '`': return ('`','`')\n        elif str[ic] == '\\'': return ('\\'', '\\'')\n        return (\"\", \"\")\n    def constructorName(self) -> str:\n        return \"constructor\"\n    def definitionKeywords(self) -> List[str]:\n        return [\"function\", \"class\"]\n    def thisName(self) -> str:  # return \"this\" or \"self\" or whatever\n        return 'this'\n    def importCards(self, project, module, text, minIndent) -> List[Card]:\n        lines = text.split(\"\\n\")\n        cards = []\n        card = None\n        prevLine = \"\"\n        indent = 0\n        for iLine in range(0, len(lines)):\n            line = lines[iLine]\n            if indent >= minIndent: # only consider lines above the min indent level\n                # should we start a new card?\n                # YES if current line has indent = minIndent, line is not blank and previous line is not a comment\n                # NO if the line is just \"}\"\n                blank = (line.strip()==\"\")\n                singleCloseBrace = (line.strip() == \"}\")\n                prevComment = prevLine.strip().startswith(\"//\")\n                if indent == minIndent and (not blank) and (not prevComment) and (not singleCloseBrace):\n                    card = Card(project, module, line, self, iLine+1)\n                    cards.append(card)\n                elif card:\n                    card.code[0].text += \"\\n\" + line\n                    card.code[0].jLine = iLine + 1\n            indent = indent + countBraces(line)\n            prevLine = line\n        return cards\n    def findTypeAndName(self, card) -> (str, str):\n        lines = card.code[0].text.split(\"\\n\")\n        for line in lines:\n            l = line.strip()\n            icom = l.find(\"//\")\n            if icom>=0: l = l[0 : icom]\n            if l != \"\":\n                w = l.split(\" \")\n                classIndex = findString(w, \"class\")\n                if classIndex >= 0:\n                    return (\"class\", w[classIndex+1])\n                funcIndex = findString(w, \"function\")\n                if funcIndex >= 0:\n                    return (\"function\", w[funcIndex+1].split(\"(\")[0].split(\"<\")[0])\n                elif card.parent != None:\n                    if \"(\" in w[0]:\n                        return (\"method\", w[0].split(\"(\")[0])\n                    else:\n                        return (\"property\", w[0].split(\":\")[0])\n                elif w[0]==\"var\" or w[0]==\"let\" or w[0]==\"const\":\n                    return (\"global\", w[1].split(\":\")[0])\n        return (\"unknown\", \"unknown\")",
                    "language": "py",
                    "iLine": 267,
                    "jLine": 330
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 30,
                    "jChar": 38
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 699,
                    "jChar": 710
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 759,
                    "jChar": 763
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 1541,
                    "jChar": 1545
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_countBraces"
                    ],
                    "iChar": 1784,
                    "jChar": 1795
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_findString"
                    ],
                    "iChar": 2162,
                    "jChar": 2172
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_findString"
                    ],
                    "iChar": 2303,
                    "jChar": 2313
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_findLanguage"
                    ],
                    "iChar": 123,
                    "jChar": 133
                }
            ],
            "children": [
                "py_firefly_firefly_method_Typescript_name",
                "py_firefly_firefly_method_Typescript_shortName",
                "py_firefly_firefly_method_Typescript_comment",
                "py_firefly_firefly_method_Typescript_multiLineComment",
                "py_firefly_firefly_method_Typescript_endMultiLineComment",
                "py_firefly_firefly_method_Typescript_checkOpenQuote",
                "py_firefly_firefly_method_Typescript_constructorName",
                "py_firefly_firefly_method_Typescript_definitionKeywords",
                "py_firefly_firefly_method_Typescript_thisName",
                "py_firefly_firefly_method_Typescript_importCards",
                "py_firefly_firefly_method_Typescript_findTypeAndName"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_countBraces",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "countBraces",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def countBraces(s: str) -> int:\n    return s.count(\"{\") - s.count(\"}\")",
                    "language": "py",
                    "iLine": 332,
                    "jLine": 333
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 1784,
                    "jChar": 1795
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Typescript_importCards"
                    ],
                    "iChar": 1005,
                    "jChar": 1016
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_nTabsAtStart",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "nTabsAtStart",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def nTabsAtStart(s: str) -> int:\n    return (len(s) - len(s.lstrip(' ')))/4",
                    "language": "py",
                    "iLine": 335,
                    "jLine": 336
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 1123,
                    "jChar": 1135
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Python_importCards"
                    ],
                    "iChar": 335,
                    "jChar": 347
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_isBlank",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "isBlank",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def isBlank(s: str) -> bool:    \n    return not s.strip()",
                    "language": "py",
                    "iLine": 338,
                    "jLine": 339
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 1047,
                    "jChar": 1054
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Python_importCards"
                    ],
                    "iChar": 267,
                    "jChar": 274
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_readFile",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "readFile",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def readFile(filename: str) -> str:\n    with open (filename, \"r\") as f:\n        text = f.read()\n    return text",
                    "language": "py",
                    "iLine": 341,
                    "jLine": 344
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 220,
                    "jChar": 228
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_findLanguage",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "findLanguage",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findLanguage(ext: str) -> Language:\n    if ext == \".py\": return Python()\n    elif ext == \".ts\" or ext == \".js\": return Typescript()\n    else:\n        raise Exception(\"Unrecognised file extension\")",
                    "language": "py",
                    "iLine": 346,
                    "jLine": 350
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 30,
                    "jChar": 38
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 68,
                    "jChar": 74
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 123,
                    "jChar": 133
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 94,
                    "jChar": 106
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_importCardsFromFile",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "importCardsFromFile",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importCardsFromFile(project, filename) -> List[Card]:\n    #print(\"importing cards from\", filename)\n    root, ext = os.path.splitext(filename)\n    module = root.split('/')[-1]        # eg. firefly or cards\n    text = readFile(filename)\n    return importCards(project, module, text, ext)",
                    "language": "py",
                    "iLine": 352,
                    "jLine": 357
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 51,
                    "jChar": 55
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 107,
                    "jChar": 111
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 159,
                    "jChar": 163
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_readFile"
                    ],
                    "iChar": 220,
                    "jChar": 228
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 250,
                    "jChar": 261
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 245,
                    "jChar": 264
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 48,
                    "jChar": 67
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_importCards",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "importCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importCards(project: str, module: str, text: str, ext: str) -> List[Card]:\n    language = findLanguage(ext)\n    cards = importCardsFromText(project, module, language, text, None, 0)\n    allChildren = []\n    for c in cards:\n        if c.kind == \"class\":\n            #print(\"importing methods for class\", c.name)\n            c.children = importCardsFromText(project, module, language, c.code[0].text, c, 1)\n            for child in c.children:\n                child.code[0].iLine += c.code[0].iLine +1       # not sure why but hey\n                child.code[0].jLine += c.code[0].iLine +1\n            allChildren += c.children\n    cards += allChildren\n    cards = [card for card in cards if card.name != \"unknown\"] # remove unknown name cards\n    return cards",
                    "language": "py",
                    "iLine": 359,
                    "jLine": 374
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 72,
                    "jChar": 76
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_findLanguage"
                    ],
                    "iChar": 94,
                    "jChar": 106
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 124,
                    "jChar": 143
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 340,
                    "jChar": 359
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 616,
                    "jChar": 627
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Python"
                    ],
                    "iChar": 752,
                    "jChar": 763
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 699,
                    "jChar": 710
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 250,
                    "jChar": 261
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_cardsToJsonDict",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "cardsToJsonDict",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def cardsToJsonDict(cards: List[Card]) -> dict:\n    print(\"cardsToJsonDict:\", len(cards), \"cards\")\n    jsonObj = { \"cards\" : [card_serialiser(c) for c in cards] }\n    jsonStr = json.dumps(jsonObj, indent=4)\n    print(\"saving...\")\n    writeTextToFile(jsonStr, \"/Users/asnaroo/desktop/experiments/firefly/data/cards/test.json\")\n    print(\"saved\")\n    return jsonObj",
                    "language": "py",
                    "iLine": 376,
                    "jLine": 383
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 126,
                    "jChar": 141
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_writeTextToFile"
                    ],
                    "iChar": 234,
                    "jChar": 249
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 469,
                    "jChar": 484
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_class_Lex",
            "language": "py",
            "module": "firefly",
            "kind": "class",
            "name": "Lex",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class Lex:\n    def __init__(self, code: str =\"\", iChar:int =0, jChar:int =0, type:str =\"\"):\n        sub = code[iChar:jChar]\n        ts = sub.lstrip()\n        iChar += len(sub) - len(ts)\n        te = sub.rstrip()\n        jChar -= len(sub) - len(te)\n        self.ic = iChar\n        self.jc = jChar\n        self.text = code[iChar:jChar]\n        self.type = type\n        self.targets = []\n    def __eq__(self, other):\n        if isinstance(other, Lex):\n            return self.text == other.text\n        elif isinstance(other, str):\n            return self.text == other\n        return False",
                    "language": "py",
                    "iLine": 385,
                    "jLine": 403
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 54,
                    "jChar": 57
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 1212,
                    "jChar": 1215
                }
            ],
            "children": [
                "py_firefly_firefly_method_Lex___init__",
                "py_firefly_firefly_method_Lex___eq__"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_computeDependencies",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "computeDependencies",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def computeDependencies(cards: List[Card]):         # this is a bit of a behemoth, refactor!\n    # put all cards into a hash table mapping name -> List[Card]\n    cardsFromName = {}\n    for card in cards:\n        name = card.name\n        if not (name in cardsFromName):\n            cardsFromName[name] = [card]\n        else:\n            cardsFromName[name].append(card)\n    # now check each card for words that might map to others\n    for card in cards:\n        code = card.code[0].text\n        lang = card.code[0].language\n        ls = processLexemes(code, lang)\n        # first, get the types of all local variables, if they're declared\n        typeFromVar = {}\n        typeFromVar[lang.thisName()] = card.parent.name if card.parent else ''\n        for i in range(0, len(ls)-2):\n            if ls[i].type == 'identifier' and ls[i+1]==':' and ls[i+2].type == 'identifier':\n                typeFromVar[ls[i].text] = ls[i+2].text\n        # now get an array of possible cards for each identifier\n        for l in ls:\n            if l.type == 'identifier':\n                p = []\n                if l.text in cardsFromName:\n                    p = cardsFromName[l.text]\n                l.targets = p\n        # get the type of each global, if you can\n        for l in ls:\n            if l.type == 'identifier' and len(l.targets)==1:\n                t = l.targets[0]\n                if t.kind == 'global':\n                    # split the global def into lexemes\n                    gls = processLexemes(t.code[0].text, t.code[0].language)\n                    # look for a : b and grab b\n                    for i in range(0, len(gls)-2):\n                        if gls[i].type == 'identifier' and gls[i] == t.name and gls[i+1] == ':' and gls[i+2].type=='identifier':\n                            typeFromVar[l.text] = gls[i+2].text\n        # now whittle down the potentials list using various filters\n        # 1- remove the targets for the definition\n        for l in ls:\n            if l.text == card.name and len(l.targets)>0:\n                l.targets= []\n                break\n        # 2- remove targets from b that don't match type of a.b\n        for i in range(2, len(ls)):\n            pred = ls[i-2]\n            if ls[i].type == 'identifier' and ls[i-1] == '.' and pred.type == 'identifier':\n                if pred.text in typeFromVar:\n                    predType = typeFromVar[pred.text]\n                    ls[i].targets = [t for t in ls[i].targets if t.parent and t.parent.name == predType]\n        # 3- if you matched a property or method but there's no dot before, get rid\n        for i in range(1, len(ls)):\n            if ls[i].type == 'identifier' and ls[i-1] != '.':\n                ls[i].targets = [t for t in ls[i].targets if t.kind != 'method' and t.kind != 'property']\n        # 4- if you matched a function or method but there's no bracket after, get rid; but only if the match is ambiguous! (i.e. keep function ptrs)\n        for i in range(0, len(ls)-1):\n            if ls[i].type == 'identifier' and ls[i+1] != '(' and len(ls[i].targets) > 1:\n                ls[i].targets = [t for t in ls[i].targets if t.kind != 'function' and t.kind != 'method']\n        # 5- if you matched something in a different language, remove it (TBC)\n        for l in ls:\n            if l.type == 'identifier':\n                l.targets = [t for t in l.targets if t.code[0].language.shortName() == lang.shortName()]\n        # and create dependencies from the potentials\n        for i in range(0, len(ls)):\n            l = ls[i]\n            l.targets = [t for t in l.targets if t != card]\n            if len(l.targets) > 0:\n                dep = Dependency(l.ic, l.jc, l.targets)\n                card.dependsOn.append(dep)\n                for t in l.targets:\n                    if t != card:\n                        t.dependents.append(Dependency(l.ic, l.jc, [card]))",
                    "language": "py",
                    "iLine": 405,
                    "jLine": 480
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 36,
                    "jChar": 40
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 536,
                    "jChar": 550
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_thisName",
                        "py_firefly_firefly_method_Python_thisName",
                        "py_firefly_firefly_method_Typescript_thisName"
                    ],
                    "iChar": 688,
                    "jChar": 696
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 1482,
                    "jChar": 1496
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 3380,
                    "jChar": 3389
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 3400,
                    "jChar": 3409
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 3642,
                    "jChar": 3652
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Dependency"
                    ],
                    "iChar": 3833,
                    "jChar": 3843
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 379,
                    "jChar": 398
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 103,
                    "jChar": 122
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_processLexemes",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "processLexemes",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def processLexemes(code: str, lang: Language) -> List[Lex]:\n    mlc = lang.multiLineComment()\n    elmc = lang.endMultiLineComment()\n    result = []\n    ic = 0\n    while ic < len(code):\n        ic = skipToNextNonWhitespace(code, ic)\n        type = ''\n        if ic < len(code):\n            if code.startswith(lang.comment(), ic):         # single-line comment\n                jc = skipPast('\\n', code, ic)\n                type = 'comment'\n            elif mlc != '' and code.startswith(mlc, ic):    # multi-line comment\n                jc = skipPast(elmc, code, ic)\n                type = 'comment'\n            else:\n                (openQuote, closeQuote) = lang.checkOpenQuote(code, ic)          # quotes\n                if closeQuote != '':\n                    jc = skipPastCloseQuote(closeQuote, code, ic + len(openQuote))\n                    type = 'quote'\n                elif isAlpha(code[ic]):\n                    jc = skipPastNextWord(code, ic, lang)\n                    type = 'identifier'\n                elif isOperator(code[ic]):\n                    jc = skipPastOperator(code, ic)\n                    type = 'operator'\n                else:\n                    jc = ic + 1\n            result.append(Lex(code, ic, jc, type))\n            ic = jc\n    return result",
                    "language": "py",
                    "iLine": 482,
                    "jLine": 512
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 36,
                    "jChar": 44
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Lex"
                    ],
                    "iChar": 54,
                    "jChar": 57
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_multiLineComment"
                    ],
                    "iChar": 75,
                    "jChar": 91
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_endMultiLineComment"
                    ],
                    "iChar": 110,
                    "jChar": 129
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipToNextNonWhitespace"
                    ],
                    "iChar": 198,
                    "jChar": 221
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_comment"
                    ],
                    "iChar": 313,
                    "jChar": 320
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPast"
                    ],
                    "iChar": 380,
                    "jChar": 388
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPast"
                    ],
                    "iChar": 540,
                    "jChar": 548
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_checkOpenQuote"
                    ],
                    "iChar": 663,
                    "jChar": 677
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPastCloseQuote"
                    ],
                    "iChar": 768,
                    "jChar": 786
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_isAlpha"
                    ],
                    "iChar": 882,
                    "jChar": 889
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPastNextWord"
                    ],
                    "iChar": 926,
                    "jChar": 942
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_isOperator"
                    ],
                    "iChar": 1020,
                    "jChar": 1030
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPastOperator"
                    ],
                    "iChar": 1067,
                    "jChar": 1083
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Lex"
                    ],
                    "iChar": 1212,
                    "jChar": 1215
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 536,
                    "jChar": 550
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 1482,
                    "jChar": 1496
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_skipPast",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "skipPast",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def skipPast(searchFor, inText, ic) -> int:     # just straight search for (search), return index after or len() if not found\n    jc = inText.find(searchFor, ic)\n    return (jc + len(searchFor)) if jc >= 0 else len(inText)",
                    "language": "py",
                    "iLine": 514,
                    "jLine": 516
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 380,
                    "jChar": 388
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 540,
                    "jChar": 548
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_skipPastCloseQuote",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "skipPastCloseQuote",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def skipPastCloseQuote(searchFor, inText, ic) -> int:   # same, but will overlook '\\' characters\n    while(ic < len(inText)):\n        ic = inText.find(searchFor, ic)\n        if ic < 0: return len(inText)\n        if ic == 0 or inText[ic-1] != '\\\\': return ic + len(searchFor)\n        ic = ic + len(searchFor)\n    return len(inText)",
                    "language": "py",
                    "iLine": 518,
                    "jLine": 524
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 768,
                    "jChar": 786
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_skipPastNextWord",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "skipPastNextWord",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def skipPastNextWord(inText, ic, lang: Language) -> int:    # skip past end of next word\n    while(ic < len(inText)):\n        char = inText[ic]\n        if not isWordChar(char, lang): return ic\n        ic += 1\n    return len(inText)",
                    "language": "py",
                    "iLine": 526,
                    "jLine": 531
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 39,
                    "jChar": 47
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_isWordChar"
                    ],
                    "iChar": 159,
                    "jChar": 169
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 926,
                    "jChar": 942
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_isWhitespace",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "isWhitespace",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def isWhitespace(char) -> bool:\n    return char in ' \\n\\t'",
                    "language": "py",
                    "iLine": 533,
                    "jLine": 534
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_skipToNextNonWhitespace"
                    ],
                    "iChar": 131,
                    "jChar": 143
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_skipToNextNonWhitespace",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "skipToNextNonWhitespace",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def skipToNextNonWhitespace(inText, ic) -> int: # skip to next nonwhitespace character\n    while(ic < len(inText)):\n        if not isWhitespace(inText[ic]):\n            return ic\n        ic += 1\n    return ic",
                    "language": "py",
                    "iLine": 536,
                    "jLine": 541
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_isWhitespace"
                    ],
                    "iChar": 131,
                    "jChar": 143
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 198,
                    "jChar": 221
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_isAlpha",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "isAlpha",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def isAlpha(char) -> bool:\n    l = char.lower()\n    return (l >= 'a' and l <= 'z') or l == '_'",
                    "language": "py",
                    "iLine": 543,
                    "jLine": 545
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 882,
                    "jChar": 889
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_isOperator",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "isOperator",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def isOperator(char) -> bool:\n    return char in '!@#$%^&*_+-=:;<>.,/?'",
                    "language": "py",
                    "iLine": 547,
                    "jLine": 548
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 1020,
                    "jChar": 1030
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPastOperator"
                    ],
                    "iChar": 71,
                    "jChar": 81
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_skipPastOperator",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "skipPastOperator",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def skipPastOperator(inText, ic) -> int:\n    if ic < len(inText)-1 and isOperator(inText[ic+1]): return ic+2\n    return ic+1",
                    "language": "py",
                    "iLine": 550,
                    "jLine": 552
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_isOperator"
                    ],
                    "iChar": 71,
                    "jChar": 81
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 1067,
                    "jChar": 1083
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_isWordChar",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "isWordChar",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def isWordChar(char, lang: Language) -> bool:\n    l = char.lower()\n    if (l >= 'a' and l <= 'z'): return True\n    if (l >= '0' and l <= '9'): return True\n    if (l == '_'): return True\n    if (lang.namesCanContainHyphens() and l == '-'): return True\n    return False",
                    "language": "py",
                    "iLine": 554,
                    "jLine": 560
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 27,
                    "jChar": 35
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_namesCanContainHyphens"
                    ],
                    "iChar": 199,
                    "jChar": 221
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_skipPastNextWord"
                    ],
                    "iChar": 159,
                    "jChar": 169
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_computeLevels",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "computeLevels",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def computeLevels(cards: List[Card]):\n    #print('computeLevels...')\n    # now compute the levels of all callable things (not classes or properties)\n    callables = [c for c in cards if c.kind == 'method' or c.kind == 'function']\n    #print('\\ncomputing rank from top...')\n    queue = []\n    for c in callables:\n        count=0\n        for d in c.dependents:\n            for t in d.targets:\n                if t in callables:\n                    count += 1\n        if count == 0:\n            c.rankFromTop = 1\n            queue.append(c)\n    level = 1\n    while len(queue) > 0 and level < 100:\n        rp = f\"level {level}: \"\n        for c in queue: rp += c.shortName() + \" \"\n        #print(rp)\n        nextQueue = []\n        for c in queue:\n            for d in c.dependsOn:\n                for t in d.targets:\n                    if t in callables and t.rankFromTop == 0:\n                        t.rankFromTop = c.rankFromTop + 1\n                        if not t in nextQueue:\n                            nextQueue.append(t)\n        queue = nextQueue\n        level += 1\n    #print(\"\\ncomputing rank from bottom...\")\n    queue = []\n    for c in callables:\n        count=0\n        for d in c.dependsOn:\n            for t in d.targets:\n                if t in callables:\n                    count += 1\n        if count == 0:\n            c.rankFromBottom = 1\n            queue.append(c)\n    level = 1\n    while len(queue) > 0 and level < 100:\n        rp = f\"level {level}: \"\n        for c in queue: rp += c.shortName() + \" \"\n        #print(rp)\n        nextQueue = []\n        for c in queue:\n            for d in c.dependents:\n                for t in d.targets:\n                    if t in callables and t.rankFromBottom == 0:\n                        t.rankFromBottom = c.rankFromBottom + 1\n                        if not t in nextQueue:\n                            nextQueue.append(t)\n        queue = nextQueue\n        level += 1",
                    "language": "py",
                    "iLine": 563,
                    "jLine": 619
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 30,
                    "jChar": 34
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 1505,
                    "jChar": 1514
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_writeTextToFile",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "writeTextToFile",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def writeTextToFile(text: str, path: str):\n    folder = os.path.dirname(path)\n    if folder != '':\n        os.makedirs(folder, exist_ok=True)\n    with open(path, 'w') as file:\n        file.write(text)",
                    "language": "py",
                    "iLine": 621,
                    "jLine": 626
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_cardsToJsonDict"
                    ],
                    "iChar": 234,
                    "jChar": 249
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_importCardsFromText",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "importCardsFromText",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importCardsFromText(project: str, module: str, language: Language, text: str, parent: Card, minIndent: int)-> List[Card]:\n    cards = language.importCards(project, module, text, minIndent)\n    for c in cards:\n        c.parent = parent\n        (c.kind, c.name) = language.findTypeAndName(c)\n    return cards",
                    "language": "py",
                    "iLine": 628,
                    "jLine": 633
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Language"
                    ],
                    "iChar": 61,
                    "jChar": 69
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 90,
                    "jChar": 94
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 119,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_importCards"
                    ],
                    "iChar": 147,
                    "jChar": 158
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_findTypeAndName"
                    ],
                    "iChar": 275,
                    "jChar": 290
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 124,
                    "jChar": 143
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCards"
                    ],
                    "iChar": 340,
                    "jChar": 359
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_removeIndents",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "removeIndents",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def removeIndents(cards: List[Card]):\n    for card in cards:\n        lines = card.code[0].text.split('\\n')\n        minLeadingSpaces = 10000\n        for line in lines:\n            if len(line) > 0:\n                nLeadingSpaces = len(line) - len(line.lstrip(' '))\n                minLeadingSpaces = min(minLeadingSpaces, nLeadingSpaces)\n        if minLeadingSpaces > 0:\n            lines = [l[minLeadingSpaces:] for l in lines]\n            card.code[0].text = '\\n'.join(lines)",
                    "language": "py",
                    "iLine": 635,
                    "jLine": 645
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 30,
                    "jChar": 34
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 354,
                    "jChar": 367
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_findWordInString",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "findWordInString",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findWordInString(word: str, string: str) -> int:    # not part of another word\n    punc = \" !@#$%^&*()+-={}[]:\\\";\\',.<>/?\\`~\"\n    index = 0\n    while index != -1:\n        index = string.find(word, index)\n        if index == -1:\n            return -1\n        end = index + len(word)\n        if (index == 0 or \\\n            (string[index-1:index] in punc) or word[0] in punc) and \\\n            (string[end:end+1] in punc or word[len(word)-1] in punc):\n            return index\n        else:\n            index = end\n    return -1",
                    "language": "py",
                    "iLine": 647,
                    "jLine": 661
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_findString",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "findString",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findString(strings: list, target: str) -> int:\n    try:\n        return strings.index(target)\n    except ValueError:\n        return -1",
                    "language": "py",
                    "iLine": 663,
                    "jLine": 667
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 2162,
                    "jChar": 2172
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Typescript"
                    ],
                    "iChar": 2303,
                    "jChar": 2313
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Typescript_findTypeAndName"
                    ],
                    "iChar": 275,
                    "jChar": 285
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Typescript_findTypeAndName"
                    ],
                    "iChar": 404,
                    "jChar": 414
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_findAllFiles",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "findAllFiles",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findAllFiles(directory, extension):\n    \"\"\"\n    Returns a list of files in the given directory (and its subdirectories) that end with the given extension.\n    \"\"\"\n    matched_files = []\n    # Ensure the extension starts with a dot\n    if not extension.startswith(\".\"):\n        extension = \".\" + extension\n    # Recursively walk the directory\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            if filename.endswith(extension):\n                full_path = os.path.join(dirpath, filename)\n                matched_files.append(full_path)\n    return matched_files",
                    "language": "py",
                    "iLine": 669,
                    "jLine": 686
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 104,
                    "jChar": 116
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importAllCards"
                    ],
                    "iChar": 134,
                    "jChar": 146
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_startFirefly",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "startFirefly",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def startFirefly():\n    vectors.load()\n    service.start(\"firefly\", 8003, root)",
                    "language": "py",
                    "iLine": 688,
                    "jLine": 690
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_load",
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 51,
                    "jChar": 56
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 74,
                    "jChar": 78
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_function_test",
            "language": "py",
            "module": "firefly",
            "kind": "function",
            "name": "test",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def test():\n    print(\"testing...\")\n    cards = importCardsFromFile(\"firefly\", \"../ts/firefly.ts\")\n    computeDependencies(cards)\n    for card in cards:\n        print(\"----------------------------------\")\n        print(card.uid())\n        code = card.code[0].text\n        print(code)\n        words = []\n        for d in card.dependsOn:\n            for t in d.targets:\n                words.append(t.shortName())\n        print(words)",
                    "language": "py",
                    "iLine": 692,
                    "jLine": 705
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 48,
                    "jChar": 67
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 103,
                    "jChar": 122
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Card_uid"
                    ],
                    "iChar": 224,
                    "jChar": 227
                },
                {
                    "targets": [
                        "py_firefly_firefly_method_Language_shortName",
                        "py_firefly_firefly_method_Card_shortName",
                        "py_firefly_firefly_method_Python_shortName",
                        "py_firefly_firefly_method_Typescript_shortName"
                    ],
                    "iChar": 399,
                    "jChar": 408
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_firefly_method_Language_name",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "name",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def name(self) -> str:\n    return \"\"",
                    "language": "py",
                    "iLine": 108,
                    "jLine": 109
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_shortName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "shortName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def shortName(self) -> str:\n    return \"\"",
                    "language": "py",
                    "iLine": 110,
                    "jLine": 111
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 114,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 266,
                    "jChar": 275
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 453,
                    "jChar": 462
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3380,
                    "jChar": 3389
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3400,
                    "jChar": 3409
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 1505,
                    "jChar": 1514
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 399,
                    "jChar": 408
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_comment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "comment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def comment(self) -> str:\n    return \"\"",
                    "language": "py",
                    "iLine": 112,
                    "jLine": 113
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 313,
                    "jChar": 320
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_multiLineComment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "multiLineComment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def multiLineComment(self) -> str:\n    return \"\"",
                    "language": "py",
                    "iLine": 114,
                    "jLine": 115
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 75,
                    "jChar": 91
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_endMultiLineComment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "endMultiLineComment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def endMultiLineComment(self) -> str:\n    return \"\"",
                    "language": "py",
                    "iLine": 116,
                    "jLine": 117
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 110,
                    "jChar": 129
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_checkOpenQuote",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "checkOpenQuote",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def checkOpenQuote(self, str, ic):   # if (str[ic:]) starts with an openquote, return the closed-quote string to look for\n    return \"\"",
                    "language": "py",
                    "iLine": 118,
                    "jLine": 119
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_processLexemes"
                    ],
                    "iChar": 663,
                    "jChar": 677
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_namesCanContainHyphens",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "namesCanContainHyphens",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def namesCanContainHyphens(self) -> bool:\n    return False",
                    "language": "py",
                    "iLine": 120,
                    "jLine": 121
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_isWordChar"
                    ],
                    "iChar": 199,
                    "jChar": 221
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_constructorName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "constructorName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def constructorName(self) -> str:\n    return \"\"",
                    "language": "py",
                    "iLine": 122,
                    "jLine": 123
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_definitionKeywords",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "definitionKeywords",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def definitionKeywords(self) -> List[str]:\n    return []",
                    "language": "py",
                    "iLine": 124,
                    "jLine": 125
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_importCards",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "importCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importCards(self, project, module,  text):\n    return []",
                    "language": "py",
                    "iLine": 126,
                    "jLine": 127
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 147,
                    "jChar": 158
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_thisName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "thisName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def thisName(self) -> str:  # return \"this\" or \"self\" or whatever\n    return \"\"",
                    "language": "py",
                    "iLine": 128,
                    "jLine": 129
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 688,
                    "jChar": 696
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Language_findTypeAndName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "findTypeAndName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findTypeAndName(self, card, minIndent) -> (str, str):\n    return (\"\", \"\")",
                    "language": "py",
                    "iLine": 130,
                    "jLine": 131
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromText"
                    ],
                    "iChar": 275,
                    "jChar": 290
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Language"
        },
        {
            "uid": "py_firefly_firefly_method_Card_shortName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "shortName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def shortName(self):\n    s = \"\"\n    if self.parent: s= self.parent.name + \".\"\n    s += self.name\n    if self.kind == 'function' or self.kind == 'method':\n        s += \"()\"\n    return s",
                    "language": "py",
                    "iLine": 158,
                    "jLine": 164
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 114,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 453,
                    "jChar": 462
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3380,
                    "jChar": 3389
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3400,
                    "jChar": 3409
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 1505,
                    "jChar": 1514
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 399,
                    "jChar": 408
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Card"
        },
        {
            "uid": "py_firefly_firefly_method_Card_uid",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "uid",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def uid(self):\n    u = self.language + \"_\" + self.project + \"_\" + self.module + \"_\" + self.kind + \"_\"\n    if self.parent: u += self.parent.name + \"_\"\n    u += self.name\n    return u",
                    "language": "py",
                    "iLine": 165,
                    "jLine": 169
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 157,
                    "jChar": 160
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 97,
                    "jChar": 100
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 570,
                    "jChar": 573
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 705,
                    "jChar": 708
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 824,
                    "jChar": 827
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 888,
                    "jChar": 891
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 224,
                    "jChar": 227
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Card"
        },
        {
            "uid": "py_firefly_firefly_method_Dependency_combine",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "combine",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def combine(self, dep):\n    len0 = self.jChar - self.iChar\n    len1 = dep.jChar - dep.iChar\n    if len1 > len0: # dep wins because longer\n        self.iChar = dep.iChar\n        self.jChar = dep.jChar\n        self.targets = dep.targets\n    elif len1 < len0 : # self wins because longer\n        pass\n    else: # equal length; combine the arrays\n        self.iChar = min(self.iChar, dep.iChar)\n        self.jChar = max(self.jChar, dep.jChar)\n        self.targets += dep.targets",
                    "language": "py",
                    "iLine": 198,
                    "jLine": 210
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Dependency"
        },
        {
            "uid": "py_firefly_firefly_method_Python_name",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "name",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def name(self): return \"python\"",
                    "language": "py",
                    "iLine": 213,
                    "jLine": 213
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_shortName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "shortName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def shortName(self): return \"py\"",
                    "language": "py",
                    "iLine": 214,
                    "jLine": 214
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 114,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 453,
                    "jChar": 462
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3380,
                    "jChar": 3389
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3400,
                    "jChar": 3409
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 1505,
                    "jChar": 1514
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 399,
                    "jChar": 408
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_comment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "comment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def comment(self): return \"#\"",
                    "language": "py",
                    "iLine": 215,
                    "jLine": 215
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_checkOpenQuote",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "checkOpenQuote",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def checkOpenQuote(self, str, ic):   # if (str) starts with an openquote, return a pair: open and close quote strings\n    if str.startswith('\\'', ic): return ('\\'', '\\'')\n    elif str.startswith('\"', ic): return ('\"', '\"')\n    elif str.startswith('f\"', ic): return ('f\"', '\"')\n    elif str.startswith('\"\"\"', ic): return ('\"\"\"', '\"\"\"')\n    return(\"\", \"\")",
                    "language": "py",
                    "iLine": 216,
                    "jLine": 221
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_constructorName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "constructorName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def constructorName(self) -> str:\n    return \"__init__\"",
                    "language": "py",
                    "iLine": 222,
                    "jLine": 223
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_definitionKeywords",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "definitionKeywords",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def definitionKeywords(self) -> List[str]:\n    return [\"def\", \"class\"]",
                    "language": "py",
                    "iLine": 224,
                    "jLine": 225
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_thisName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "thisName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def thisName(self) -> str:  # return \"this\" or \"self\" or whatever\n    return 'self'",
                    "language": "py",
                    "iLine": 226,
                    "jLine": 227
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 688,
                    "jChar": 696
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_importCards",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "importCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importCards(self, project, module, text, minIndent) -> List[Card]:\n    lines = text.split(\"\\n\")\n    card = None\n    cards = []\n    indent = 0\n    for i in range(0, len(lines)):\n        line = lines[i]\n        prevLine = lines[i-1] if i > 0 else \"\"\n        if not(isBlank(line)):\n            oldIndent = indent\n            indent = nTabsAtStart(line)\n            if indent >= minIndent:\n                if card == None or (oldIndent > minIndent and indent == minIndent) or (indent==minIndent and oldIndent==indent and (not(prevLine.strip().startswith(\"#\")))):\n                    card = Card(project, module, line, self, i+1)\n                    cards.append(card)\n                else:\n                    card.code[0].text += \"\\n\" + line\n                    card.code[0].jLine = i+1\n    return cards",
                    "language": "py",
                    "iLine": 228,
                    "jLine": 246
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 64,
                    "jChar": 68
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_isBlank"
                    ],
                    "iChar": 267,
                    "jChar": 274
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_nTabsAtStart"
                    ],
                    "iChar": 335,
                    "jChar": 347
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 590,
                    "jChar": 594
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Python_findTypeAndName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "findTypeAndName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findTypeAndName(self, card) -> (str, str):\n    lines = card.code[0].text.split(\"\\n\")\n    for line in lines:\n        l = line.strip()\n        if not l.startswith(\"#\"):\n            if l.startswith(\"def\"):\n                parts = l.split(f\"(\")   # \"def funcName\"  \"params) -> result:\"\n                funcName = parts[0].split(\" \")[1].strip()\n                if parts[1].startswith(\"self\"):\n                    return (\"method\", funcName)\n                else:\n                    return (\"function\", funcName)\n            elif l.startswith(\"class\"):\n                return (\"class\", l.split(\" \")[1].split(\":\")[0].split(\"(\")[0])\n            else: # could be property (self.blah = ) or global (blah = ..)\n                parts = l.split(\"=\")\n                if \"self.\" in parts[0]:\n                    return (\"method\", parts[0].strip())\n                else:\n                    return (\"global\", parts[0].strip())\n    return (\"unknown\", \"unknown\")",
                    "language": "py",
                    "iLine": 247,
                    "jLine": 267
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Python"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_name",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "name",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def name(self): return \"typescript\"",
                    "language": "py",
                    "iLine": 271,
                    "jLine": 271
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_shortName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "shortName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def shortName(self): return \"ts\"",
                    "language": "py",
                    "iLine": 272,
                    "jLine": 272
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 114,
                    "jChar": 123
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_card_serialiser"
                    ],
                    "iChar": 453,
                    "jChar": 462
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3380,
                    "jChar": 3389
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 3400,
                    "jChar": 3409
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 658,
                    "jChar": 667
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_computeLevels"
                    ],
                    "iChar": 1505,
                    "jChar": 1514
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_test"
                    ],
                    "iChar": 399,
                    "jChar": 408
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_comment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "comment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def comment(self): return \"//\"",
                    "language": "py",
                    "iLine": 273,
                    "jLine": 273
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_multiLineComment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "multiLineComment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def multiLineComment(self): return \"/*\"",
                    "language": "py",
                    "iLine": 274,
                    "jLine": 274
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_endMultiLineComment",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "endMultiLineComment",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def endMultiLineComment(self): return \"*/\"",
                    "language": "py",
                    "iLine": 275,
                    "jLine": 275
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_checkOpenQuote",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "checkOpenQuote",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def checkOpenQuote(self, str, ic):\n    if str[ic] == '\"': return ('\"', '\"')\n    elif str[ic] == '`': return ('`','`')\n    elif str[ic] == '\\'': return ('\\'', '\\'')\n    return (\"\", \"\")",
                    "language": "py",
                    "iLine": 276,
                    "jLine": 280
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_constructorName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "constructorName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def constructorName(self) -> str:\n    return \"constructor\"",
                    "language": "py",
                    "iLine": 281,
                    "jLine": 282
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_definitionKeywords",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "definitionKeywords",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def definitionKeywords(self) -> List[str]:\n    return [\"function\", \"class\"]",
                    "language": "py",
                    "iLine": 283,
                    "jLine": 284
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_thisName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "thisName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def thisName(self) -> str:  # return \"this\" or \"self\" or whatever\n    return 'this'",
                    "language": "py",
                    "iLine": 285,
                    "jLine": 286
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_computeDependencies"
                    ],
                    "iChar": 688,
                    "jChar": 696
                }
            ],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_importCards",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "importCards",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def importCards(self, project, module, text, minIndent) -> List[Card]:\n    lines = text.split(\"\\n\")\n    cards = []\n    card = None\n    prevLine = \"\"\n    indent = 0\n    for iLine in range(0, len(lines)):\n        line = lines[iLine]\n        if indent >= minIndent: # only consider lines above the min indent level\n            # should we start a new card?\n            # YES if current line has indent = minIndent, line is not blank and previous line is not a comment\n            # NO if the line is just \"}\"\n            blank = (line.strip()==\"\")\n            singleCloseBrace = (line.strip() == \"}\")\n            prevComment = prevLine.strip().startswith(\"//\")\n            if indent == minIndent and (not blank) and (not prevComment) and (not singleCloseBrace):\n                card = Card(project, module, line, self, iLine+1)\n                cards.append(card)\n            elif card:\n                card.code[0].text += \"\\n\" + line\n                card.code[0].jLine = iLine + 1\n        indent = indent + countBraces(line)\n        prevLine = line\n    return cards",
                    "language": "py",
                    "iLine": 287,
                    "jLine": 310
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 64,
                    "jChar": 68
                },
                {
                    "targets": [
                        "py_firefly_firefly_class_Card"
                    ],
                    "iChar": 782,
                    "jChar": 786
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_countBraces"
                    ],
                    "iChar": 1005,
                    "jChar": 1016
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_firefly_method_Typescript_findTypeAndName",
            "language": "py",
            "module": "firefly",
            "kind": "method",
            "name": "findTypeAndName",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def findTypeAndName(self, card) -> (str, str):\n    lines = card.code[0].text.split(\"\\n\")\n    for line in lines:\n        l = line.strip()\n        icom = l.find(\"//\")\n        if icom>=0: l = l[0 : icom]\n        if l != \"\":\n            w = l.split(\" \")\n            classIndex = findString(w, \"class\")\n            if classIndex >= 0:\n                return (\"class\", w[classIndex+1])\n            funcIndex = findString(w, \"function\")\n            if funcIndex >= 0:\n                return (\"function\", w[funcIndex+1].split(\"(\")[0].split(\"<\")[0])\n            elif card.parent != None:\n                if \"(\" in w[0]:\n                    return (\"method\", w[0].split(\"(\")[0])\n                else:\n                    return (\"property\", w[0].split(\":\")[0])\n            elif w[0]==\"var\" or w[0]==\"let\" or w[0]==\"const\":\n                return (\"global\", w[1].split(\":\")[0])\n    return (\"unknown\", \"unknown\")",
                    "language": "py",
                    "iLine": 311,
                    "jLine": 332
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_function_findString"
                    ],
                    "iChar": 275,
                    "jChar": 285
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_findString"
                    ],
                    "iChar": 404,
                    "jChar": 414
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_firefly_class_Typescript"
        },
        {
            "uid": "py_firefly_vectors_global_import numpy as np",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "import numpy as np",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import numpy as np",
                    "language": "py",
                    "iLine": 7,
                    "jLine": 7
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_from sentence_transformers import SentenceTransformer",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "from sentence_transformers import SentenceTransformer",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from sentence_transformers import SentenceTransformer",
                    "language": "py",
                    "iLine": 8,
                    "jLine": 8
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_import service",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "import service",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import service",
                    "language": "py",
                    "iLine": 9,
                    "jLine": 9
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_import hashlib",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "import hashlib",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import hashlib",
                    "language": "py",
                    "iLine": 10,
                    "jLine": 10
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_import os",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "import os",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import os",
                    "language": "py",
                    "iLine": 11,
                    "jLine": 11
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_import json",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "import json",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import json",
                    "language": "py",
                    "iLine": 12,
                    "jLine": 12
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_global sbertModel",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "global sbertModel",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "global sbertModel",
                    "language": "py",
                    "iLine": 14,
                    "jLine": 14
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_global_sbertModel"
                    ],
                    "iChar": 7,
                    "jChar": 17
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_sbertModel",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "sbertModel",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "sbertModel = None",
                    "language": "py",
                    "iLine": 15,
                    "jLine": 15
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_global_global sbertModel"
                    ],
                    "iChar": 7,
                    "jChar": 17
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_sbertEmbedding"
                    ],
                    "iChar": 36,
                    "jChar": 46
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 59,
                    "jChar": 69
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 74,
                    "jChar": 84
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_global embeddings",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "global embeddings",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "global embeddings",
                    "language": "py",
                    "iLine": 17,
                    "jLine": 17
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 7,
                    "jChar": 17
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_embeddings",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "embeddings",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "embeddings = {} # key => { value, vector }",
                    "language": "py",
                    "iLine": 18,
                    "jLine": 18
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_global_global embeddings"
                    ],
                    "iChar": 7,
                    "jChar": 17
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 37,
                    "jChar": 47
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 62,
                    "jChar": 72
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 146,
                    "jChar": 156
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 215,
                    "jChar": 225
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 271,
                    "jChar": 281
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 483,
                    "jChar": 493
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_search"
                    ],
                    "iChar": 276,
                    "jChar": 286
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 308,
                    "jChar": 318
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 323,
                    "jChar": 333
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 675,
                    "jChar": 685
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_global_root",
            "language": "py",
            "module": "vectors",
            "kind": "global",
            "name": "root",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "root = \"/Users/asnaroo/desktop/experiments/firefly/data/vectors\"",
                    "language": "py",
                    "iLine": 20,
                    "jLine": 20
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importFolders"
                    ],
                    "iChar": 95,
                    "jChar": 99
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_save"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_load"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 107,
                    "jChar": 111
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 159,
                    "jChar": 163
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_startFirefly"
                    ],
                    "iChar": 74,
                    "jChar": 78
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_save"
                    ],
                    "iChar": 41,
                    "jChar": 45
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 177,
                    "jChar": 181
                },
                {
                    "targets": [
                        "py_firefly_service_global_global listen_port, app_name, public, root"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1725,
                    "jChar": 1729
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 77,
                    "jChar": 81
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 129,
                    "jChar": 133
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 160,
                    "jChar": 164
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 59,
                    "jChar": 63
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 74,
                    "jChar": 78
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_add",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "add",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def add(key: str, value):\n    global embeddings\n    if key in embeddings:   # exists already\n        #print(\"already exists\")\n        oldValue = (embeddings[key])['value']\n        if oldValue != value:\n            (embeddings[key])['value'] = value\n            save(key, embeddings[key])\n    else:                   # compute embedding\n        #print(\"new: computing embedding vector\")\n        vector = sbertEmbedding(key)\n        data = { 'value': value, 'vector': vector }\n        embeddings[key] = data\n        save(key, data)\n    return { 'result' : 'success' }",
                    "language": "py",
                    "iLine": 22,
                    "jLine": 36
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 37,
                    "jChar": 47
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 62,
                    "jChar": 72
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 146,
                    "jChar": 156
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 215,
                    "jChar": 225
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_save",
                        "py_firefly_vectors_function_save"
                    ],
                    "iChar": 261,
                    "jChar": 265
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 271,
                    "jChar": 281
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_sbertEmbedding"
                    ],
                    "iChar": 403,
                    "jChar": 417
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 483,
                    "jChar": 493
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_save",
                        "py_firefly_vectors_function_save"
                    ],
                    "iChar": 514,
                    "jChar": 518
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_saveEmbeddings"
                    ],
                    "iChar": 143,
                    "jChar": 146
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_search",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "search",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def search(query: str, nResults: int):\n    searchVec = sbertEmbedding(query)\n    similarities = [ { 'key': key, \n                       'value': data['value'], \n                       'sim': cosine_similarity(searchVec, data['vector']) } \n                    for key, data in embeddings.items()]\n    similarities.sort(key=lambda x: x['sim'], reverse=True)\n    return { 'results' : similarities[:nResults] }",
                    "language": "py",
                    "iLine": 38,
                    "jLine": 45
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_function_sbertEmbedding"
                    ],
                    "iChar": 55,
                    "jChar": 69
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_cosine_similarity"
                    ],
                    "iChar": 191,
                    "jChar": 208
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 276,
                    "jChar": 286
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_search"
                    ],
                    "iChar": 38,
                    "jChar": 44
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_save",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "save",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def save(key: str, data):\n    filename = root + \"/\" + stringToHash(key) + \".json\"\n    #print(\"saving\", filename)\n    folder = os.path.dirname(filename)\n    if folder != '':\n        os.makedirs(folder, exist_ok=True)\n    value = data['value']\n    list = (data['vector']).tolist()        # stored as numpy array in memory\n    obj = { 'key' : key, 'data' : { 'value' : value, 'vector' : list } }\n    with open(filename, 'w') as file:\n        json.dump(obj, file)",
                    "language": "py",
                    "iLine": 47,
                    "jLine": 57
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 41,
                    "jChar": 45
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_stringToHash"
                    ],
                    "iChar": 54,
                    "jChar": 66
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 261,
                    "jChar": 265
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 514,
                    "jChar": 518
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_sbertEmbedding",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "sbertEmbedding",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def sbertEmbedding(key):\n    return sbertModel.encode([ key ])[0]",
                    "language": "py",
                    "iLine": 59,
                    "jLine": 60
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_global_sbertModel"
                    ],
                    "iChar": 36,
                    "jChar": 46
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_function_add"
                    ],
                    "iChar": 403,
                    "jChar": 417
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_search"
                    ],
                    "iChar": 55,
                    "jChar": 69
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_cosine_similarity",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "cosine_similarity",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def cosine_similarity(v1: np.ndarray, v2: np.ndarray) -> float:\n    dot_product = np.dot(v1, v2)\n    norm_v1 = np.linalg.norm(v1)\n    norm_v2 = np.linalg.norm(v2)\n    return (dot_product / (norm_v1 * norm_v2)).item()",
                    "language": "py",
                    "iLine": 62,
                    "jLine": 66
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_function_search"
                    ],
                    "iChar": 191,
                    "jChar": 208
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_load",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "load",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def load():\n    print(\"loading sbert model...\")\n    global sbertModel\n    sbertModel = SentenceTransformer('paraphrase-MiniLM-L6-v2')\n    print(\"loading vectors...\")\n    path = root\n    try:\n        files = os.listdir(path)\n    except:\n        files = []\n    print(\"found\", len(files), \"objects\")\n    global embeddings\n    embeddings = {}\n    for f in files:\n        filepath = path + \"/\" + f\n        with open(filepath, 'r') as file:\n            obj = json.load(file) # key, data (value, vector)\n            key = obj['key']\n            data = obj['data']\n            value = data['value']\n            list = data['vector']\n            npvector = np.array(list)\n            embeddings[key] = { 'value': value, 'vector': npvector }",
                    "language": "py",
                    "iLine": 68,
                    "jLine": 90
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_vectors_global_sbertModel"
                    ],
                    "iChar": 59,
                    "jChar": 69
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_sbertModel"
                    ],
                    "iChar": 74,
                    "jChar": 84
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 177,
                    "jChar": 181
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 308,
                    "jChar": 318
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 323,
                    "jChar": 333
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_load"
                    ],
                    "iChar": 458,
                    "jChar": 462
                },
                {
                    "targets": [
                        "py_firefly_vectors_global_embeddings"
                    ],
                    "iChar": 675,
                    "jChar": 685
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_readJsonFromFile"
                    ],
                    "iChar": 90,
                    "jChar": 94
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_startFirefly"
                    ],
                    "iChar": 32,
                    "jChar": 36
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_vectors_function_stringToHash",
            "language": "py",
            "module": "vectors",
            "kind": "function",
            "name": "stringToHash",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def stringToHash(input_string):\n    \"\"\"Convert an arbitrary length string to a unique hash suitable for a filename.\"\"\"\n    hash_obj = hashlib.sha256()\n    hash_obj.update(input_string.encode('utf-8'))\n    hash_hex = hash_obj.hexdigest()\n    return hash_hex[0:32]",
                    "language": "py",
                    "iLine": 92,
                    "jLine": 97
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_vectors_function_save"
                    ],
                    "iChar": 54,
                    "jChar": 66
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_from inspect import signature",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "from inspect import signature",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from inspect import signature",
                    "language": "py",
                    "iLine": 9,
                    "jLine": 9
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import http.server",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import http.server",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import http.server",
                    "language": "py",
                    "iLine": 10,
                    "jLine": 10
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import socketserver",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import socketserver",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import socketserver",
                    "language": "py",
                    "iLine": 11,
                    "jLine": 11
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import json",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import json",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import json",
                    "language": "py",
                    "iLine": 12,
                    "jLine": 12
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import os",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import os",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import os",
                    "language": "py",
                    "iLine": 13,
                    "jLine": 13
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import subprocess",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import subprocess",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import subprocess",
                    "language": "py",
                    "iLine": 14,
                    "jLine": 14
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import threading",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import threading",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import threading",
                    "language": "py",
                    "iLine": 15,
                    "jLine": 15
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_from urllib.parse import parse_qs, urlparse",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "from urllib.parse import parse_qs, urlparse",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from urllib.parse import parse_qs, urlparse",
                    "language": "py",
                    "iLine": 16,
                    "jLine": 16
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_from io import BytesIO",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "from io import BytesIO",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from io import BytesIO",
                    "language": "py",
                    "iLine": 17,
                    "jLine": 17
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import socket",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import socket",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import socket",
                    "language": "py",
                    "iLine": 18,
                    "jLine": 18
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_from typing import Tuple",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "from typing import Tuple",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from typing import Tuple",
                    "language": "py",
                    "iLine": 19,
                    "jLine": 19
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import re",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import re",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import re",
                    "language": "py",
                    "iLine": 20,
                    "jLine": 20
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import select",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import select",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import select",
                    "language": "py",
                    "iLine": 21,
                    "jLine": 21
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import inspect",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import inspect",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import inspect",
                    "language": "py",
                    "iLine": 22,
                    "jLine": 22
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import sys",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import sys",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import sys",
                    "language": "py",
                    "iLine": 23,
                    "jLine": 23
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import time",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import time",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import time",
                    "language": "py",
                    "iLine": 24,
                    "jLine": 24
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_import signal",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "import signal",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "import signal",
                    "language": "py",
                    "iLine": 25,
                    "jLine": 25
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_from watchdog.observers import Observer",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "from watchdog.observers import Observer",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from watchdog.observers import Observer",
                    "language": "py",
                    "iLine": 26,
                    "jLine": 26
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_from watchdog.events import FileSystemEventHandler",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "from watchdog.events import FileSystemEventHandler",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "from watchdog.events import FileSystemEventHandler",
                    "language": "py",
                    "iLine": 27,
                    "jLine": 27
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_global listen_port, app_name, public, root",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "global listen_port, app_name, public, root",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "global listen_port, app_name, public, root",
                    "language": "py",
                    "iLine": 29,
                    "jLine": 29
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 7,
                    "jChar": 18
                },
                {
                    "targets": [
                        "py_firefly_service_global_app_name"
                    ],
                    "iChar": 20,
                    "jChar": 28
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 30,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 38,
                    "jChar": 42
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_listen_port",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "listen_port",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "listen_port = 0",
                    "language": "py",
                    "iLine": 30,
                    "jLine": 30
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_global_global listen_port, app_name, public, root"
                    ],
                    "iChar": 7,
                    "jChar": 18
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1694,
                    "jChar": 1705
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 46,
                    "jChar": 57
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 106,
                    "jChar": 117
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 28,
                    "jChar": 39
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 214,
                    "jChar": 225
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 43,
                    "jChar": 54
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_app_name",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "app_name",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "app_name = \"\"",
                    "language": "py",
                    "iLine": 31,
                    "jLine": 31
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_global_global listen_port, app_name, public, root"
                    ],
                    "iChar": 20,
                    "jChar": 28
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1707,
                    "jChar": 1715
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 59,
                    "jChar": 67
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 86,
                    "jChar": 94
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 41,
                    "jChar": 49
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 56,
                    "jChar": 64
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_public",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "public",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "public = \"\"",
                    "language": "py",
                    "iLine": 32,
                    "jLine": 32
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_global_global listen_port, app_name, public, root"
                    ],
                    "iChar": 30,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1717,
                    "jChar": 1723
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 2010,
                    "jChar": 2016
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 2099,
                    "jChar": 2105
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 69,
                    "jChar": 75
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 151,
                    "jChar": 157
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 51,
                    "jChar": 57
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 66,
                    "jChar": 72
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 327,
                    "jChar": 333
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 408,
                    "jChar": 414
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_root",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "root",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "root = \"\"",
                    "language": "py",
                    "iLine": 33,
                    "jLine": 33
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_importFolders"
                    ],
                    "iChar": 95,
                    "jChar": 99
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_save"
                    ],
                    "iChar": 32,
                    "jChar": 36
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_load"
                    ],
                    "iChar": 27,
                    "jChar": 31
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 107,
                    "jChar": 111
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_importCardsFromFile"
                    ],
                    "iChar": 159,
                    "jChar": 163
                },
                {
                    "targets": [
                        "py_firefly_firefly_function_startFirefly"
                    ],
                    "iChar": 74,
                    "jChar": 78
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_save"
                    ],
                    "iChar": 41,
                    "jChar": 45
                },
                {
                    "targets": [
                        "py_firefly_vectors_function_load"
                    ],
                    "iChar": 177,
                    "jChar": 181
                },
                {
                    "targets": [
                        "py_firefly_service_global_global listen_port, app_name, public, root"
                    ],
                    "iChar": 38,
                    "jChar": 42
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1725,
                    "jChar": 1729
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 77,
                    "jChar": 81
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 129,
                    "jChar": 133
                },
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 160,
                    "jChar": 164
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 59,
                    "jChar": 63
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 74,
                    "jChar": 78
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_global functions",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "global functions",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "global functions",
                    "language": "py",
                    "iLine": 35,
                    "jLine": 35
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 7,
                    "jChar": 16
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_global_functions",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "functions",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "functions = {}",
                    "language": "py",
                    "iLine": 36,
                    "jLine": 36
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_global_global functions"
                    ],
                    "iChar": 7,
                    "jChar": 16
                },
                {
                    "targets": [
                        "py_firefly_service_function_register"
                    ],
                    "iChar": 24,
                    "jChar": 33
                },
                {
                    "targets": [
                        "py_firefly_service_function_call"
                    ],
                    "iChar": 107,
                    "jChar": 116
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 953,
                    "jChar": 962
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 986,
                    "jChar": 995
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_do_POST"
                    ],
                    "iChar": 302,
                    "jChar": 311
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_do_POST"
                    ],
                    "iChar": 331,
                    "jChar": 340
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_function_register",
            "language": "py",
            "module": "service",
            "kind": "function",
            "name": "register",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def register(func):\n    functions[func.__name__] = { 'call' : func, 'args' :  list(signature(func).parameters) }\n    print(f\"registered {func.__name__}\")\n    return func",
                    "language": "py",
                    "iLine": 38,
                    "jLine": 41
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 24,
                    "jChar": 33
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_global_@service.register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_@service.register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_@service.register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_@service.register"
                    ],
                    "iChar": 9,
                    "jChar": 17
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_function_call",
            "language": "py",
            "module": "service",
            "kind": "function",
            "name": "call",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def call(func, args):\n    print(f\"calling {func}\")\n    #print(f\"calling {func} with {args}\")\n    result = (functions[func])['call'](**args)\n    #print(f\"result: {result}\")\n    return result  ",
                    "language": "py",
                    "iLine": 43,
                    "jLine": 48
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 107,
                    "jChar": 116
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 1024,
                    "jChar": 1028
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_do_POST"
                    ],
                    "iChar": 365,
                    "jChar": 369
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_class_RestartHandler",
            "language": "py",
            "module": "service",
            "kind": "class",
            "name": "RestartHandler",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class RestartHandler(FileSystemEventHandler):\n    def __init__(self, observer, script_to_run):\n        self.observer = observer\n        self.script_to_run = script_to_run\n    def on_modified(self, event):\n        if event.src_path.endswith('.py'):\n            print('Detected changes in:', event.src_path)\n            self.restart_script()\n    def restart_script(self):\n        self.observer.stop()\n        os.execv(sys.executable, ['python'] + [self.script_to_run])",
                    "language": "py",
                    "iLine": 50,
                    "jLine": 62
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 223,
                    "jChar": 237
                }
            ],
            "children": [
                "py_firefly_service_method_RestartHandler___init__",
                "py_firefly_service_method_RestartHandler_on_modified",
                "py_firefly_service_method_RestartHandler_restart_script"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_class_CustomHTTPRequestHandler",
            "language": "py",
            "module": "service",
            "kind": "class",
            "name": "CustomHTTPRequestHandler",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):\n    def do_OPTIONS(self):\n        self.send_response(200, \"ok\")\n        self.send_header(\"Access-Control-Allow-Origin\", \"http://localhost:8000\")\n        self.send_header(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\")\n        self.send_header(\"Access-Control-Allow-Headers\", \"Content-Type\")\n        self.end_headers()\n    def do_GET(self):\n        path = self.translate_path(self.path)\n        if path is None:\n            print(\"notfound:\", path)\n            self.send_error(404, \"File not found\")\n            return\n        super().do_GET()\n    def do_POST(self):\n        content_length = int(self.headers.get(\"Content-Length\", \"0\"))\n        raw_data = self.rfile.read(content_length).decode(\"utf-8\")\n        post_data = json.loads(raw_data)\n        if self.path == f\"/{app_name}\":\n            func = post_data['func']\n            args = post_data['args']\n            global functions\n            if func in functions:\n                response = call(func, args)\n                self.respond(response)\n            else:\n                self.send_error(404, \"Function not found\")\n        else:\n            self.send_error(404, \"Endpoint not found\")\n    def respond(self, output):\n        encoded_output = json.dumps(output).encode(\"utf-8\")\n        self.send_response(200)\n        self.send_header(\"Content-Type\", \"application/json; charset=utf-8\")\n        self.send_header(\"Content-Length\", str(len(encoded_output)))\n        self.send_header(\"Access-Control-Allow-Origin\", \"http://localhost:8000\")\n        self.end_headers()\n        self.wfile.write(encoded_output)\n    def translate_path(self, path):\n        global listen_port, app_name, public, root\n        #print(\"requested:\", path)\n        path = urlparse(path).path\n        #print(\"after urlparse\", path)\n        path = os.path.normpath(path)\n        #print(\"after normpath\", path)\n        _, ext = os.path.splitext(path)\n        if (path==f\"/{app_name}\"):\n            path = public + \"/index.html\"\n        elif path.startswith(f\"/{app_name}/\"):\n            path = public + path.replace(f\"{app_name}/\", \"\", 1)\n        else:\n            return None\n        print(\"resolved path:\", path)\n        if not os.path.exists(path):\n            return None\n        # Serve files from the specified folder\n        return path",
                    "language": "py",
                    "iLine": 65,
                    "jLine": 127
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_do_GET"
                    ],
                    "iChar": 610,
                    "jChar": 616
                },
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 953,
                    "jChar": 962
                },
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 986,
                    "jChar": 995
                },
                {
                    "targets": [
                        "py_firefly_service_function_call"
                    ],
                    "iChar": 1024,
                    "jChar": 1028
                },
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 1694,
                    "jChar": 1705
                },
                {
                    "targets": [
                        "py_firefly_service_global_app_name"
                    ],
                    "iChar": 1707,
                    "jChar": 1715
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 1717,
                    "jChar": 1723
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 1725,
                    "jChar": 1729
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 2010,
                    "jChar": 2016
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 2099,
                    "jChar": 2105
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 157,
                    "jChar": 181
                }
            ],
            "children": [
                "py_firefly_service_method_CustomHTTPRequestHandler_do_OPTIONS",
                "py_firefly_service_method_CustomHTTPRequestHandler_do_GET",
                "py_firefly_service_method_CustomHTTPRequestHandler_do_POST",
                "py_firefly_service_method_CustomHTTPRequestHandler_respond",
                "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_function_start",
            "language": "py",
            "module": "service",
            "kind": "function",
            "name": "start",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def start(name, port, rootFolder):\n    global listen_port, app_name, public, root\n    app_name = name\n    listen_port = port\n    root = rootFolder\n    public = root + \"/public\"\n    observer = Observer()\n    event_handler = RestartHandler(observer, sys.argv[0])\n    observer.schedule(event_handler, path='.', recursive=True)\n    try:\n        observer.start()\n        runServer()\n    except KeyboardInterrupt:\n        observer.stop()\n    observer.join()",
                    "language": "py",
                    "iLine": 129,
                    "jLine": 144
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 46,
                    "jChar": 57
                },
                {
                    "targets": [
                        "py_firefly_service_global_app_name"
                    ],
                    "iChar": 59,
                    "jChar": 67
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 69,
                    "jChar": 75
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 77,
                    "jChar": 81
                },
                {
                    "targets": [
                        "py_firefly_service_global_app_name"
                    ],
                    "iChar": 86,
                    "jChar": 94
                },
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 106,
                    "jChar": 117
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 129,
                    "jChar": 133
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 151,
                    "jChar": 157
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 160,
                    "jChar": 164
                },
                {
                    "targets": [
                        "py_firefly_service_class_RestartHandler"
                    ],
                    "iChar": 223,
                    "jChar": 237
                },
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 366,
                    "jChar": 375
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_firefly_function_startFirefly"
                    ],
                    "iChar": 51,
                    "jChar": 56
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_class_ReusableTCPServer",
            "language": "py",
            "module": "service",
            "kind": "class",
            "name": "ReusableTCPServer",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "class ReusableTCPServer(socketserver.TCPServer):\n    allow_reuse_address = True",
                    "language": "py",
                    "iLine": 146,
                    "jLine": 147
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_ReusableTCPServer_allow_reuse_address"
                    ],
                    "iChar": 53,
                    "jChar": 72
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_function_runServer"
                    ],
                    "iChar": 191,
                    "jChar": 208
                }
            ],
            "children": [
                "py_firefly_service_global_ReusableTCPServer_allow_reuse_address"
            ],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_function_runServer",
            "language": "py",
            "module": "service",
            "kind": "function",
            "name": "runServer",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def runServer():\n    global listen_port, app_name, public, root\n    print(f\"starting service '{app_name}' listening on port {listen_port}...\")\n    Handler = CustomHTTPRequestHandler\n    with ReusableTCPServer((\"\", listen_port), Handler) as httpd:\n        print(f\"Serving on port {listen_port}\")\n        httpd.serve_forever()",
                    "language": "py",
                    "iLine": 149,
                    "jLine": 155
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 28,
                    "jChar": 39
                },
                {
                    "targets": [
                        "py_firefly_service_global_app_name"
                    ],
                    "iChar": 41,
                    "jChar": 49
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 51,
                    "jChar": 57
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 59,
                    "jChar": 63
                },
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 157,
                    "jChar": 181
                },
                {
                    "targets": [
                        "py_firefly_service_class_ReusableTCPServer"
                    ],
                    "iChar": 191,
                    "jChar": 208
                },
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 214,
                    "jChar": 225
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_function_start"
                    ],
                    "iChar": 366,
                    "jChar": 375
                }
            ],
            "children": [],
            "parent": "null"
        },
        {
            "uid": "py_firefly_service_method_RestartHandler_on_modified",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "on_modified",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def on_modified(self, event):\n    if event.src_path.endswith('.py'):\n        print('Detected changes in:', event.src_path)\n        self.restart_script()",
                    "language": "py",
                    "iLine": 56,
                    "jLine": 59
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_method_RestartHandler_restart_script"
                    ],
                    "iChar": 136,
                    "jChar": 150
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_service_class_RestartHandler"
        },
        {
            "uid": "py_firefly_service_method_RestartHandler_restart_script",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "restart_script",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def restart_script(self):\n    self.observer.stop()\n    os.execv(sys.executable, ['python'] + [self.script_to_run])",
                    "language": "py",
                    "iLine": 60,
                    "jLine": 62
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_method_RestartHandler_on_modified"
                    ],
                    "iChar": 136,
                    "jChar": 150
                }
            ],
            "children": [],
            "parent": "py_firefly_service_class_RestartHandler"
        },
        {
            "uid": "py_firefly_service_method_CustomHTTPRequestHandler_do_OPTIONS",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "do_OPTIONS",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def do_OPTIONS(self):\n    self.send_response(200, \"ok\")\n    self.send_header(\"Access-Control-Allow-Origin\", \"http://localhost:8000\")\n    self.send_header(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS\")\n    self.send_header(\"Access-Control-Allow-Headers\", \"Content-Type\")\n    self.end_headers()",
                    "language": "py",
                    "iLine": 68,
                    "jLine": 73
                }
            ],
            "dependsOn": [],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_service_class_CustomHTTPRequestHandler"
        },
        {
            "uid": "py_firefly_service_method_CustomHTTPRequestHandler_do_GET",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "do_GET",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def do_GET(self):\n    path = self.translate_path(self.path)\n    if path is None:\n        print(\"notfound:\", path)\n        self.send_error(404, \"File not found\")\n        return\n    super().do_GET()",
                    "language": "py",
                    "iLine": 74,
                    "jLine": 80
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_translate_path"
                    ],
                    "iChar": 34,
                    "jChar": 48
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_class_CustomHTTPRequestHandler"
                    ],
                    "iChar": 610,
                    "jChar": 616
                }
            ],
            "children": [],
            "parent": "py_firefly_service_class_CustomHTTPRequestHandler"
        },
        {
            "uid": "py_firefly_service_method_CustomHTTPRequestHandler_do_POST",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "do_POST",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def do_POST(self):\n    content_length = int(self.headers.get(\"Content-Length\", \"0\"))\n    raw_data = self.rfile.read(content_length).decode(\"utf-8\")\n    post_data = json.loads(raw_data)\n    if self.path == f\"/{app_name}\":\n        func = post_data['func']\n        args = post_data['args']\n        global functions\n        if func in functions:\n            response = call(func, args)\n            self.respond(response)\n        else:\n            self.send_error(404, \"Function not found\")\n    else:\n        self.send_error(404, \"Endpoint not found\")",
                    "language": "py",
                    "iLine": 81,
                    "jLine": 95
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 302,
                    "jChar": 311
                },
                {
                    "targets": [
                        "py_firefly_service_global_functions"
                    ],
                    "iChar": 331,
                    "jChar": 340
                },
                {
                    "targets": [
                        "py_firefly_service_function_call"
                    ],
                    "iChar": 365,
                    "jChar": 369
                },
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_respond"
                    ],
                    "iChar": 399,
                    "jChar": 406
                }
            ],
            "dependents": [],
            "children": [],
            "parent": "py_firefly_service_class_CustomHTTPRequestHandler"
        },
        {
            "uid": "py_firefly_service_method_CustomHTTPRequestHandler_respond",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "respond",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def respond(self, output):\n    encoded_output = json.dumps(output).encode(\"utf-8\")\n    self.send_response(200)\n    self.send_header(\"Content-Type\", \"application/json; charset=utf-8\")\n    self.send_header(\"Content-Length\", str(len(encoded_output)))\n    self.send_header(\"Access-Control-Allow-Origin\", \"http://localhost:8000\")\n    self.end_headers()\n    self.wfile.write(encoded_output)",
                    "language": "py",
                    "iLine": 96,
                    "jLine": 103
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_do_POST"
                    ],
                    "iChar": 399,
                    "jChar": 406
                }
            ],
            "children": [],
            "parent": "py_firefly_service_class_CustomHTTPRequestHandler"
        },
        {
            "uid": "py_firefly_service_method_CustomHTTPRequestHandler_translate_path",
            "language": "py",
            "module": "service",
            "kind": "method",
            "name": "translate_path",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "def translate_path(self, path):\n    global listen_port, app_name, public, root\n    #print(\"requested:\", path)\n    path = urlparse(path).path\n    #print(\"after urlparse\", path)\n    path = os.path.normpath(path)\n    #print(\"after normpath\", path)\n    _, ext = os.path.splitext(path)\n    if (path==f\"/{app_name}\"):\n        path = public + \"/index.html\"\n    elif path.startswith(f\"/{app_name}/\"):\n        path = public + path.replace(f\"{app_name}/\", \"\", 1)\n    else:\n        return None\n    print(\"resolved path:\", path)\n    if not os.path.exists(path):\n        return None\n    # Serve files from the specified folder\n    return path",
                    "language": "py",
                    "iLine": 104,
                    "jLine": 122
                }
            ],
            "dependsOn": [
                {
                    "targets": [
                        "py_firefly_service_global_listen_port"
                    ],
                    "iChar": 43,
                    "jChar": 54
                },
                {
                    "targets": [
                        "py_firefly_service_global_app_name"
                    ],
                    "iChar": 56,
                    "jChar": 64
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 66,
                    "jChar": 72
                },
                {
                    "targets": [
                        "py_firefly_firefly_global_root",
                        "py_firefly_vectors_global_root",
                        "py_firefly_service_global_root"
                    ],
                    "iChar": 74,
                    "jChar": 78
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 327,
                    "jChar": 333
                },
                {
                    "targets": [
                        "py_firefly_service_global_public"
                    ],
                    "iChar": 408,
                    "jChar": 414
                }
            ],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_method_CustomHTTPRequestHandler_do_GET"
                    ],
                    "iChar": 34,
                    "jChar": 48
                }
            ],
            "children": [],
            "parent": "py_firefly_service_class_CustomHTTPRequestHandler"
        },
        {
            "uid": "py_firefly_service_global_ReusableTCPServer_allow_reuse_address",
            "language": "py",
            "module": "service",
            "kind": "global",
            "name": "allow_reuse_address",
            "purpose": "",
            "examples": "",
            "inputs": "",
            "outputs": "",
            "code": [
                {
                    "text": "allow_reuse_address = True",
                    "language": "py",
                    "iLine": 149,
                    "jLine": 149
                }
            ],
            "dependsOn": [],
            "dependents": [
                {
                    "targets": [
                        "py_firefly_service_class_ReusableTCPServer"
                    ],
                    "iChar": 53,
                    "jChar": 72
                }
            ],
            "children": [],
            "parent": "py_firefly_service_class_ReusableTCPServer"
        }
    ]
}